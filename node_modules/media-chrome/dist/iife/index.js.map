{
  "version": 3,
  "sources": ["../../src/js/index.js", "../../src/js/constants.js", "../../src/js/labels/labels.js", "../../src/js/utils/time.js", "../../src/js/utils/utils.js", "../../src/js/utils/element-utils.js", "../../src/js/utils/server-safe-globals.js", "../../src/js/media-chrome-button.js", "../../src/js/media-airplay-button.js", "../../src/js/media-cast-button.js", "../../src/js/media-gesture-receiver.js", "../../src/js/utils/resize-observer.js", "../../src/js/media-container.js", "../../src/js/utils/attribute-token-list.js", "../../src/js/utils/captions.js", "../../src/js/utils/fullscreen-api.js", "../../src/js/utils/platform-tests.js", "../../src/js/controller.js", "../../src/js/media-controller.js", "../../src/js/media-chrome-range.js", "../../src/js/media-control-bar.js", "../../src/js/media-text-display.js", "../../src/js/media-duration-display.js", "../../src/js/media-time-display.js", "../../src/js/media-captions-button.js", "../../src/js/media-seek-forward-button.js", "../../src/js/media-fullscreen-button.js", "../../src/js/media-live-button.js", "../../src/js/media-mute-button.js", "../../src/js/media-pip-button.js", "../../src/js/media-play-button.js", "../../src/js/media-playback-rate-button.js", "../../src/js/media-poster-image.js", "../../src/js/media-seek-backward-button.js", "../../src/js/media-preview-time-display.js", "../../src/js/media-preview-thumbnail.js", "../../src/js/media-preview-chapter-display.js", "../../src/js/utils/range-animation.js", "../../src/js/media-time-range.js", "../../src/js/media-loading-indicator.js", "../../src/js/media-volume-range.js"],
  "sourcesContent": ["export * as constants from './constants.js';\nexport { default as labels } from './labels/labels.js';\nexport * as timeUtils from './utils/time.js';\nimport MediaAirplayButton from './media-airplay-button.js';\nimport MediaCastButton from './media-cast-button.js';\nimport MediaChromeButton from './media-chrome-button.js';\nimport MediaGestureReceiver from './media-gesture-receiver.js';\nimport MediaController from './media-controller.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport MediaControlBar from './media-control-bar.js';\nimport MediaDurationDisplay from './media-duration-display.js';\nimport MediaTimeDisplay from './media-time-display.js';\nimport MediaCaptionsButton from './media-captions-button.js';\nimport MediaSeekForwardButton from './media-seek-forward-button.js';\nimport MediaFullscreenButton from './media-fullscreen-button.js';\nimport MediaLiveButton from './media-live-button.js';\nimport MediaMuteButton from './media-mute-button.js';\nimport MediaPipButton from './media-pip-button.js';\nimport MediaPlayButton from './media-play-button.js';\nimport MediaPlaybackRateButton from './media-playback-rate-button.js';\nimport MediaPosterImage from './media-poster-image.js';\nimport MediaSeekBackwardButton from './media-seek-backward-button.js';\nimport MediaPreviewTimeDisplay from './media-preview-time-display.js';\nimport MediaPreviewThumbnail from './media-preview-thumbnail.js';\nimport MediaPreviewChapterDisplay from './media-preview-chapter-display.js';\nimport MediaTimeRange from './media-time-range.js';\nimport MediaLoadingIndicator from './media-loading-indicator.js';\nimport MediaVolumeRange from './media-volume-range.js';\n\nexport {\n  MediaAirplayButton,\n  MediaCastButton,\n  MediaChromeButton,\n  MediaGestureReceiver,\n  MediaController,\n  MediaChromeRange,\n  MediaControlBar,\n  MediaDurationDisplay,\n  MediaTimeDisplay,\n  MediaCaptionsButton,\n  MediaSeekForwardButton,\n  MediaFullscreenButton,\n  MediaLiveButton,\n  MediaMuteButton,\n  MediaPipButton,\n  MediaPlayButton,\n  MediaPlaybackRateButton,\n  MediaPosterImage,\n  MediaSeekBackwardButton,\n  MediaPreviewTimeDisplay,\n  MediaPreviewThumbnail,\n  MediaPreviewChapterDisplay,\n  MediaTimeRange,\n  MediaLoadingIndicator,\n  MediaVolumeRange,\n};\n", "export const MediaUIEvents = {\n  MEDIA_PLAY_REQUEST: 'mediaplayrequest',\n  MEDIA_PAUSE_REQUEST: 'mediapauserequest',\n  MEDIA_MUTE_REQUEST: 'mediamuterequest',\n  MEDIA_UNMUTE_REQUEST: 'mediaunmuterequest',\n  MEDIA_VOLUME_REQUEST: 'mediavolumerequest',\n  MEDIA_SEEK_REQUEST: 'mediaseekrequest',\n  MEDIA_AIRPLAY_REQUEST: 'mediaairplayrequest',\n  MEDIA_ENTER_FULLSCREEN_REQUEST: 'mediaenterfullscreenrequest',\n  MEDIA_EXIT_FULLSCREEN_REQUEST: 'mediaexitfullscreenrequest',\n  MEDIA_PREVIEW_REQUEST: 'mediapreviewrequest',\n  MEDIA_ENTER_PIP_REQUEST: 'mediaenterpiprequest',\n  MEDIA_EXIT_PIP_REQUEST: 'mediaexitpiprequest',\n  MEDIA_ENTER_CAST_REQUEST: 'mediaentercastrequest',\n  MEDIA_EXIT_CAST_REQUEST: 'mediaexitcastrequest',\n  MEDIA_SHOW_TEXT_TRACKS_REQUEST: 'mediashowtexttracksrequest',\n  MEDIA_HIDE_TEXT_TRACKS_REQUEST: 'mediahidetexttracksrequest',\n  MEDIA_SHOW_SUBTITLES_REQUEST: 'mediashowsubtitlesrequest',\n  MEDIA_DISABLE_SUBTITLES_REQUEST: 'mediadisablesubtitlesrequest',\n  MEDIA_TOGGLE_SUBTITLES_REQUEST: 'mediatogglesubtitlesrequest',\n  MEDIA_PLAYBACK_RATE_REQUEST: 'mediaplaybackraterequest',\n  MEDIA_RENDITION_REQUEST: 'mediarenditionrequest',\n  MEDIA_AUDIO_TRACK_REQUEST: 'mediaaudiotrackrequest',\n  MEDIA_SEEK_TO_LIVE_REQUEST: 'mediaseektoliverequest',\n  REGISTER_MEDIA_STATE_RECEIVER: 'registermediastatereceiver',\n  UNREGISTER_MEDIA_STATE_RECEIVER: 'unregistermediastatereceiver',\n};\n\nexport const MediaStateReceiverAttributes = {\n  MEDIA_CHROME_ATTRIBUTES: 'mediachromeattributes',\n  MEDIA_CONTROLLER: 'mediacontroller',\n};\n\nexport const MediaUIProps = {\n  MEDIA_AIRPLAY_UNAVAILABLE: 'mediaAirplayUnavailable',\n  MEDIA_FULLSCREEN_UNAVAILABLE: 'mediaFullscreenUnavailable',\n  MEDIA_PIP_UNAVAILABLE: 'mediaPipUnavailable',\n  MEDIA_CAST_UNAVAILABLE: 'mediaCastUnavailable',\n  MEDIA_RENDITION_UNAVAILABLE: 'mediaRenditionUnavailable',\n  MEDIA_AUDIO_TRACK_UNAVAILABLE: 'mediaAudioTrackUnavailable',\n  MEDIA_PAUSED: 'mediaPaused',\n  MEDIA_HAS_PLAYED: 'mediaHasPlayed',\n  MEDIA_ENDED: 'mediaEnded',\n  MEDIA_MUTED: 'mediaMuted',\n  MEDIA_VOLUME_LEVEL: 'mediaVolumeLevel',\n  MEDIA_VOLUME: 'mediaVolume',\n  MEDIA_VOLUME_UNAVAILABLE: 'mediaVolumeUnavailable',\n  MEDIA_IS_PIP: 'mediaIsPip',\n  MEDIA_IS_CASTING: 'mediaIsCasting',\n  MEDIA_IS_AIRPLAYING: 'mediaIsAirplaying',\n  MEDIA_SUBTITLES_LIST: 'mediaSubtitlesList',\n  MEDIA_SUBTITLES_SHOWING: 'mediaSubtitlesShowing',\n  MEDIA_IS_FULLSCREEN: 'mediaIsFullscreen',\n  MEDIA_PLAYBACK_RATE: 'mediaPlaybackRate',\n  MEDIA_CURRENT_TIME: 'mediaCurrentTime',\n  MEDIA_DURATION: 'mediaDuration',\n  MEDIA_SEEKABLE: 'mediaSeekable',\n  MEDIA_PREVIEW_TIME: 'mediaPreviewTime',\n  MEDIA_PREVIEW_IMAGE: 'mediaPreviewImage',\n  MEDIA_PREVIEW_COORDS: 'mediaPreviewCoords',\n  MEDIA_PREVIEW_CHAPTER: 'mediaPreviewChapter',\n  MEDIA_LOADING: 'mediaLoading',\n  MEDIA_BUFFERED: 'mediaBuffered',\n  MEDIA_STREAM_TYPE: 'mediaStreamType',\n  MEDIA_TARGET_LIVE_WINDOW: 'mediaTargetLiveWindow',\n  MEDIA_TIME_IS_LIVE: 'mediaTimeIsLive',\n  MEDIA_RENDITION_LIST: 'mediaRenditionList',\n  MEDIA_RENDITION_SELECTED: 'mediaRenditionSelected',\n  MEDIA_AUDIO_TRACK_LIST: 'mediaAudioTrackList',\n  MEDIA_AUDIO_TRACK_ENABLED: 'mediaAudioTrackEnabled',\n  MEDIA_CHAPTERS_CUES: 'mediaChaptersCues',\n};\n\nconst MediaUIPropsEntries = /** @type {[keyof MediaUIProps, string][]} */ (\n  Object.entries(MediaUIProps)\n);\n\nexport const MediaUIAttributes =\n  /** @type {{ [k in keyof MediaUIProps]: string }} */ (\n    MediaUIPropsEntries.reduce((dictObj, [key, propName]) => {\n      dictObj[key] = `${propName.toLowerCase()}`;\n      return dictObj;\n    }, /** @type {Partial<{ [k in keyof MediaUIProps]: string }>} */ ({}))\n  );\n\nexport const MediaStateChangeEvents =\n  /** @type {{ [k in keyof MediaUIProps | 'USER_INACTIVE' | 'BREAKPOINTS_CHANGE' | 'BREAKPOINTS_COMPUTED']: string }} */ (\n    MediaUIPropsEntries.reduce(\n      (dictObj, [key, propName]) => {\n        dictObj[key] = `${propName.toLowerCase()}`;\n        return dictObj;\n      },\n      /** @type {Partial<{ [k in keyof MediaUIProps | 'USER_INACTIVE' | 'BREAKPOINTS_CHANGE' | 'BREAKPOINTS_COMPUTED']: string  }>} */ ({\n        USER_INACTIVE: 'userinactivechange',\n        BREAKPOINTS_CHANGE: 'breakpointchange',\n        BREAKPOINTS_COMPUTED: 'breakpointscomputed',\n      })\n    )\n  );\n\n// Maps from state change event type -> attribute name\nexport const StateChangeEventToAttributeMap = Object.entries(\n  MediaStateChangeEvents\n).reduce(\n  (mapObj, [key, eventType]) => {\n    const attrName = MediaUIAttributes[key];\n    if (attrName) {\n      mapObj[eventType] = attrName;\n    }\n    return mapObj;\n  },\n  { userinactivechange: 'userinactive' }\n);\n\n// Maps from attribute name -> state change event type\nexport const AttributeToStateChangeEventMap = Object.entries(\n  MediaUIAttributes\n).reduce(\n  (mapObj, [key, attrName]) => {\n    const evtType = MediaStateChangeEvents[key];\n    if (evtType) {\n      mapObj[attrName] = evtType;\n    }\n    return mapObj;\n  },\n  { userinactive: 'userinactivechange' }\n);\n\nexport const TextTrackKinds = {\n  SUBTITLES: 'subtitles',\n  CAPTIONS: 'captions',\n  DESCRIPTIONS: 'descriptions',\n  CHAPTERS: 'chapters',\n  METADATA: 'metadata',\n};\n\nexport const TextTrackModes = {\n  DISABLED: 'disabled',\n  HIDDEN: 'hidden',\n  SHOWING: 'showing',\n};\n\nexport const ReadyStates = {\n  HAVE_NOTHING: 0,\n  HAVE_METADATA: 1,\n  HAVE_CURRENT_DATA: 2,\n  HAVE_FUTURE_DATA: 3,\n  HAVE_ENOUGH_DATA: 4,\n};\n\nexport const PointerTypes = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch',\n};\n\nexport const AvailabilityStates = {\n  UNAVAILABLE: 'unavailable',\n  UNSUPPORTED: 'unsupported',\n};\n\nexport const StreamTypes = {\n  LIVE: 'live',\n  ON_DEMAND: 'on-demand',\n  UNKNOWN: 'unknown',\n};\n", "/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const nouns = {\n  AUDIO_PLAYER: () => 'audio player',\n  VIDEO_PLAYER: () => 'video player',\n  VOLUME: () => 'volume',\n  SEEK: () => 'seek',\n  CLOSED_CAPTIONS: () => 'closed captions',\n  PLAYBACK_RATE: ({ playbackRate = 1 } = {}) =>\n    `current playback rate ${playbackRate}`,\n  PLAYBACK_TIME: () => `playback time`,\n  MEDIA_LOADING: () => `media loading`,\n  SETTINGS: () => `settings`,\n  AUDIO_TRACKS: () => `audio tracks`,\n  QUALITY: () => `quality`,\n};\n\n/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const verbs = {\n  PLAY: () => 'play',\n  PAUSE: () => 'pause',\n  MUTE: () => 'mute',\n  UNMUTE: () => 'unmute',\n  ENTER_AIRPLAY: () => 'start airplay',\n  EXIT_AIRPLAY: () => 'stop airplay',\n  ENTER_CAST: () => 'start casting',\n  EXIT_CAST: () => 'stop casting',\n  ENTER_FULLSCREEN: () => 'enter fullscreen mode',\n  EXIT_FULLSCREEN: () => 'exit fullscreen mode',\n  ENTER_PIP: () => 'enter picture in picture mode',\n  EXIT_PIP: () => 'exit picture in picture mode',\n  SEEK_FORWARD_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek forward ${seekOffset} seconds`,\n  SEEK_BACK_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek back ${seekOffset} seconds`,\n  SEEK_LIVE: () => 'seek to live',\n  PLAYING_LIVE: () => 'playing live',\n};\n\nexport default {\n  ...nouns,\n  ...verbs,\n};\n", "import { isValidNumber } from './utils.js';\n\nconst UnitLabels = [\n  {\n    singular: 'hour',\n    plural: 'hours',\n  },\n  {\n    singular: 'minute',\n    plural: 'minutes',\n  },\n  {\n    singular: 'second',\n    plural: 'seconds',\n  },\n];\nconst toTimeUnitPhrase = (timeUnitValue, unitIndex) => {\n  const unitLabel =\n    timeUnitValue === 1\n      ? UnitLabels[unitIndex].singular\n      : UnitLabels[unitIndex].plural;\n\n  return `${timeUnitValue} ${unitLabel}`;\n};\n\n/**\n * This function converts numeric seconds into a phrase\n * @param {number} seconds - a (positive or negative) time, represented as seconds\n * @returns {string} The time, represented as a phrase of hours, minutes, and seconds\n */\nexport const formatAsTimePhrase = (seconds) => {\n  if (!isValidNumber(seconds)) return '';\n  const positiveSeconds = Math.abs(seconds);\n  const negative = positiveSeconds !== seconds;\n  const secondsDateTime = new Date(0, 0, 0, 0, 0, positiveSeconds, 0);\n  const timeParts = [\n    secondsDateTime.getHours(),\n    secondsDateTime.getMinutes(),\n    secondsDateTime.getSeconds(),\n  ];\n  // NOTE: Everything above should be useable for the `formatTime` function.\n\n  const timeString = timeParts\n    // Convert non-0 values to a string of the value plus its unit\n    .map(\n      (timeUnitValue, index) =>\n        timeUnitValue && toTimeUnitPhrase(timeUnitValue, index)\n    )\n    // Ignore/exclude any 0 values\n    .filter((x) => x)\n    // join into a single comma-separated string phrase\n    .join(', ');\n\n  // If the time was negative, assume it represents some remaining amount of time/\"count down\".\n  const negativeSuffix = negative ? ' remaining' : '';\n\n  return `${timeString}${negativeSuffix}`;\n};\n\nexport function formatTime(seconds, guide) {\n  // Handle negative values at the end\n  let negative = false;\n\n  if (seconds < 0) {\n    negative = true;\n    seconds = 0 - seconds;\n  }\n\n  seconds = seconds < 0 ? 0 : seconds;\n  /** @type {number|string} */\n  let s = Math.floor(seconds % 60);\n  /** @type {number|string} */\n  let m = Math.floor((seconds / 60) % 60);\n  /** @type {number|string} */\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor((guide / 60) % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '0';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return (negative ? '-' : '') + h + m + s;\n}\n\n/** @type {TimeRanges} */\nexport const emptyTimeRanges = Object.freeze({\n  length: 0,\n  start(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'start' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n  end(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'end' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n});\n\n/**\n * @argument {TimeRanges} [timeRanges]\n */\nexport function serializeTimeRanges(timeRanges = emptyTimeRanges) {\n  // @ts-ignore\n  return Array.from(timeRanges)\n    .map((_, i) => [\n      Number(timeRanges.start(i).toFixed(3)),\n      Number(timeRanges.end(i).toFixed(3)),\n    ].join(':'))\n    .join(' ');\n}\n", "\nexport function stringifyRenditionList(renditions) {\n  return renditions\n    ?.map(stringifyRendition)\n    .join(' ');\n}\n\nexport function parseRenditionList(renditions) {\n  return renditions\n    ?.split(/\\s+/)\n    .map(parseRendition);\n}\n\nexport function stringifyRendition(rendition) {\n  if (rendition) {\n    const { id, width, height } = rendition;\n    return [id, width, height].filter(a => a != null).join(':')\n  }\n}\n\nexport function parseRendition(rendition) {\n  if (rendition) {\n    const [id, width, height] = rendition.split(':');\n    return { id, width, height };\n  }\n}\n\nexport function stringifyAudioTrackList(audioTracks) {\n  return audioTracks\n    ?.map(stringifyAudioTrack)\n    .join(' ');\n}\n\nexport function parseAudioTrackList(audioTracks) {\n  return audioTracks\n    ?.split(/\\s+/)\n    .map(parseAudioTrack);\n}\n\nexport function stringifyAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const { id, kind, language, label } = audioTrack;\n    return [id, kind, language, label].filter(a => a != null).join(':')\n  }\n}\n\nexport function parseAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const [id, kind, language, label] = audioTrack.split(':');\n    return { id, kind, language, label };\n  }\n}\n\nexport function dashedToCamel(word) {\n  return word\n    .split('-')\n    .map(function (x, i) {\n      return (\n        (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function constToCamel(word, upperFirst = false) {\n  return word\n    .split('_')\n    .map(function (x, i) {\n      return (\n        (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) +\n        x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function camelCase(name) {\n  return name.replace(/[-_]([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\n\nexport function isValidNumber(x) {\n  return typeof x === 'number' && !Number.isNaN(x) && Number.isFinite(x);\n}\n\nexport function isNumericString(str) {\n  if (typeof str != 'string') return false; // we only process strings!\n  // @ts-ignore\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\n\n/**\n * Returns a promise that will resolve after passed ms.\n * @param  {number} ms\n * @return {Promise}\n */\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n", "import { MediaStateReceiverAttributes } from '../constants.js';\n\n/** @typedef {import('../media-controller.js').MediaController} MediaController */\n\n/**\n * Get the media controller element from the `mediacontroller` attribute or closest ancestor.\n * @param  {HTMLElement} host\n * @return {MediaController | undefined}\n */\nexport function getMediaController(host) {\n  return (\n    getAttributeMediaController(host) ??\n    closestComposedNode(host, 'media-controller')\n  );\n}\n\n/**\n * Get the media controller element from the `mediacontroller` attribute.\n * @param  {HTMLElement} host\n * @return {MediaController | undefined}\n */\nexport function getAttributeMediaController(host) {\n  const { MEDIA_CONTROLLER } = MediaStateReceiverAttributes;\n  const mediaControllerId = host.getAttribute(MEDIA_CONTROLLER);\n\n  if (mediaControllerId) {\n    return /** @type MediaController */ (\n      /** @type {unknown} */ (\n        getDocumentOrShadowRoot(host)?.getElementById(mediaControllerId)\n      )\n    );\n  }\n}\n\nexport const updateIconText = (svg, value, selector = '.value') => {\n  const node = svg.querySelector(selector);\n\n  if (!node) return;\n\n  node.textContent = value;\n};\n\nexport const getAllSlotted = (el, name) => {\n  const slotSelector = `slot[name=\"${name}\"]`;\n  const slot = el.shadowRoot.querySelector(slotSelector);\n  if (!slot) return [];\n  return slot.children;\n};\n\nexport const getSlotted = (el, name) => getAllSlotted(el, name)[0];\n\nexport const containsComposedNode = (rootNode, childNode) => {\n  if (!rootNode || !childNode) return false;\n  if (rootNode.contains(childNode)) return true;\n  return containsComposedNode(rootNode, childNode.getRootNode().host);\n};\n\nexport const closestComposedNode = (childNode, selector) => {\n  if (!childNode) return null;\n  const closest = childNode.closest(selector);\n  if (closest) return closest;\n  return closestComposedNode(childNode.getRootNode().host, selector);\n};\n\n/**\n * Get the active element, accounting for Shadow DOM subtrees.\n * @param {Document|ShadowRoot} root\n * @return {Element|null}\n */\nexport function getActiveElement(root = document) {\n  const activeEl = root?.activeElement;\n  if (!activeEl) return null;\n  return getActiveElement(activeEl.shadowRoot) ?? activeEl;\n}\n\n/**\n * Gets the document or shadow root of a node, not the node itself which can lead to bugs.\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode#return_value\n * @param {Node} node\n * @return {Document|ShadowRoot|null}\n */\nexport function getDocumentOrShadowRoot(node) {\n  const rootNode = node?.getRootNode?.();\n  if (rootNode instanceof ShadowRoot || rootNode instanceof Document) {\n    return rootNode;\n  }\n  return null;\n}\n\n/**\n * Checks if the element is visible includes opacity: 0 and visibility: hidden.\n * @param  {HTMLElement} element\n * @return {Boolean}\n */\nexport function isElementVisible(element, depth = 3) {\n  // Supported by Chrome and Firefox https://caniuse.com/mdn-api_element_checkvisibility\n  // https://drafts.csswg.org/cssom-view-1/#dom-element-checkvisibility\n  // @ts-ignore\n  if (element.checkVisibility) {\n    // @ts-ignore\n    return element.checkVisibility({\n      checkOpacity: true,\n      checkVisibilityCSS: true,\n    });\n  }\n  // Check if the element or its ancestors are hidden.\n  let el = element;\n  while (el && depth > 0) {\n    const style = getComputedStyle(el);\n    if (\n      style.opacity === '0' ||\n      style.visibility === 'hidden' ||\n      style.display === 'none'\n    ) {\n      return false;\n    }\n    el = el.parentElement;\n    depth--;\n  }\n  return true;\n}\n\n/**\n * Get progress ratio of a point on a line segment.\n * @param  {number} x\n * @param  {number} y\n * @param  {{ x: number, y: number }} p1\n * @param  {{ x: number, y: number }} p2\n * @return {number}\n */\nexport function getPointProgressOnLine(x, y, p1, p2) {\n  const segment = distance(p1, p2);\n  const toStart = distance(p1, { x, y });\n  const toEnd = distance(p2, { x, y });\n  if (toStart > segment || toEnd > segment) {\n    // Point is outside the line segment, so clamp it to the nearest end\n    return toStart > toEnd ? 1 : 0;\n  }\n  return toStart / segment;\n}\n\nexport function distance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * Get or insert a CSSStyleRule with a selector in an element containing <style> tags.\n * @param  {Element|ShadowRoot} styleParent\n * @param  {string} selectorText\n * @return {CSSStyleRule | {\n *   style: {\n *     setProperty: () => void,\n *     removeProperty: () => void,\n *     width?: string,\n *     height?: string,\n *     display?: string,\n *     transform?: string,\n *   },\n *   selectorText: string,\n * }}\n */\nexport function getOrInsertCSSRule(styleParent, selectorText) {\n  const cssRule = getCSSRule(styleParent, (st) => st === selectorText);\n  if (cssRule) return cssRule;\n  return insertCSSRule(styleParent, selectorText);\n}\n\n/**\n * Get a CSSStyleRule with a selector in an element containing <style> tags.\n * @param  {Element|ShadowRoot} styleParent\n * @param  {(selectorText) => boolean} predicate\n * @return {CSSStyleRule | undefined}\n */\nexport function getCSSRule(styleParent, predicate) {\n  let style;\n  // @ts-ignore\n  for (style of styleParent.querySelectorAll('style')) {\n    // Catch this error. e.g. browser extension adds style tags.\n    //   Uncaught DOMException: CSSStyleSheet.cssRules getter:\n    //   Not allowed to access cross-origin stylesheet\n    let cssRules;\n    try {\n      cssRules = style.sheet?.cssRules;\n    } catch {\n      continue;\n    }\n    for (let rule of cssRules ?? []) {\n      if (predicate(rule.selectorText)) return rule;\n    }\n  }\n}\n\n/**\n * Insert a CSSStyleRule with a selector in an element containing <style> tags.\n * @param  {Element|ShadowRoot} styleParent\n * @param  {string} selectorText\n * @return {CSSStyleRule | undefined}\n */\nexport function insertCSSRule(styleParent, selectorText) {\n  const styles = styleParent.querySelectorAll('style') ?? [];\n  const style = styles?.[styles.length - 1];\n\n  // If there is no style sheet return an empty style rule.\n  if (!style?.sheet) {\n    // The style tag must be connected to the DOM before it has a sheet.\n    // This could indicate a bug. Should the code be moved to connectedCallback?\n    console.warn('Media Chrome: No style sheet found on style tag of', styleParent);\n\n    return {\n      // @ts-ignore\n      style: {\n        setProperty: () => {},\n        removeProperty: () => '',\n        getPropertyValue: () => '',\n      },\n    };\n  }\n\n  style?.sheet.insertRule(`${selectorText}{}`, style.sheet.cssRules.length);\n  return /** @type {CSSStyleRule} */(style.sheet.cssRules?.[style.sheet.cssRules.length - 1]);\n}\n\n/**\n * Gets the number represented by the attribute\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {number} [defaultValue = Number.NaN]\n * @returns {number | undefined} Will return undefined if no attribute set\n */\nexport function getNumericAttr(el, attrName, defaultValue = Number.NaN) {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal != null ? +attrVal : defaultValue;\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {number} value\n */\nexport function setNumericAttr(el, attrName, value) {\n  // Simple cast to number\n  const nextNumericValue = +value;\n\n  // Treat null, undefined, and NaN as \"nothing values\", so unset if value is currently set.\n  if (value == null || Number.isNaN(nextNumericValue)) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // Avoid resetting a value that hasn't changed\n  if (getNumericAttr(el, attrName, undefined) === nextNumericValue) return;\n\n  el.setAttribute(attrName, `${nextNumericValue}`);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @returns {boolean}\n */\nexport function getBooleanAttr(el, attrName) {\n  return el.hasAttribute(attrName);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {boolean} value\n */\nexport function setBooleanAttr(el, attrName, value) {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // avoid setting a value that hasn't changed\n  // NOTE: For booleans, we can rely on a loose equality check\n  if (getBooleanAttr(el, attrName) == value) return;\n\n  el.toggleAttribute(attrName, value);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n */\nexport function getStringAttr(el, attrName, defaultValue = null) {\n  return el.getAttribute(attrName) ?? defaultValue;\n}\n\n/**\n * @param {*} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {string} value\n */\nexport function setStringAttr(el, attrName, value) {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  const nextValue = `${value}`;\n  // avoid triggering a set if no change\n  if (getStringAttr(el, attrName, undefined) === nextValue) return;\n\n  el.setAttribute(attrName, nextValue);\n}\n", "class EventTarget {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent() {\n    return true;\n  }\n}\n\nclass ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n}\n\nconst documentShim = {\n  createElement: function () {\n    return new globalThisShim.HTMLElement();\n  },\n  createElementNS: function () {\n    return new globalThisShim.HTMLElement();\n  },\n  addEventListener() {},\n  removeEventListener() {},\n};\n\nconst globalThisShim = {\n  ResizeObserver,\n  document: documentShim,\n  HTMLElement: class HTMLElement extends EventTarget {},\n  DocumentFragment: class DocumentFragment extends EventTarget {},\n  customElements: {\n    get: function () {},\n    define: function () {},\n    whenDefined: function () {},\n  },\n  CustomEvent: function CustomEvent() {},\n  getComputedStyle: function () {},\n  navigator: {\n    languages: [],\n    get userAgent() {\n      return '';\n    }\n  },\n  /**\n   * @param {string} media\n   */\n  matchMedia(media) {\n    return {\n      matches: false,\n      media,\n    };\n  }\n};\n\nexport const isServer =\n  typeof window === 'undefined' ||\n  typeof window.customElements === 'undefined';\n\nconst isShimmed = Object.keys(globalThisShim)\n  .every(key => key in globalThis);\n\n/**\n  * @type { globalThis & {\n  *   WebKitPlaybackTargetAvailabilityEvent?,\n  *   chrome?,\n  *   DocumentFragment?,\n  *   getComputedStyle,\n  *   CastableVideoElement?\n  * } |\n  * {HTMLElement,\n  * customElements,\n  * CustomEvent,\n  * getComputedStyle,\n  * addEventListener?,\n  * removeEventListener?,\n  * localStorage?,\n  * WebKitPlaybackTargetAvailabilityEvent?,\n  * window?,\n  * document?,\n  * chrome?,\n  * DocumentFragment?,\n  * ResizeObserver?,\n  * CastableVideoElement?,\n  * navigator?,\n  * matchMedia,\n  * } }\n  * */\nexport const GlobalThis = isServer && !isShimmed ? globalThisShim : globalThis;\n\n/**\n  * @type { document & { webkitExitFullscreen? } |\n  * {createElement,\n  * createElementNS?,\n  * activeElement?,\n  * fullscreenElement?,\n  * webkitExitFullscreen?,\n  * getElementById?,\n  * pictureInPictureElement?,\n  * exitPictureInPicture?,\n  * pictureInPictureEnabled?,\n  * requestPictureInPicture?,\n  * addEventListener?,\n  * removeEventListener?,\n  * } }\n  */\nexport const Document = isServer && !isShimmed ? documentShim : globalThis.document;\n\nexport {\n  GlobalThis as globalThis,\n  Document as document\n};\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n<style>\n  :host {\n    font: var(--media-font,\n      var(--media-font-weight, bold)\n      var(--media-font-size, 14px) /\n      var(--media-text-content-height, var(--media-control-height, 24px))\n      var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n    color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n    background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n    padding: var(--media-button-padding, var(--media-control-padding, 10px));\n    justify-content: var(--media-button-justify-content, center);\n    display: inline-flex;\n    align-items: center;\n    vertical-align: middle;\n    box-sizing: border-box;\n    transition: background .15s linear;\n    pointer-events: auto;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  ${/*\n    Only show outline when keyboard focusing.\n    https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n  */''}\n  :host(:focus-visible) {\n    box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n    outline: 0;\n  }\n  ${/*\n   * hide default focus ring, particularly when using mouse\n   */''}\n  :host(:where(:focus)) {\n    box-shadow: none;\n    outline: 0;\n  }\n\n  :host(:hover) {\n    background: var(--media-control-hover-background, rgba(50 50 70 / .7));\n  }\n\n  svg, img, ::slotted(svg), ::slotted(img) {\n    width: var(--media-button-icon-width);\n    height: var(--media-button-icon-height, var(--media-control-height, 24px));\n    transform: var(--media-button-icon-transform);\n    transition: var(--media-button-icon-transition);\n    fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n    vertical-align: middle;\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n  }\n</style>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of button text.\n *\n * @cssproperty --media-button-icon-width - `width` of button icon.\n * @cssproperty --media-button-icon-height - `height` of button icon.\n * @cssproperty --media-button-icon-transform - `transform` of button icon.\n * @cssproperty --media-button-icon-transition - `transition` of button icon.\n */\nclass MediaChromeButton extends globalThis.HTMLElement {\n  #mediaController;\n  preventClick = false;\n\n  static get observedAttributes() {\n    return ['disabled', MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor(options = {}) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true);\n      this.nativeEl = buttonHTML;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n\n      this.shadowRoot.appendChild(buttonHTML);\n    }\n  }\n\n  #clickListener = (e) => {\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n  }\n\n  // NOTE: There are definitely some \"false positive\" cases with multi-key pressing,\n  // but this should be good enough for most use cases.\n  #keyupListener = (e) => {\n    const { key } = e;\n    if (!this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n  }\n\n  #keydownListener = (e) => {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n    this.addEventListener('keyup', this.#keyupListener, {once: true});\n  }\n\n  enable() {\n    this.addEventListener('click', this.#clickListener);\n    this.addEventListener('keydown', this.#keydownListener);\n    this.tabIndex = 0;\n  }\n\n  disable() {\n    this.removeEventListener('click', this.#clickListener);\n    this.removeEventListener('keydown', this.#keydownListener);\n    this.removeEventListener('keyup', this.#keyupListener);\n    this.tabIndex = -1;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n  }\n\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);\n\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'button');\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    this.disable();\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  get keysUsed() {\n    return ['Enter', ' '];\n  }\n\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleClick(e) {} // eslint-disable-line\n}\n\nif (!globalThis.customElements.get('media-chrome-button')) {\n  globalThis.customElements.define('media-chrome-button', MediaChromeButton);\n}\n\nexport { MediaChromeButton };\nexport default MediaChromeButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getStringAttr, setStringAttr, getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst airplayIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.13 3H3.87a.87.87 0 0 0-.87.87v13.26a.87.87 0 0 0 .87.87h3.4L9 16H5V5h16v11h-4l1.72 2h3.4a.87.87 0 0 0 .87-.87V3.87a.87.87 0 0 0-.86-.87Zm-8.75 11.44a.5.5 0 0 0-.76 0l-4.91 5.73a.5.5 0 0 0 .38.83h9.82a.501.501 0 0 0 .38-.83l-4.91-5.73Z\"/>\n</svg>\n`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_AIRPLAYING}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_AIRPLAYING}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${airplayIcon}</slot>\n    <slot name=\"exit\">${airplayIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsAirplaying ? verbs.EXIT_AIRPLAY() : verbs.ENTER_AIRPLAY();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in AirPlay mode and pressing the button will open the AirPlay menu.\n * @slot exit - An element shown when the media is in AirPlay mode and pressing the button will open the AirPlay menu.\n * @slot icon - The element shown for the AirPlay button\u2019s display.\n *\n * @attr {(unavailable|unsupported)} mediaairplayunavailable - (read-only) Set if AirPlay is unavailable.\n * @attr {boolean} mediaisairplaying - (read-only) Present if the media is airplaying.\n *\n * @cssproperty [--media-airplay-button-display = inline-flex] - `display` property of button.\n *\n * @event {CustomEvent} mediaairplayrequest\n */\nclass MediaAirplayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_AIRPLAYING,\n      MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_IS_AIRPLAYING) {\n      updateAriaLabel(this);\n    }\n  }\n\n  /**\n   * @type {boolean} Are we currently airplaying\n   */\n  get mediaIsAirplaying() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_AIRPLAYING);\n  }\n\n  set mediaIsAirplaying(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_AIRPLAYING, value);\n  }\n\n  /**\n   * @type {string | undefined} Airplay unavailability state\n   */\n  get mediaAirplayUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE);\n  }\n\n  set mediaAirplayUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE, value);\n  }\n\n  handleClick() {\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_AIRPLAY_REQUEST, {\n      composed: true,\n      bubbles: true,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-airplay-button')) {\n  globalThis.customElements.define('media-airplay-button', MediaAirplayButton);\n}\n\nexport default MediaAirplayButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/></g></svg>`;\n\nconst exitIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/><path class=\"cast_caf_icon_boxfill\" d=\"M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z\"/></g></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_CASTING}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_CASTING}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterIcon}</slot>\n    <slot name=\"exit\">${exitIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsCasting ? verbs.EXIT_CAST() : verbs.ENTER_CAST();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in casting mode and pressing the button will open the Cast menu.\n * @slot exit - An element shown when the media is in casting mode and pressing the button will open the Cast menu.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediacastunavailable - (read-only) Set if casting is unavailable.\n * @attr {boolean} mediaiscasting - (read-only) Present if the media is casting.\n *\n * @cssproperty [--media-cast-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCastButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_CASTING,\n      MediaUIAttributes.MEDIA_CAST_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_IS_CASTING) {\n      updateAriaLabel(this);\n    }\n  }\n\n  /**\n   * @type {boolean} Are we currently casting\n   */\n  get mediaIsCasting() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING);\n  }\n\n  set mediaIsCasting(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING, value);\n  }\n\n  /**\n   * @type {string | undefined} Cast unavailability state\n   */\n  get mediaCastUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE);\n  }\n\n  set mediaCastUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE, value);\n  }\n\n  handleClick() {\n    const eventName =\n      this.mediaIsCasting\n        ? MediaUIEvents.MEDIA_EXIT_CAST_REQUEST\n        : MediaUIEvents.MEDIA_ENTER_CAST_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-cast-button')) {\n  globalThis.customElements.define('media-cast-button', MediaCastButton);\n}\n\nexport default MediaCastButton;\n", "import {\n  MediaUIAttributes,\n  MediaUIEvents,\n  MediaStateReceiverAttributes,\n  PointerTypes,\n} from './constants.js';\nimport {\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n} from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n<style>\n  :host {\n    display: var(--media-control-display, var(--media-gesture-receiver-display, inline-block));\n    box-sizing: border-box;\n  }\n</style>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-gesture-receiver-display - `display` property of gesture receiver.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaGestureReceiver extends globalThis.HTMLElement {\n  #mediaController;\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n    ];\n  }\n\n  constructor(options = {}) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true);\n      this.nativeEl = buttonHTML;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n      shadow.appendChild(buttonHTML);\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    this.tabIndex = -1;\n    this.setAttribute('aria-hidden', 'true');\n\n    this.#mediaController = getMediaControllerEl(this);\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.#mediaController?.addEventListener('pointerdown', this);\n    this.#mediaController?.addEventListener('click', this);\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.unassociateElement?.(this);\n    }\n\n    this.#mediaController?.removeEventListener('pointerdown', this);\n    this.#mediaController?.removeEventListener('click', this);\n    this.#mediaController = null;\n  }\n\n  handleEvent(event) {\n    const composedTarget = event.composedPath()?.[0];\n    const allowList = ['video', 'media-controller'];\n    if (!allowList.includes(composedTarget?.localName)) return;\n\n    if (event.type === 'pointerdown') {\n      // Since not all browsers have updated to be spec compliant, where 'click' events should be PointerEvents,\n      // we can use use 'pointerdown' to reliably determine the pointer type. (CJP).\n      this._pointerType = event.pointerType;\n    } else if (event.type === 'click') {\n      // Cannot use composedPath or target because this is a layer on top and pointer events are disabled.\n      // Attach to window and check if click is in this element's bounding box to keep <video> right-click menu.\n      const { clientX, clientY } = event;\n      const { left, top, width, height } = this.getBoundingClientRect();\n      const x = clientX - left;\n      const y = clientY - top;\n      if (\n        x < 0 ||\n        y < 0 ||\n        x > width ||\n        y > height ||\n        // In case this element has no dimensions (or display: none) return.\n        (width === 0 && height === 0)\n      ) {\n        return;\n      }\n\n      const { pointerType = this._pointerType } = event;\n      // NOTE: While there are cases where we may have a stale this._pointerType,\n      // we're guaranteed that the most recent this._pointerType will correspond\n      // to the current click event definitionally. As such, this clearing is technically\n      // unnecessary (CJP)\n      this._pointerType = undefined;\n\n      // NOTE: Longer term, we'll likely want to delay this to support double click/double tap (CJP)\n      if (pointerType === PointerTypes.TOUCH) {\n        this.handleTap(event);\n        return;\n      } else if (pointerType === PointerTypes.MOUSE) {\n        this.handleMouseClick(event);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleTap(e) {} // eslint-disable-line\n\n  // eslint-disable-next-line\n  handleMouseClick(e) {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nfunction getMediaControllerEl(controlEl) {\n  const mediaControllerId = controlEl.getAttribute(\n    MediaStateReceiverAttributes.MEDIA_CONTROLLER\n  );\n  if (mediaControllerId) {\n    return controlEl.getRootNode()?.getElementById(mediaControllerId);\n  }\n  return closestComposedNode(controlEl, 'media-controller');\n}\n\nif (!globalThis.customElements.get('media-gesture-receiver')) {\n  globalThis.customElements.define('media-gesture-receiver', MediaGestureReceiver);\n}\n\nexport default MediaGestureReceiver;\n", "import { globalThis } from './server-safe-globals.js';\n\n// Use 1 resize observer instance for many elements for best performance.\n// https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n\nconst callbacksMap = new WeakMap();\n\nconst getCallbacks = (element) => {\n  let callbacks = callbacksMap.get(element);\n  if (!callbacks) callbacksMap.set(element, (callbacks = new Set()));\n  return callbacks;\n}\n\nconst observer = new globalThis.ResizeObserver((entries) => {\n  for (let entry of entries) {\n    for (let callback of getCallbacks(entry.target)) {\n      callback(entry);\n    }\n  }\n});\n\nexport function observeResize(element, callback) {\n  getCallbacks(element).add(callback);\n  observer.observe(element);\n}\n\nexport function unobserveResize(element, callback) {\n  const callbacks = getCallbacks(element);\n  callbacks.delete(callback);\n\n  if (!callbacks.size) {\n    observer.unobserve(element);\n  }\n}\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  MediaUIAttributes,\n  MediaStateChangeEvents,\n} from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { observeResize } from './utils/resize-observer.js';\n// Guarantee that `<media-gesture-receiver/>` is available for use in the template\nimport './media-gesture-receiver.js';\n\nexport const Attributes = {\n  AUDIO: 'audio',\n  AUTOHIDE: 'autohide',\n  BREAKPOINTS: 'breakpoints',\n  GESTURES_DISABLED: 'gesturesdisabled',\n  KEYBOARD_CONTROL: 'keyboardcontrol',\n  NO_AUTOHIDE: 'noautohide',\n  USER_INACTIVE: 'userinactive',\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    ${\n      /*\n       * outline on media is turned off because it is allowed to get focus to faciliate hotkeys.\n       * However, on keyboard interactions, the focus outline is shown,\n       * which is particularly noticeable when going fullscreen via hotkeys.\n       */ ''\n    }\n    :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) ::slotted([slot=media]) {\n      outline: none;\n    }\n\n    :host {\n      box-sizing: border-box;\n      position: relative;\n      display: inline-block;\n      line-height: 0;\n      background-color: var(--media-background-color, #000);\n    }\n\n    :host(:not([${Attributes.AUDIO}])) [part~=layer]:not([part~=media-layer]) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      display: flex;\n      flex-flow: column nowrap;\n      align-items: start;\n      pointer-events: none;\n      background: none;\n    }\n\n    slot[name=media] {\n      display: var(--media-slot-display, contents);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the slotted media element by default\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) slot[name=media] {\n      display: var(--media-slot-display, none);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the gesture-layer which causes media-controller to be taller than the control bar\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) [part~=layer][part~=gesture-layer] {\n      height: 0;\n      display: block;\n    }\n\n    ${\n      /*\n       * if gestures are disabled, don't accept pointer-events\n       */ ''\n    }\n    :host(:not([${Attributes.AUDIO}])[${Attributes.GESTURES_DISABLED}]) ::slotted([slot=gestures-chrome]),\n    :host(:not([${Attributes.AUDIO}])[${Attributes.GESTURES_DISABLED}]) media-gesture-receiver[slot=gestures-chrome] {\n      display: none;\n    }\n\n    ${\n      /*\n       * any slotted element that isn't a poster or media slot should be pointer-events auto\n       * we'll want to add here any slotted elements that shouldn't get pointer-events by default when slotted\n       */ ''\n    }\n    ::slotted(:not([slot=media]):not([slot=poster]):not(media-loading-indicator):not([hidden])) {\n      pointer-events: auto;\n    }\n\n    :host(:not([${Attributes.AUDIO}])) *[part~=layer][part~=centered-layer] {\n      align-items: center;\n      justify-content: center;\n    }\n\n    :host(:not([${Attributes.AUDIO}])) ::slotted(media-gesture-receiver[slot=gestures-chrome]),\n    :host(:not([${Attributes.AUDIO}])) media-gesture-receiver[slot=gestures-chrome] {\n      align-self: stretch;\n      flex-grow: 1;\n    }\n\n    slot[name=middle-chrome] {\n      display: inline;\n      flex-grow: 1;\n      pointer-events: none;\n      background: none;\n    }\n\n    ${/* Position the media and poster elements to fill the container */ ''}\n    ::slotted([slot=media]),\n    ::slotted([slot=poster]) {\n      width: 100%;\n      height: 100%;\n    }\n\n    ${/* Video specific styles */ ''}\n    :host(:not([${Attributes.AUDIO}])) .spacer {\n      flex-grow: 1;\n    }\n\n    ${/* Safari needs this to actually make the element fill the window */ ''}\n    :host(:-webkit-full-screen) {\n      ${/* Needs to use !important otherwise easy to break */ ''}\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    ${/* Only add these if auto hide is not disabled */ ''}\n    ::slotted(:not([slot=media]):not([slot=poster]):not([${Attributes.NO_AUTOHIDE}]):not([hidden])) {\n      opacity: 1;\n      transition: opacity 0.25s;\n    }\n\n    ${\n      /* Hide controls when inactive, not paused, not audio and auto hide not disabled */ ''\n    }\n    :host([${Attributes.USER_INACTIVE}]:not([${MediaUIAttributes.MEDIA_PAUSED}]):not([${MediaUIAttributes.MEDIA_IS_AIRPLAYING}]):not([${MediaUIAttributes.MEDIA_IS_CASTING}]):not([${Attributes.AUDIO}])) ::slotted(:not([slot=media]):not([slot=poster]):not([${Attributes.NO_AUTOHIDE}])) {\n      opacity: 0;\n      transition: opacity 1s;\n    }\n\n    :host([${Attributes.USER_INACTIVE}]:not([${MediaUIAttributes.MEDIA_PAUSED}]):not([${MediaUIAttributes.MEDIA_IS_CASTING}]):not([${Attributes.AUDIO}])) ::slotted([slot=media]) {\n      cursor: none;\n    }\n\n    ::slotted(media-control-bar)  {\n      align-self: stretch;\n    }\n\n    ${/* ::slotted([slot=poster]) doesn't work for slot fallback content so hide parent slot instead */ ''}\n    :host(:not([${Attributes.AUDIO}])[${MediaUIAttributes.MEDIA_HAS_PLAYED}]) slot[name=poster] {\n      display: none;\n    }\n\n    ::slotted([role=\"menu\"]) {\n      align-self: end;\n    }\n\n    ::slotted([role=\"dialog\"]) {\n      align-self: center;\n    }\n  </style>\n\n  <slot name=\"media\" part=\"layer media-layer\"></slot>\n  <slot name=\"poster\" part=\"layer poster-layer\"></slot>\n  <slot name=\"gestures-chrome\" part=\"layer gesture-layer\">\n    <media-gesture-receiver slot=\"gestures-chrome\"></media-gesture-receiver>\n  </slot>\n  <span part=\"layer vertical-layer\">\n    <slot name=\"top-chrome\" part=\"top chrome\"></slot>\n    <slot name=\"middle-chrome\" part=\"middle chrome\"></slot>\n    <slot name=\"centered-chrome\" part=\"layer centered-layer center centered chrome\"></slot>\n    ${/* default, effectively \"bottom-chrome\" */ ''}\n    <slot part=\"bottom chrome\"></slot>\n  </span>\n`;\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\n\nconst defaultBreakpoints = 'sm:384 md:576 lg:768 xl:960';\n\nfunction resizeCallback(entry) {\n  setBreakpoints(entry.target, entry.contentRect.width);\n}\n\nfunction setBreakpoints(container, width) {\n  if (!container.isConnected) return;\n\n  const breakpoints = container.getAttribute(Attributes.BREAKPOINTS) ?? defaultBreakpoints;\n  const ranges = createBreakpointMap(breakpoints);\n  const activeBreakpoints = getBreakpoints(ranges, width);\n\n  let changed = false;\n\n  Object.keys(ranges).forEach((name) => {\n    if (activeBreakpoints.includes(name)) {\n      if (!container.hasAttribute(`breakpoint${name}`)) {\n        container.setAttribute(`breakpoint${name}`, '');\n        changed = true;\n      }\n      return;\n    }\n\n    if (container.hasAttribute(`breakpoint${name}`)) {\n      container.removeAttribute(`breakpoint${name}`);\n      changed = true;\n    }\n  });\n\n  if (changed) {\n    const evt = new CustomEvent(MediaStateChangeEvents.BREAKPOINTS_CHANGE, {\n      detail: activeBreakpoints\n    });\n\n    container.dispatchEvent(evt)\n  }\n}\n\nfunction createBreakpointMap(breakpoints) {\n  const pairs = breakpoints.split(/\\s+/);\n  return Object.fromEntries(pairs.map((pair) => pair.split(':')));\n}\n\nfunction getBreakpoints(breakpoints, width) {\n  return Object.keys(breakpoints).filter((name) => {\n    return width >= breakpoints[name];\n  });\n}\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} audio\n * @attr {string} autohide\n * @attr {string} breakpoints\n * @attr {boolean} gesturesdisabled\n * @attr {boolean} keyboardcontrol\n * @attr {boolean} noautohide\n * @attr {boolean} userinactive\n *\n * @cssprop --media-background-color - `background-color` of container.\n * @cssprop --media-slot-display - `display` of the media slot (default none for [audio] usage).\n */\nclass MediaContainer extends globalThis.HTMLElement {\n  static get observedAttributes() {\n    return [Attributes.AUTOHIDE, Attributes.GESTURES_DISABLED]\n      .concat(MEDIA_UI_ATTRIBUTE_NAMES)\n      // Filter out specific / complex data media UI attributes\n      // that shouldn't be propagated to this state receiver element.\n      .filter(name => ![\n        MediaUIAttributes.MEDIA_RENDITION_LIST,\n        MediaUIAttributes.MEDIA_AUDIO_TRACK_LIST,\n        MediaUIAttributes.MEDIA_CHAPTERS_CUES,\n      ].includes(name));\n  }\n\n  #pointerDownTimeStamp = 0;\n  #currentMedia;\n  breakpointsComputed = false;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    // Watch for child adds/removes and update the media element if necessary\n    const mutationCallback = (mutationsList) => {\n      const media = this.media;\n\n      for (let mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          // Media element being removed\n          mutation.removedNodes.forEach((node) => {\n            // Is this a direct child media element of media-controller?\n            // TODO: This accuracy doesn't matter after moving away from media attrs.\n            // Could refactor so we can always just call 'dispose' on any removed media el.\n            if (node.slot == 'media' && mutation.target == this) {\n              // Check if this was the current media by if it was the first\n              // el with slot=media in the child list. There could be multiple.\n              let previousSibling =\n                mutation.previousSibling &&\n                mutation.previousSibling.previousElementSibling;\n\n              // Must have been first if no prev sibling or new media\n              if (!previousSibling || !media) {\n                this.mediaUnsetCallback(node);\n              } else {\n                // Check if any prev siblings had a slot=media\n                // Should remain true otherwise\n                let wasFirst = previousSibling.slot !== 'media';\n                while (\n                  (previousSibling = previousSibling.previousSibling) !== null\n                ) {\n                  if (previousSibling.slot == 'media') wasFirst = false;\n                }\n                if (wasFirst) this.mediaUnsetCallback(node);\n              }\n            }\n          });\n\n          // Controls or media element being added\n          // No need to inject anything if media=null\n          if (media) {\n            mutation.addedNodes.forEach((node) => {\n              if (node === media) {\n                // Update all controls with new media if this is the new media\n                this.handleMediaUpdated(media);\n              }\n            });\n          }\n        }\n      }\n    };\n\n    const mutationObserver = new MutationObserver(mutationCallback);\n    mutationObserver.observe(this, { childList: true, subtree: true });\n\n    let pendingResizeCb = false;\n    const deferResizeCallback = (entry) => {\n      // Already have a pending async breakpoint computation, so go ahead and bail\n      if (pendingResizeCb) return;\n      // Just in case it takes too long (which will cause an error to throw),\n      // do the breakpoint computation asynchronously\n      setTimeout(() => {\n        resizeCallback(entry);\n        // Once we've completed, reset the pending cb flag to false\n        pendingResizeCb = false;\n\n        if (!this.breakpointsComputed) {\n          this.breakpointsComputed = true;\n          this.dispatchEvent(\n            new CustomEvent(MediaStateChangeEvents.BREAKPOINTS_COMPUTED, {\n              bubbles: true,\n              composed: true\n            })\n          );\n        }\n      }, 0);\n      pendingResizeCb = true;\n    };\n    observeResize(this, deferResizeCallback);\n\n    // Handles the case when the slotted media element is a slot element itself.\n    // e.g. chaining media slots for media themes.\n\n    /** @type {HTMLSlotElement} */\n    let chainedSlot = this.querySelector(':scope > slot[slot=media]');\n    if (chainedSlot) {\n      chainedSlot.addEventListener('slotchange', () => {\n        const slotEls = chainedSlot.assignedElements({ flatten: true });\n        if (!slotEls.length) {\n          if (this.#currentMedia) {\n            this.mediaUnsetCallback(this.#currentMedia);\n          }\n          return;\n        }\n        this.handleMediaUpdated(this.media);\n      });\n    }\n  }\n\n  // Could share this code with media-chrome-html-element instead\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName.toLowerCase() == Attributes.AUTOHIDE) {\n      this.autohide = newValue;\n    }\n  }\n\n  // First direct child with slot=media, or null\n  /**\n   * @returns {HTMLVideoElement &\n   * {buffered,\n   * webkitEnterFullscreen?,\n   * webkitExitFullscreen?,\n   * requestCast?,\n   * webkitShowPlaybackTargetPicker?,\n   * videoTracks?,\n   * }}\n   */\n  get media() {\n    /** @type {HTMLVideoElement} */\n    let media = this.querySelector(':scope > [slot=media]');\n\n    // Chaining media slots for media templates\n    if (media?.nodeName == 'SLOT')\n      // @ts-ignore\n      media = media.assignedElements({ flatten: true })[0];\n\n    return media;\n  }\n\n  /**\n   * @param {HTMLMediaElement} media\n   */\n  async handleMediaUpdated(media) {\n    // Anything \"falsy\" couldn't act as a media element.\n    if (!media) return;\n\n    this.#currentMedia = media;\n\n    // Custom element. Wait until it's defined before resolving\n    if (media.localName.includes('-')) {\n      await globalThis.customElements.whenDefined(media.localName);\n    }\n\n    // Even if we are not connected to the DOM after this await still call mediaSetCallback\n    // so the media state is already computed once, then when the container is connected\n    // to the DOM mediaSetCallback is called again to attach the root node event listeners.\n\n    this.mediaSetCallback(media);\n  }\n\n  connectedCallback() {\n    const isAudioChrome = this.getAttribute(Attributes.AUDIO) != null;\n    const label = isAudioChrome ? nouns.AUDIO_PLAYER() : nouns.VIDEO_PLAYER();\n    this.setAttribute('role', 'region');\n    this.setAttribute('aria-label', label);\n\n    this.handleMediaUpdated(this.media);\n\n    // Assume user is inactive until they're not (aka userinactive by default is true)\n    // This allows things like autoplay and programmatic playing to also initiate hiding controls (CJP)\n    this.setAttribute(Attributes.USER_INACTIVE, '');\n\n    this.addEventListener('pointerdown', this);\n    this.addEventListener('pointermove', this);\n    this.addEventListener('pointerup', this);\n    this.addEventListener('mouseleave', this);\n    this.addEventListener('keyup', this);\n\n    globalThis.window?.addEventListener('mouseup', this);\n  }\n\n  disconnectedCallback() {\n    // When disconnected from the DOM, remove root node and media event listeners\n    // to prevent memory leaks and unneeded invisble UI updates.\n    if (this.media) {\n      this.mediaUnsetCallback(this.media);\n    }\n\n    globalThis.window?.removeEventListener('mouseup', this);\n  }\n\n  /**\n   * @abstract\n   * @param {HTMLMediaElement} media\n   */\n  mediaSetCallback(media) {} // eslint-disable-line\n\n  /**\n   * @param {HTMLMediaElement} media\n   */\n  mediaUnsetCallback(media) { // eslint-disable-line\n    this.#currentMedia = null;\n  }\n\n  handleEvent(event) {\n    switch (event.type) {\n      case 'pointerdown':\n        this.#pointerDownTimeStamp = event.timeStamp;\n        break;\n      case 'pointermove':\n        this.#handlePointerMove(event);\n        break;\n      case 'pointerup':\n        this.#handlePointerUp(event);\n        break;\n      case 'mouseleave':\n        // Immediately hide if mouse leaves the container.\n        this.#setInactive();\n        break;\n      case 'mouseup':\n        this.removeAttribute(Attributes.KEYBOARD_CONTROL);\n        break;\n      case 'keyup':\n        // Unhide for keyboard controlling.\n        this.#scheduleInactive();\n        // Allow for focus styles only when using the keyboard to navigate.\n        this.setAttribute(Attributes.KEYBOARD_CONTROL, '');\n        break;\n    }\n  }\n\n  #handlePointerMove(event) {\n    if (event.pointerType !== 'mouse') {\n      // On mobile we toggle the controls on a tap which is handled in pointerup,\n      // but Android fires pointermove events even when the user is just tapping.\n      // Prevent calling setActive() on tap because it will mess with the toggle logic.\n      const MAX_TAP_DURATION = 250;\n      // If the move duration exceeds 200ms then it's a drag and we should show the controls.\n      if (event.timeStamp - this.#pointerDownTimeStamp < MAX_TAP_DURATION) return;\n    }\n\n    this.#setActive();\n    // Stay visible if hovered over control bar\n    clearTimeout(this._inactiveTimeout);\n\n    // If hovering over something other than controls, we're free to make inactive\n    // @ts-ignore\n    if ([this, this.media].includes(event.target)) {\n      this.#scheduleInactive();\n    }\n  }\n\n  #handlePointerUp(event) {\n    if (event.pointerType === 'touch') {\n      const controlsVisible = !this.hasAttribute(Attributes.USER_INACTIVE);\n\n      if ([this, this.media].includes(event.target) && controlsVisible) {\n        this.#setInactive();\n      } else {\n        this.#scheduleInactive();\n      }\n    } else if (\n      event.composedPath().some((el) =>\n        ['media-play-button', 'media-fullscreen-button'].includes(el?.localName))\n    ) {\n      this.#scheduleInactive();\n    }\n  }\n\n  #setInactive() {\n    if (this.autohide < 0) return;\n    if (this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n    this.setAttribute(Attributes.USER_INACTIVE, '');\n\n    const evt = new globalThis.CustomEvent(\n      MediaStateChangeEvents.USER_INACTIVE,\n      { composed: true, bubbles: true, detail: true }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  #setActive() {\n    if (!this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n    this.removeAttribute(Attributes.USER_INACTIVE);\n\n    const evt = new globalThis.CustomEvent(\n      MediaStateChangeEvents.USER_INACTIVE,\n      { composed: true, bubbles: true, detail: false }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  #scheduleInactive() {\n    this.#setActive();\n\n    clearTimeout(this._inactiveTimeout);\n\n    // Setting autohide to -1 turns off autohide\n    if (this.autohide < 0) return;\n\n    /** @type {ReturnType<typeof setTimeout>} */\n    this._inactiveTimeout = setTimeout(() => {\n      this.#setInactive();\n    }, this.autohide * 1000);\n  }\n\n  set autohide(seconds) {\n    seconds = Number(seconds);\n    this._autohide = isNaN(seconds) ? 0 : seconds;\n  }\n\n  get autohide() {\n    return this._autohide === undefined ? 2 : this._autohide;\n  }\n}\n\n// NOTE: Since MediaContainer is not currently designed to be used directly as\n// a custom element, unlike other components, we do not `define()` it.\n\nexport { MediaContainer };\nexport default MediaContainer;\n", "/** @implements {Pick<DOMTokenList, 'length' | 'value' | 'toString' | 'item' | 'add' | 'remove' | 'contains' | 'toggle' | 'replace'>} */\nexport class AttributeTokenList {\n  #el;\n  #attr;\n  #defaultSet;\n  #tokenSet = new Set();\n\n  constructor(el, attr, { defaultValue } = { defaultValue: undefined }) {\n    this.#el = el;\n    this.#attr = attr;\n    this.#defaultSet = new Set(defaultValue);\n  }\n\n  [Symbol.iterator]() {\n    return this.#tokens.values();\n  }\n\n  get #tokens() {\n    return this.#tokenSet.size ? this.#tokenSet : this.#defaultSet;\n  }\n\n  get length() {\n    return this.#tokens.size;\n  }\n\n  get value() {\n    return [...this.#tokens].join(' ') ?? '';\n  }\n\n  set value(val) {\n    if (val === this.value) return;\n    this.#tokenSet = new Set();\n    this.add(...(val?.split(' ') ?? []));\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  item(index) {\n    return [...this.#tokens][index];\n  }\n\n  values() {\n    return this.#tokens.values();\n  }\n\n  forEach(callback) {\n    this.#tokens.forEach(callback);\n  }\n\n  add(...tokens) {\n    tokens.forEach((t) => this.#tokenSet.add(t));\n    // if the attribute was removed don't try to add it again.\n    if (this.value === '' && !this.#el?.hasAttribute(`${this.#attr}`)) {\n      return;\n    }\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  remove(...tokens) {\n    tokens.forEach((t) => this.#tokenSet.delete(t));\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  contains(token) {\n    return this.#tokens.has(token);\n  }\n\n  toggle(token, force) {\n    if (typeof force !== 'undefined') {\n      if (force) {\n        this.add(token);\n        return true;\n      } else {\n        this.remove(token);\n        return false;\n      }\n    }\n\n    if (this.contains(token)) {\n      this.remove(token);\n      return false;\n    }\n\n    this.add(token);\n    return true;\n  }\n\n  replace(oldToken, newToken) {\n    this.remove(oldToken);\n    this.add(newToken);\n    return oldToken === newToken;\n  }\n}\n", "import { MediaUIAttributes } from '../constants.js';\n\n// NOTE: This is generic for any CSS/html list representation. Consider renaming and moving to generic module.\n/**\n * Splits a string (representing TextTracks) into an array of strings based on whitespace.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @returns {Array<string>} An array of non-whitesace strings (each representing a single TextTrack).\n */\nexport const splitTextTracksStr = (textTracksStr = '') =>\n  textTracksStr.split(/\\s+/);\n\n/**\n * Parses a string that represents a TextTrack into a \"TextTrack-like object\"\n * The expected TextTrack string format is:\n * \"language[:label]\"\n * where the language *should* conform to BCP 47, just like TextTracks, and the (optional)\n * label *must* be URL encoded.\n * Note that this format may be expanded to include additional properties, such as\n * `id`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n * @param {string} [textTrackStr = ''] - A well-defined TextTrack string representations\n * @returns {Object} An object that resembles a (partial) TextTrack (`{ language: string; label?: string; }`)\n */\nexport const parseTextTrackStr = (textTrackStr = '') => {\n  let [kind, language, encodedLabel] = textTrackStr.split(':');\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : undefined;\n  kind = kind === 'cc' ? 'captions' : 'subtitles';\n  return {\n    kind,\n    language,\n    label,\n  };\n};\n\n/**\n * Parses a whitespacae-separated string that represents list of TextTracks into an array of TextTrack-like objects,\n * where each object will have the properties identified by the corresponding string, plus any properties generically\n * provided by the (optional) `textTrackLikeObj` argument.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @param {Object} [textTrackLikeObj] An object that resembles a (partial) TextTrack, used to add generic properties to all parsed TextTracks.\n * @returns {Array<Object>} An array of \"TextTrack-like objects\", each with properties parsed from the string and any properties from `textTrackLikeObj`.\n * @example\n * ```js\n * const tracksStr = 'en-US:English en:English%20%28with%20descriptions%29';\n * const tracks = parseTextTracksStr(tracksStr);\n * // [{ language: 'en-US', label: 'English' }, { language: 'en', label: 'English (with descriptions)' }];\n *\n * const tracksData = { kind: 'captions' };\n * const tracksWithData = parseTextTracksStr(tracksStr, tracksData);\n * // [{ language: 'en-US', label: 'English', kind: 'captions' }, { language: 'en', label: 'English (with descriptions)', kind: 'captions' }];\n * ```\n */\nexport const parseTextTracksStr = (\n  textTracksStr = '',\n  textTrackLikeObj = {}\n) => {\n  return splitTextTracksStr(textTracksStr).map((textTrackStr) => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj,\n    };\n  });\n};\n\n/**\n * Takes a variety of possible representations of TextTrack(s) and \"normalizes\" them to an Array of 1+ TextTrack-like objects.\n * @param {Array<string|Object>|string|Object} trackOrTracks - A value representing 1+ TextTracks\n * @returns {Array<Object>} An array of TextTrack-like objects.\n */\nexport const parseTracks = (trackOrTracks) => {\n  // Already an array, but might be an array of strings, objects, or both.\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map((trackObjOrStr) => {\n      // If the individual track is a string representation, translate it into a TextTrack-like object.\n      if (typeof trackObjOrStr === 'string') {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      // Otherwise, assume it already is one.\n      return trackObjOrStr;\n    });\n  }\n  // A string of 1+ TextTrack representations. Parse into an array of objects.\n  if (typeof trackOrTracks === 'string') {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  // Assume a single TextTrack-like object. Wrap into an array of 1.\n  return [trackOrTracks];\n};\n\n/**\n * Translates a TextTrack-like object into a well-defined string representation for the TextTrack\n * @param {Object} obj - A TextTrack or TextTrack-like object\n * @param {string} obj.kind - A required kind for the track.\n * @param {string} [obj.label] - An optional label for the track.\n * @param {string} [obj.language] - The BCP-47 compliant string representing the language code of the track\n * @returns {string} A string representing a TextTrack with the format: \"language[:label]\"\n */\nexport const formatTextTrackObj = ({ kind, label, language } = { kind: 'subtitles' }) => {\n  if (!label) return language;\n  return `${kind === 'captions' ? 'cc': 'sb'}:${language}:${encodeURIComponent(label)}`;\n};\n\n/**\n * Translates a set of TextTracks into a well-defined, whitespace-separated string representation of the set\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\n * @param {Array<TextTrack|object>|TextTrackList} textTracks - A TextTracks object or an Array of TextTracks or TextTrack-like objects.\n * @returns A string representing a set of TextTracks, separated by whitespace.\n */\nexport const stringifyTextTrackList = (textTracks = []) => {\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(' ');\n};\n\n// NOTE: This is a generic higher order fn. Consider and moving to generic module.\n/**\n * A generic higher-order function that yields a predicate to assert whether or not some value has the provided key/value pair\n * @param {string|number} key - The property key/name against which we'd like to match\n * @param {*} value - The value of the key we expect for a match\n * @returns {Function} - A predicate function that yields true if the provided object has the expected key/value pair, otherwise false.\n * @example\n * ```js\n * const hasShowingMode = isMatchingPropOf('mode', 'showing');\n * hasShowingMode({ mode: 'showing' }); // true\n * hasShowingMode({ mode: 'disabled' }); // false\n * hasShowingMode({ no_mode: 'any' }); // false\n * ```\n */\nexport const isMatchingPropOf = (key, value) => (obj) => obj[key] === value;\n\n// NOTE: This is a generic higher order fn. Consider renaming and moving to generic module.\n/**\n * A higher-order function that yields a single predicate to assert whether or not some value has *every* key/value pair defined in `filterObj`.\n * @param {object} filterObj - An object of key/value pairs that we expect on a given object\n * @returns {Function} - A predicate function that yields true iff the provided object has *every* key/value pair in `filterObj`, otherwise false\n * @example\n * ```js\n * const track1 = { label: 'English', kind: 'captions', language: 'en-US' };\n * const track1a = { label: 'English', kind: 'captions', language: 'en-US', id: '1', mode: 'showing' };\n * const track2 = { label: 'English (with descriptions)', kind: 'captions', language: 'en-US', id: '2', mode: 'disabled' };\n * const track3 = { label: 'Espa\u00F1ol', kind: 'subtitles', language: 'es-MX', id: '3', mode: 'disabled' };\n * const track4 = { label: 'English', language: 'en-US', mode: 'showing' };\n *\n * const isMatchingTrack = textTrackObjAsPred({ label: 'English', kind: 'captions', language: 'en-US' });\n * isMatchingTrack(track1); // true\n * isMatchingTrack(track1a); // true\n * isMatchingTrack(track2); // false\n * isMatchingTrack(track3); // false\n * isMatchingTrack(track4); // false\n * isMatchingTrack({ no_corresponding_props: 'any' }); // false\n * ```\n */\nexport const textTrackObjAsPred = (filterObj) => {\n  const preds = Object.entries(filterObj).map(([key, value]) => {\n    // Translate each key/value pair into a single predicate\n    return isMatchingPropOf(key, value);\n  });\n\n  // Return a predicate function that takes the array of single key/value pair predicates and asserts that *every* pred in the array is true of the (TextTrack-like) object\n  return (textTrack) => preds.every((pred) => pred(textTrack));\n};\n\n/**\n * Updates any `tracks` that match one of the `tracksToUpdate` to be in the provided TextTrack `mode`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/mode\n * @see {@link parseTracks}\n * @param {string} mode - The desired mode for any matching TextTracks. Should be one of \"disabled\"|\"hidden\"|\"showing\"\n * @param {TextTrackList|Array<TextTrack|Object>} tracks - A TextTracks object or array of TextTracks that should contain any matching TextTracks to update\n * @param {Array<string|Object>|string|Object} tracksToUpdate - A value representing a set of TextTracks\n */\nexport const updateTracksModeTo = (mode, tracks = [], tracksToUpdate = []) => {\n  // 1. Normalize the tracksToUpdate into an array of \"partial TextTrack-like\" objects\n  // 2. Convert each object into its own predicate function to identify that an actual TextTrack is a match\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n\n  // A track is identified as a track to update as long as it matches *one* of the preds (i.e. as long as it \"looks like\" one of \"partial TextTrack-like\" objects)\n  const isTrackToUpdate = (textTrack) => {\n    return preds.some((pred) => pred(textTrack));\n  };\n\n  Array.from(tracks)\n    // 1. Filter to only include tracks to update\n    .filter(isTrackToUpdate)\n    // 2. Update each of those tracks to the appropriate mode.\n    .forEach((textTrack) => {\n      textTrack.mode = mode;\n    });\n};\n\n/**\n * Takes an `HTMLMediaElement media` and yields an array of `TextTracks` that match the provided `filterPredOrObj` criteria (or all `TextTracks` by default).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks\n * @see {@link textTrackObjAsPred}\n * @param {HTMLMediaElement} media - An HTMLMediaElement with an expected textTracks value\n * (NOTE: This uses \"structural polymorphism\", so as long as `media` has an Array-like `textTracks` value of TextTrack-like objects, this function will work).\n * @param {Function|Object} [filterPredOrObj] Either a predicate function or an object that can be translated into a predicate function of matching key/value pairs.\n * @returns {Array<TextTrack>} An array of TextTracks that match the given `filterPredOrObj` (or all TextTracks on `media` by default)\n * @example\n * ```html\n * <!DOCTYPE html>\n * <html lang=\"en\">\n * <head></head>\n * <body>\n * <video src=\"https://stream.mux.com/DS00Spx1CV902MCtPj5WknGlR102V5HFkDe/high.mp4\">\n *   <track label=\"Spanish\" kind=\"subtitles\" srclang=\"es\" src=\"./vtt/en-sub.vtt\">\n *   <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"./vtt/es-sub.vtt\">\n *   <track label=\"English\" kind=\"captions\" srclang=\"en\" src=\"./vtt/en-cc.vtt\">\n  </video>\n * </body>\n * </html>\n * ```\n * ```js\n * // js ...\n * const media = document.querySelector('video');\n * getTextTracksList(media, { kind: 'subtitles' });\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }]\n * getTextTracksList(media, { kind: 'captions' });\n * // [{ label: 'English', kind: 'captions', language: 'en' }]\n * getTextTracksList(media);\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }, { label: 'English', kind: 'captions', language: 'en' }]\n * ```\n */\nexport const getTextTracksList = (media, filterPredOrObj = () => true) => {\n  if (!media?.textTracks) return [];\n\n  const filterPred =\n    typeof filterPredOrObj === 'function'\n      ? filterPredOrObj\n      : textTrackObjAsPred(filterPredOrObj);\n\n  return Array.from(media.textTracks).filter(filterPred);\n};\n\n\n/**\n * Are captions or subtitles enabled?\n *\n * @param {HTMLElement} el - An HTMLElement that has caption related attributes on it.\n * @returns {boolean} Whether captions are enabled or not\n */\nexport const areSubsOn = (el) => {\n  const showingSubtitles = !!el.getAttribute(\n    MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n  );\n  return showingSubtitles;\n};\n", "import { document } from './server-safe-globals.js';\n\nexport const fullscreenApi = {\n  enter: 'requestFullscreen',\n  exit: 'exitFullscreen',\n  rootEvents: ['fullscreenchange'],\n  mediaEvents: [],\n  element: 'fullscreenElement',\n  error: 'fullscreenerror',\n  enabled: 'fullscreenEnabled',\n};\n\nif (document.fullscreenElement === undefined) {\n  fullscreenApi.enter = 'webkitRequestFullScreen';\n  fullscreenApi.exit =\n    document.webkitExitFullscreen != null\n      ? 'webkitExitFullscreen'\n      : 'webkitCancelFullScreen';\n  fullscreenApi.rootEvents = ['webkitfullscreenchange'];\n  fullscreenApi.mediaEvents = ['webkitbeginfullscreen', 'webkitendfullscreen'],\n  fullscreenApi.element = 'webkitFullscreenElement';\n  fullscreenApi.error = 'webkitfullscreenerror';\n  fullscreenApi.enabled = 'webkitFullscreenEnabled';\n}\n", "import { globalThis, document } from './server-safe-globals.js';\nimport { delay } from './utils.js';\nimport { fullscreenApi } from './fullscreen-api.js';\n\n/**\n * Test element\n */\nlet testMediaEl;\nexport const getTestMediaEl = () => {\n  if (testMediaEl) return testMediaEl;\n  testMediaEl = document?.createElement?.('video');\n  return testMediaEl;\n};\n\n/**\n * Test for volume support\n *\n * @param {HTMLMediaElement} mediaEl\n * @returns {Promise<boolean>}\n */\nexport const hasVolumeSupportAsync = async (mediaEl = getTestMediaEl()) => {\n  if (!mediaEl) return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  await delay(0);\n  return mediaEl.volume !== prevVolume;\n};\n\n// let volumeSupported;\n// export const volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n//   volumeSupported = supported;\n//   return volumeSupported;\n// });\n\n// NOTE: This also matches at least some non-Safari UAs on e.g. iOS, such as Chrome, perhaps since\n// these browsers are built on top of the OS-level WebKit browser, so use accordingly (CJP).\n// See, e.g.: https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\nconst isSafari = /.*Version\\/.*Safari\\/.*/.test(globalThis.navigator.userAgent);\n/**\n * Test for PIP support\n *\n * @param {HTMLVideoElement} mediaEl\n * @returns {boolean}\n */\nexport const hasPipSupport = (mediaEl = getTestMediaEl()) => {\n  // NOTE: PWAs for Apple that rely on Safari don't support picture in picture but still have `requestPictureInPicture()`\n  // (which will result in a failed promise). Checking for those conditions here (CJP).\n  // This should still work for macOS PWAs installed using Chrome, where PiP is supported.\n  if (globalThis.matchMedia('(display-mode: standalone)').matches && isSafari) return false;\n  return typeof mediaEl?.requestPictureInPicture === 'function';\n}\n\n/**\n * Test for Fullscreen support\n *\n * @param {HTMLVideoElement} mediaEl\n * @returns {boolean}\n */\nexport const hasFullscreenSupport = (mediaEl = getTestMediaEl()) => {\n  let fullscreenEnabled = document[fullscreenApi.enabled];\n\n  if (!fullscreenEnabled && mediaEl) {\n    fullscreenEnabled = 'webkitSupportsFullscreen' in mediaEl;\n  }\n\n  return fullscreenEnabled;\n};\n\nexport const fullscreenSupported = hasFullscreenSupport();\nexport const pipSupported = hasPipSupport();\nexport const airplaySupported = !!globalThis.WebKitPlaybackTargetAvailabilityEvent;\nexport const castSupported = !!globalThis.chrome;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { fullscreenApi } from './utils/fullscreen-api.js';\nimport { containsComposedNode, getDocumentOrShadowRoot } from './utils/element-utils.js';\nimport {\n  hasVolumeSupportAsync,\n  fullscreenSupported,\n  pipSupported,\n  airplaySupported,\n  castSupported,\n} from './utils/platform-tests.js';\nimport {\n  MediaUIAttributes,\n  TextTrackKinds,\n  TextTrackModes,\n  AvailabilityStates,\n  StreamTypes,\n} from './constants.js';\n\nimport {\n  getTextTracksList,\n  updateTracksModeTo,\n  parseTracks,\n} from './utils/captions.js';\n\nlet volumeSupported;\nexport const volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n  volumeSupported = supported;\n  return volumeSupported;\n});\n\nconst StreamTypeValues = Object.values(StreamTypes);\n\nconst getSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, (textTrack) => {\n    return [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(textTrack.kind);\n  }).sort((a, b) => a.kind >= b.kind ? 1 : -1);\n};\n\nconst getShowingSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, (textTrack) => {\n    return textTrack.mode === TextTrackModes.SHOWING &&\n      [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(textTrack.kind);\n  });\n};\n\nexport const MediaUIStates = {\n  MEDIA_PAUSED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      return media ? media.paused : true;\n    },\n    mediaEvents: ['play', 'playing', 'pause', 'emptied'],\n  },\n  MEDIA_HAS_PLAYED: {\n    // We want to let the user know that the media started playing at any point (`media-has-played`).\n    // Since these propagators are all called when boostrapping state, let's verify this is\n    // a real playing event by checking that 1) there's media and 2) it isn't currently paused.\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return false;\n\n      // TODO: Would seem to leave room for issue if this is called\n      // after a video has played but is currently paused.\n      // Could possibly check for a duration and a positive current time.\n      return !media.paused;\n    },\n    mediaEvents: ['playing', 'emptied'],\n  },\n  MEDIA_ENDED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      return media ? media.ended : false;\n    },\n    mediaEvents: ['seeked', 'ended', 'emptied'],\n  },\n  MEDIA_PLAYBACK_RATE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.playbackRate == 'undefined') {\n        return 1;\n      }\n\n      return media.playbackRate;\n    },\n    mediaEvents: ['ratechange', 'loadstart'],\n  },\n  MEDIA_MUTED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.muted == 'undefined') {\n        return false;\n      }\n\n      return media.muted;\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_VOLUME: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.volume == 'undefined') {\n        return 1;\n      }\n\n      return Number(media.volume);\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_VOLUME_LEVEL: {\n    get: function (controller) {\n      const { media } = controller;\n      let level = 'high';\n\n      if (!media || typeof media.volume == 'undefined') {\n        return level;\n      }\n\n      const { muted, volume } = media;\n\n      if (volume === 0 || muted) {\n        level = 'off';\n      } else if (volume < 0.5) {\n        level = 'low';\n      } else if (volume < 0.75) {\n        level = 'medium';\n      }\n\n      return level;\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_CURRENT_TIME: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.currentTime == 'undefined') {\n        return 0;\n      }\n\n      return media.currentTime;\n    },\n    mediaEvents: ['playing', 'pause', 'timeupdate', 'loadedmetadata'],\n  },\n  MEDIA_DURATION: {\n    get: function (controller) {\n      const { media } = controller;\n\n      // If `defaultduration` is set and we don't yet have a usable `duration`\n      // available, use the default duration.\n      if (\n        controller.hasAttribute('defaultduration') &&\n        (!media ||\n          !media.duration ||\n          Number.isNaN(media.duration) ||\n          !Number.isFinite(media.duration))\n      ) {\n        return +controller.getAttribute('defaultduration');\n      }\n\n      // If `defaultduration` is unset, we still want to propagate `NaN`\n      // for some cases to ensure appropriate media state receiver updates.\n      if (!media || !Number.isFinite(media.duration)) {\n        return Number.NaN;\n      }\n\n      return media.duration;\n    },\n    mediaEvents: ['durationchange', 'loadedmetadata', 'emptied'],\n  },\n  MEDIA_SEEKABLE: {\n    // TODO: Returns undefined and a string, consider a better type\n    // not tied to attribute strings\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.seekable?.length) return undefined;\n\n      const start = media.seekable.start(0);\n      const end = media.seekable.end(media.seekable.length - 1);\n\n      // Account for cases where metadata from slotted media has an \"empty\" seekable (CJP)\n      if (!start && !end) return undefined;\n      return [Number(start.toFixed(3)), Number(end.toFixed(3))];\n    },\n    mediaEvents: ['loadedmetadata', 'emptied', 'progress'],\n  },\n  MEDIA_LOADING: {\n    get: function (controller) {\n      return !!(controller.media?.readyState < 3);\n    },\n    mediaEvents: ['waiting', 'playing', 'emptied'],\n  },\n  MEDIA_BUFFERED: {\n    get: function (controller) {\n      const timeRanges = controller.media?.buffered;\n      return Array.from(controller.media?.buffered ?? [])\n        .map((_, i) => [\n          Number(timeRanges.start(i)).toFixed(3),\n          Number(timeRanges.end(i)).toFixed(3),\n        ]);\n    },\n    mediaEvents: ['progress', 'emptied'],\n  },\n  MEDIA_STREAM_TYPE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      // TODO: Should return default-stream-type in this case if set\n      // Reconsider undefined as default otherwise. Feels odd to return it.\n      if (!media) return undefined;\n\n      const { streamType } = media;\n      if (StreamTypeValues.includes(streamType)) {\n        // If the slotted media supports `streamType` but\n        // `streamType` is \"unknown\", prefer `default-stream-type`\n        // if set (CJP)\n        if (streamType === StreamTypes.UNKNOWN) {\n          /** @TODO Move to non attr state and consider adding as a part of a separate \"default state\" model (CJP) */\n          const defaultType = controller.getAttribute('defaultstreamtype');\n          if ([StreamTypes.LIVE, StreamTypes.ON_DEMAND].includes(defaultType)) {\n            return defaultType;\n          }\n          return undefined;\n        }\n        return streamType;\n      }\n      const duration = media.duration;\n\n      if (duration === Infinity) {\n        return StreamTypes.LIVE;\n      } else if (Number.isFinite(duration)) {\n        return StreamTypes.ON_DEMAND;\n      } else {\n          /** @TODO Move to non attr state and consider adding as a part of a separate \"default state\" model (CJP) */\n        const defaultType = controller.getAttribute('defaultstreamtype');\n\n        if ([StreamTypes.LIVE, StreamTypes.ON_DEMAND].includes(defaultType)) {\n          return defaultType;\n        }\n      }\n\n      return undefined;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n    ],\n  },\n  MEDIA_TARGET_LIVE_WINDOW: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return Number.NaN;\n      const { targetLiveWindow } = media;\n      const streamType = MediaUIStates.MEDIA_STREAM_TYPE.get(controller);\n\n      // Since `NaN` represents either \"unknown\" or \"inapplicable\", need to check if `streamType`\n      // is `\"live\"`. If so, assume it's \"standard live\" (aka `targetLiveWindow === 0`) (CJP)\n      if (\n        (targetLiveWindow == null || Number.isNaN(targetLiveWindow)) &&\n        streamType === StreamTypes.LIVE\n      ) {\n        return 0;\n      }\n      return targetLiveWindow;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n      'targetlivewindowchange',\n    ],\n  },\n  MEDIA_TIME_IS_LIVE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return false;\n\n      if (typeof media.liveEdgeStart === 'number') {\n        if (Number.isNaN(media.liveEdgeStart)) return false;\n        return media.currentTime >= media.liveEdgeStart;\n      }\n\n      const live = MediaUIStates.MEDIA_STREAM_TYPE.get(controller) === 'live';\n      // Can't be playing live if it's not a live stream\n      if (!live) return false;\n\n      const seekable = media.seekable;\n      // If the slotted media element is live but does not expose a 'seekable' `TimeRanges` object,\n      // always assume playing live\n      if (!seekable) return true;\n      // If there is an empty `seekable`, assume we are not playing live\n      if (!seekable.length) return false;\n\n      // Default to 10 seconds\n      // Assuming seekable range already accounts for appropriate buffer room\n      const liveEdgeStartOffset = controller.hasAttribute('liveedgeoffset')\n        ? // TODO: Move to no attr value\n          Number(controller.getAttribute('liveedgeoffset'))\n        : 10;\n      const liveEdgeStart =\n        seekable.end(seekable.length - 1) - liveEdgeStartOffset;\n      return media.currentTime >= liveEdgeStart;\n    },\n    mediaEvents: ['playing', 'timeupdate', 'progress', 'waiting', 'emptied'],\n  },\n  MEDIA_IS_FULLSCREEN: {\n    get: function (controller, event) {\n      const media = controller.media;\n\n      // iOS has a specialized fullscreen API on the video element.\n      // https://developer.apple.com/documentation/webkitjs/htmlvideoelement/1630493-webkitdisplayingfullscreen\n      if (media && document[fullscreenApi.element] === undefined && 'webkitDisplayingFullscreen' in media) {\n        // For some reason webkitDisplayingFullscreen is true when in PiP,\n        // add an extra presentation mode is fullscreen check.\n        return media.webkitDisplayingFullscreen && media.webkitPresentationMode === 'fullscreen';\n      }\n\n      let fullscreenEl;\n\n      if (event) {\n        // Safari < 16.4 doesn't support ShadowRoot.fullscreenElement.\n        // document.fullscreenElement could be several ancestors up the tree.\n        // Use event.target instead.\n        const isSomeElementFullscreen = document[fullscreenApi.element];\n        fullscreenEl = isSomeElementFullscreen ? event.target : null;\n      } else {\n        // If the getter was called w/o an event use the root's fullscreenElement.\n        fullscreenEl =\n          getDocumentOrShadowRoot(controller)?.fullscreenElement ??\n          document[fullscreenApi.element];\n      }\n\n      return containsComposedNode(controller.fullscreenElement, fullscreenEl);\n    },\n    rootEvents: fullscreenApi.rootEvents,\n    // iOS requires `webkitbeginfullscreen` and `webkitendfullscreen` events on the video.\n    mediaEvents: fullscreenApi.mediaEvents,\n  },\n  MEDIA_IS_PIP: {\n    get: function (controller, e) {\n      const media = controller.media;\n\n      if (!media) return false;\n\n      // Rely on event type for state first\n      // in case this doesn't work well for custom elements using internal <video>\n      if (e) {\n        return e.type == 'enterpictureinpicture';\n      } else {\n        const pipElement =\n          // Might need to use the root of media-container\n          // @ts-ignore\n          controller.getRootNode().pictureInPictureElement ??\n          document.pictureInPictureElement;\n        return containsComposedNode(media, pipElement);\n      }\n    },\n    mediaEvents: ['enterpictureinpicture', 'leavepictureinpicture'],\n  },\n  MEDIA_IS_AIRPLAYING: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.remote || media.remote?.state === 'disconnected') return false;\n\n      return media.remote.state;\n    },\n    // Add playing because random disconnects happen after closing AirPlay menu.\n    remoteEvents: ['playing', 'connect', 'connecting', 'disconnect'],\n  },\n  MEDIA_IS_CASTING: {\n    // Note this relies on a customized castable-video element.\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.remote || media.remote?.state === 'disconnected') return false;\n\n      return media.remote.state;\n    },\n    remoteEvents: ['connect', 'connecting', 'disconnect'],\n  },\n  MEDIA_AIRPLAY_UNAVAILABLE: {\n    // NOTE: only adding this if airplay is supported, in part to avoid unnecessary battery consumption per\n    // Apple docs recommendations (See: https://developer.apple.com/documentation/webkitjs/adding_an_airplay_button_to_your_safari_media_controls)\n    get: function (controller, { availability = false } = {}) {\n      if (!airplaySupported) return AvailabilityStates.UNSUPPORTED;\n\n      // NOTE: since we invoke all these event handlers without arguments whenever a media is attached,\n      // need to account for the possibility that event is undefined (CJP).\n      // TODO: Switch to non attr specific value\n      if (availability == null || availability === true) return undefined;\n\n      return AvailabilityStates.UNAVAILABLE;\n    },\n    mediaSetCallback(media, callback) {\n      const isRemotePlaybackDisabled = media.disableRemotePlayback || media.hasAttribute('disableremoteplayback');\n      if (!isRemotePlaybackDisabled) {\n        media.remote\n          ?.watchAvailability((availability) => callback({ availability }))\n          .catch((error) => {\n            if (error.name === 'NotSupportedError') {\n              // Availability monitoring is not supported by the platform, so discovery of\n              // remote playback devices will happen only after remote.prompt() is called.\n              callback({ availability: null });\n            } else {\n              // Thrown if disableRemotePlayback is true for the media element\n              // or if the source can't be played remotely.\n              callback({ availability: false });\n            }\n          });\n      }\n    },\n    mediaUnsetCallback(media) {\n      const isRemotePlaybackDisabled = media.disableRemotePlayback || media.hasAttribute('disableremoteplayback');\n      if (!isRemotePlaybackDisabled) {\n        media.remote?.cancelWatchAvailability();\n      }\n    },\n  },\n  MEDIA_CAST_UNAVAILABLE: {\n    get: function (controller, { availability = false } = {}) {\n      const { media } = controller;\n\n      if (!castSupported || !media?.remote?.state) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      if (availability == null || availability === true) return undefined;\n\n      return AvailabilityStates.UNAVAILABLE;\n    },\n    mediaSetCallback(media, callback) {\n      const isRemotePlaybackDisabled = media.disableRemotePlayback || media.hasAttribute('disableremoteplayback');\n      if (!isRemotePlaybackDisabled) {\n        media.remote\n          ?.watchAvailability((availability) => callback({ availability }))\n          .catch((error) => {\n            if (error.name === 'NotSupportedError') {\n              // Availability monitoring is not supported by the platform, so discovery of\n              // remote playback devices will happen only after remote.prompt() is called.\n              callback({ availability: null });\n            } else {\n              // Thrown if disableRemotePlayback is true for the media element\n              // or if the source can't be played remotely.\n              callback({ availability: false });\n            }\n          });\n      }\n    },\n    mediaUnsetCallback(media) {\n      const isRemotePlaybackDisabled = media.disableRemotePlayback || media.hasAttribute('disableremoteplayback');\n      if (!isRemotePlaybackDisabled) {\n        media.remote?.cancelWatchAvailability();\n      }\n    },\n  },\n  MEDIA_FULLSCREEN_UNAVAILABLE: {\n    get: function () {\n      // TODO: Move to non attr specific value\n      return fullscreenSupported ? undefined : AvailabilityStates.UNAVAILABLE;\n    },\n  },\n  MEDIA_PIP_UNAVAILABLE: {\n    get: function () {\n      // TODO: Move to non attr specific value\n      return pipSupported ? undefined : AvailabilityStates.UNSUPPORTED;\n    },\n  },\n  MEDIA_RENDITION_UNAVAILABLE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.videoRenditions) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      if (!media.videoRenditions?.length) {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      return undefined;\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    videoRenditionsEvents: ['addrendition', 'removerendition'],\n  },\n  MEDIA_AUDIO_TRACK_UNAVAILABLE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.audioTracks) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      // An audio selection is only possible if there are 2 or more audio tracks.\n      if ((media.audioTracks?.length ?? 0) <= 1) {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      return undefined;\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    audioTracksEvents: ['addtrack', 'removetrack'],\n  },\n  MEDIA_VOLUME_UNAVAILABLE: {\n    get: function (controller) {\n      if (volumeSupported !== undefined && !volumeSupported) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      const { media } = controller;\n\n      if (media && typeof media.volume == 'undefined') {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      // TODO: move to non attr specific value\n      return undefined;\n    },\n    // Give a little time for the volume support promise to run\n    mediaEvents: ['loadstart'],\n  },\n  MEDIA_SUBTITLES_LIST: {\n    get: function (controller) {\n      // TODO: Move to non attr specific values\n      return getSubtitleTracks(controller).map(({ kind, label, language }) => ({ kind, label, language }));\n    },\n    mediaEvents: ['loadstart'],\n    textTracksEvents: ['addtrack', 'removetrack'],\n  },\n  MEDIA_SUBTITLES_SHOWING: {\n    get: function (controller, event) {\n      // NOTE: A bit hacky, but this ensures that HAS-style textTracks (e.g. from mux-video)\n      // will also respect `defaultsubtitles` (CJP)\n      if (\n        controller.hasAttribute('defaultsubtitles') &&\n        ['addtrack', 'removetrack'].includes(event?.type) &&\n        [TextTrackKinds.CAPTIONS, TextTrackKinds.SUBTITLES].includes(event?.track?.kind)\n      ) {\n        MediaUIRequestHandlers.MEDIA_TOGGLE_SUBTITLES_REQUEST(undefined, { detail: true }, controller);\n      }\n      return getShowingSubtitleTracks(controller).map(({ kind, label, language }) => ({ kind, label, language }));\n    },\n    mediaEvents: ['loadstart'],\n    textTracksEvents: ['addtrack', 'removetrack', 'change'],\n  },\n  MEDIA_CHAPTERS_CUES: {\n    get: function (controller) {\n      const { media } = controller;\n      if (!media) return [];\n\n      const [chaptersTrack] = getTextTracksList(media, { kind: TextTrackKinds.CHAPTERS });\n\n      return Array.from(chaptersTrack?.cues  ?? [])\n        .map((/** @type VTTCue */{ text, startTime, endTime }) => ({ text, startTime, endTime }));\n    },\n    mediaEvents: ['loadstart', 'loadedmetadata'],\n    textTracksEvents: ['addtrack', 'removetrack'],\n  },\n  MEDIA_RENDITION_LIST: {\n    get: function (controller) {\n      const { media } = controller;\n      return [...media?.videoRenditions ?? []];\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    videoRenditionsEvents: ['addrendition', 'removerendition'],\n  },\n  MEDIA_RENDITION_SELECTED: {\n    get: function (controller) {\n      const { media } = controller;\n      return media?.videoRenditions?.[media.videoRenditions?.selectedIndex]?.id;\n    },\n    mediaEvents: ['emptied'],\n    videoRenditionsEvents: ['addrendition', 'removerendition', 'change'],\n  },\n  MEDIA_AUDIO_TRACK_LIST: {\n    get: function (controller) {\n      const { media } = controller;\n      return [...media?.audioTracks ?? []];\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    audioTracksEvents: ['addtrack', 'removetrack'],\n  },\n  MEDIA_AUDIO_TRACK_ENABLED: {\n    get: function (controller) {\n      const { media } = controller;\n      return [...media?.audioTracks ?? []].find(audioTrack => audioTrack.enabled)?.id;\n    },\n    mediaEvents: ['emptied'],\n    audioTracksEvents: ['addtrack', 'removetrack', 'change'],\n  },\n};\n\n// Capture request events from UI elements and tranlate to actions\nexport const MediaUIRequestHandlers = {\n  MEDIA_PLAY_REQUEST: (media, event, controller) => {\n    const streamType = MediaUIStates.MEDIA_STREAM_TYPE.get(controller);\n    // TODO: Move to not attr value\n    const autoSeekToLive = controller.getAttribute('noautoseektolive') === null;\n\n    if (streamType == StreamTypes.LIVE && autoSeekToLive) {\n      MediaUIRequestHandlers['MEDIA_SEEK_TO_LIVE_REQUEST'](media);\n    }\n    // Not all media's play() returns a Promise, e.g. castable-video\n    media.play()?.catch(() => {});\n  },\n  MEDIA_PAUSE_REQUEST: (media) => media.pause(),\n  MEDIA_MUTE_REQUEST: (media) => (media.muted = true),\n  MEDIA_UNMUTE_REQUEST: (media) => {\n    media.muted = false;\n\n    // Avoid confusion by bumping the volume on unmute\n    if (media.volume === 0) {\n      media.volume = 0.25;\n    }\n  },\n  MEDIA_VOLUME_REQUEST: (media, event, mediaController) => {\n    const volume = event.detail;\n\n    media.volume = volume;\n\n    // If the viewer moves the volume we should unmute for them.\n    if (volume > 0 && media.muted) {\n      media.muted = false;\n    }\n\n    // don't set to localStorage if novolumepref attribute is set\n    if (!mediaController.hasAttribute('novolumepref')) {\n      // Store the last set volume as a local preference, if ls is supported\n      try {\n        globalThis.localStorage.setItem(\n          'media-chrome-pref-volume',\n          volume.toString()\n        );\n      } catch (err) {\n        // ignore\n      }\n    }\n  },\n\n  // This current assumes that the media controller is the fullscreen element\n  // which may be true in most cases but not all.\n  // The prior version of media-chrome supported alt fullscreen elements\n  // and that's something we can work towards here.\n  //\n  // Generally the fullscreen and PiP API's have the exit methods and enabled\n  // flags on the `document`. The active element is accessed on the document\n  // or shadow root but Safari doesn't support this.\n  // Entering fullscreen or PiP is called on the element. i.e.\n  //\n  //   - Document.exitFullscreen()\n  //   - Document.fullscreenEnabled\n  //   - Document.fullscreenElement / (ShadowRoot.fullscreenElement)\n  //   - Element.requestFullscreen()\n  //\n  MEDIA_ENTER_FULLSCREEN_REQUEST: (media, event, controller) => {\n    if (!fullscreenSupported) {\n      console.warn(\n        'MediaChrome: Fullscreen support is unavailable; not entering fullscreen'\n      );\n      return;\n    }\n\n    if (document.pictureInPictureElement) {\n      // Should be async\n      document.exitPictureInPicture();\n    }\n\n    // TODO: Moved from super to just controller, verify that works\n    if (controller[fullscreenApi.enter]) {\n      // Media chrome container fullscreen\n      controller.fullscreenElement[fullscreenApi.enter]();\n    } else if (media.webkitEnterFullscreen) {\n      // Media element fullscreen using iOS API\n      media.webkitEnterFullscreen();\n    } else if (media.requestFullscreen) {\n      // Media element fullscreen, using correct API\n      // So media els don't have to implement multiple APIs.\n      media.requestFullscreen();\n    } else {\n      console.warn('MediaChrome: Fullscreen not supported');\n    }\n  },\n  MEDIA_EXIT_FULLSCREEN_REQUEST: () => {\n    document[fullscreenApi.exit]();\n  },\n  MEDIA_ENTER_PIP_REQUEST: (media) => {\n    if (!document.pictureInPictureEnabled) {\n      console.warn('MediaChrome: Picture-in-picture is not enabled');\n      // Placeholder for emitting a user-facing warning\n      return;\n    }\n\n    if (!media.requestPictureInPicture) {\n      console.warn(\n        'MediaChrome: The current media does not support picture-in-picture'\n      );\n      // Placeholder for emitting a user-facing warning\n      return;\n    }\n\n    // Exit fullscreen if needed\n    if (document[fullscreenApi.element]) {\n      document[fullscreenApi.exit]();\n    }\n\n    const warnNotReady = () => {\n      console.warn(\n        'MediaChrome: The media is not ready for picture-in-picture. It must have a readyState > 0.'\n      );\n    };\n\n    media.requestPictureInPicture().catch((err) => {\n      // InvalidStateError, readyState == 0 (Not ready)\n      if (err.code === 11) {\n        // We can assume the viewer wants the video to load, so attempt to\n        // if we can rely on readyState and preload\n        // Only works in Chrome currently. Safari doesn't allow triggering\n        // in an event listener. Also requires readyState == 4.\n        // Firefox doesn't have the PiP API yet.\n        if (media.readyState === 0 && media.preload === 'none') {\n          const cleanup = () => {\n            media.removeEventListener('loadedmetadata', tryPip);\n            media.preload = 'none';\n          };\n\n          const tryPip = () => {\n            media.requestPictureInPicture().catch(warnNotReady);\n            cleanup();\n          };\n\n          media.addEventListener('loadedmetadata', tryPip);\n          media.preload = 'metadata';\n\n          // No easy way to know if this failed and we should clean up\n          // quickly if it doesn't to prevent an awkward delay for the user\n          setTimeout(() => {\n            if (media.readyState === 0) warnNotReady();\n            cleanup();\n          }, 1000);\n        } else {\n          // Rethrow if unknown context\n          throw err;\n        }\n      } else {\n        // Rethrow if unknown context\n        throw err;\n      }\n    });\n  },\n  MEDIA_EXIT_PIP_REQUEST: () => {\n    if (document.pictureInPictureElement) {\n      // Should be async\n      document.exitPictureInPicture();\n    }\n  },\n  MEDIA_ENTER_CAST_REQUEST: async (media) => {\n    if (media.remote?.state !== 'disconnected') return;\n\n    // Exit fullscreen if needed\n    if (document[fullscreenApi.element]) {\n      document[fullscreenApi.exit]();\n    }\n\n    if (!media.remote.prompt) {\n      console.warn('MediaChrome: Casting is not supported in this environment');\n      return;\n    }\n\n    // Open the browser cast menu.\n    // Note this relies on a customized castable-video element.\n    try {\n      await media.remote.prompt();\n    } catch {\n      // Don't warn here because catch is run when the user closes the cast menu.\n    }\n  },\n  MEDIA_EXIT_CAST_REQUEST: (media) => {\n    if (media.remote?.state !== 'connected') return;\n\n    // Open the browser cast menu.\n    // Note this relies on a customized castable-video element.\n    media.remote.prompt();\n  },\n  MEDIA_SEEK_REQUEST: (media, event) => {\n    const time = event.detail;\n\n    // Can't set the time before the media is ready\n    // Ignore if readyState isn't supported\n    if (media.readyState > 0 || media.readyState === undefined) {\n      media.currentTime = time;\n    }\n  },\n  MEDIA_PLAYBACK_RATE_REQUEST: (media, event) => {\n    media.playbackRate = event.detail;\n  },\n  MEDIA_PREVIEW_REQUEST: (media, event, controller) => {\n    // No media (yet), so bail early\n    if (!media) return;\n\n    const time = event.detail;\n\n    // if time is null, then we're done previewing and want to remove the attributes\n    if (time === null) {\n      controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_TIME, undefined);\n      controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_IMAGE, undefined);\n      controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_COORDS, undefined);\n      return;\n    }\n\n    controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_TIME, time);\n\n    const [chaptersTrack] = getTextTracksList(media, {\n      kind: TextTrackKinds.CHAPTERS\n    });\n\n    const chapterCue = /** @type VTTCue */ (Array.from(chaptersTrack?.cues ?? [])\n      .find((c) => c.startTime <= time && c.endTime > time));\n\n    controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_CHAPTER, chapterCue?.text);\n\n    const [thumbsTrack] = getTextTracksList(media, {\n      kind: TextTrackKinds.METADATA,\n      label: 'thumbnails',\n    });\n\n    const thumbCue = /** @type VTTCue */ (Array.from(thumbsTrack?.cues ?? [])\n      .find((c) => c.startTime >= time));\n\n    if (!thumbCue) return;\n\n    // Since this isn't really \"global state\", we may want to consider moving this \"down\" to the component level,\n    // probably pulled out into its own module/set of functions (CJP)\n    const base = !/'^(?:[a-z]+:)?\\/\\//i.test(thumbCue?.text ?? '')\n      ? // @ts-ignore\n        media.querySelector('track[label=\"thumbnails\"]')?.src\n      : undefined;\n\n    const url = new URL(thumbCue?.text ?? './', base);\n    const previewCoordsStr = new URLSearchParams(url.hash).get('#xywh') ?? '';\n    controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_IMAGE, url.href);\n    controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_COORDS, previewCoordsStr.split(','));\n  },\n  MEDIA_SHOW_SUBTITLES_REQUEST: (_media, event, controller) => {\n    const tracks = getSubtitleTracks(controller);\n    const { detail = [] } = event;\n    const tracksToUpdate = parseTracks(detail);\n    const preferredLanguage = tracksToUpdate[0]?.language;\n    if (preferredLanguage && !controller?.hasAttribute('nosubtitleslangpref')) {\n      globalThis.localStorage.setItem(\n        'media-chrome-pref-subtitles-lang',\n        preferredLanguage\n      );\n    }\n    updateTracksModeTo(TextTrackModes.SHOWING, tracks, tracksToUpdate);\n  },\n  MEDIA_DISABLE_SUBTITLES_REQUEST: (_media, event, controller) => {\n    const tracks = getSubtitleTracks(controller);\n    const { detail: tracksToUpdate = [] } = event;\n    updateTracksModeTo(TextTrackModes.DISABLED, tracks, tracksToUpdate);\n  },\n  MEDIA_TOGGLE_SUBTITLES_REQUEST: (_media, event, controller) => {\n    // NOTE: Like Element::toggleAttribute(), this event uses the detail for an optional \"force\"\n    // value. When present, this means \"toggle to\" \"on\" (aka showing, even if something's already showing)\n    // or \"off\" (aka disabled, even if all tracks are currently disabled).\n    // See, e.g.: https://developer.mozilla.org/en-US/docs/Web/API/Element/toggleAttribute#force (CJP)\n    const { detail: force } = event ?? {};\n    const tracks = getSubtitleTracks(controller);\n    const showingSubitleTracks = getShowingSubtitleTracks(controller);\n    const subtitlesShowing = !!showingSubitleTracks.length;\n    // If there are no tracks, this request doesn't matter, so we're done.\n    if (!tracks.length) return;\n\n    // NOTE: not early bailing on forced cases so we may pick up async cases of toggling on, particularly for HAS-style\n    // (e.g. HLS) media where we may not get our preferred subtitles lang until later (CJP)\n    if (force === false || (subtitlesShowing && force !== true)) {\n      updateTracksModeTo(TextTrackModes.DISABLED, tracks, showingSubitleTracks);\n    } else if (force === true || (!subtitlesShowing && force !== false)) {\n      let subTrack = tracks[0];\n      if (!controller?.hasAttribute('nosubtitleslangpref')) {\n        const subtitlesPref = globalThis.localStorage.getItem('media-chrome-pref-subtitles-lang');\n\n        const userLangPrefs = subtitlesPref\n          ? [subtitlesPref, ...globalThis.navigator.languages]\n          : globalThis.navigator.languages;\n        const preferredAvailableSubs = tracks.filter(textTrack => {\n          return userLangPrefs.some(lang => textTrack.language.toLowerCase().startsWith(lang.split('-')[0]));\n        }).sort((textTrackA, textTrackB) => {\n          const idxA = userLangPrefs.findIndex(lang => textTrackA.language.toLowerCase().startsWith(lang.split('-')[0]));\n          const idxB = userLangPrefs.findIndex(lang => textTrackB.language.toLowerCase().startsWith(lang.split('-')[0]));\n          return idxA - idxB;\n        });\n\n        // Since there may not have been any user preferred subs/cc match, keep the default (picking the first) as\n        // the subtitle track to show for these cases.\n        if (preferredAvailableSubs[0]) {\n          subTrack = preferredAvailableSubs[0];\n        }\n      }\n      const { language, label, kind } = subTrack;\n      updateTracksModeTo(TextTrackModes.DISABLED, tracks, showingSubitleTracks);\n      updateTracksModeTo(\n        TextTrackModes.SHOWING,\n        tracks,\n        [{ language, label, kind }]\n      );\n    }\n  },\n  MEDIA_AIRPLAY_REQUEST: async (media) => {\n    if (!media?.remote) return;\n\n    if (!media.remote.prompt) {\n      console.warn('MediaChrome: AirPlay is not supported in this environment');\n      return;\n    }\n\n    try {\n      await media.remote.prompt();\n    } catch {\n      // Don't warn here because catch is run when the user closes the airplay menu.\n    }\n  },\n  MEDIA_SEEK_TO_LIVE_REQUEST: (media) => {\n    const seekable = media.seekable;\n\n    if (!seekable) {\n      console.warn('MediaChrome: Media element does not support seeking to live.');\n      return;\n    }\n\n    if (!seekable.length) {\n      console.warn('MediaChrome: Media is unable to seek to live.');\n      return;\n    }\n\n    media.currentTime = seekable.end(seekable.length - 1);\n  },\n  MEDIA_RENDITION_REQUEST: (media, event) => {\n    if (!media?.videoRenditions) {\n      console.warn('MediaChrome: Rendition selection not supported by this media.');\n      return;\n    }\n\n    const renditionId = event.detail;\n    const index = [...media.videoRenditions].findIndex(r => r.id == renditionId);\n\n    if (media.videoRenditions.selectedIndex != index) {\n      media.videoRenditions.selectedIndex = index;\n    }\n  },\n  MEDIA_AUDIO_TRACK_REQUEST: (media, event) => {\n    if (!media?.audioTracks) {\n      console.warn('MediaChrome: Audio track selection not supported by this media.');\n      return;\n    }\n\n    const audioTrackId = event.detail;\n\n    for (let track of media.audioTracks) {\n      track.enabled = audioTrackId == track.id;\n    }\n  },\n};\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { MediaContainer } from './media-container.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\nimport { constToCamel, delay, stringifyRenditionList, stringifyAudioTrackList } from './utils/utils.js';\nimport { stringifyTextTrackList } from './utils/captions.js';\nimport {\n  MediaUIEvents,\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n  AttributeToStateChangeEventMap,\n  MediaUIProps,\n} from './constants.js';\nimport { MediaUIRequestHandlers, MediaUIStates, volumeSupportPromise } from './controller.js';\nimport { setBooleanAttr, setNumericAttr, setStringAttr } from './utils/element-utils.js';\n\nconst ButtonPressedKeys = ['ArrowLeft', 'ArrowRight', 'Enter', ' ', 'f', 'm', 'k', 'c'];\nconst DEFAULT_SEEK_OFFSET = 10;\nconst DEFAULT_TIME = 0;\n\nexport const Attributes = {\n  DEFAULT_SUBTITLES: 'defaultsubtitles',\n  DEFAULT_STREAM_TYPE: 'defaultstreamtype',\n  DEFAULT_DURATION: 'defaultduration',\n  FULLSCREEN_ELEMENT: 'fullscreenelement',\n  HOTKEYS: 'hotkeys',\n  KEYS_USED: 'keysused',\n  LIVE_EDGE_OFFSET: 'liveedgeoffset',\n  NO_AUTO_SEEK_TO_LIVE: 'noautoseektolive',\n  NO_HOTKEYS: 'nohotkeys',\n};\n\n/**\n * Media Controller should not mimic the HTMLMediaElement API.\n * @see https://github.com/muxinc/media-chrome/pull/182#issuecomment-1067370339\n *\n * @attr {boolean} defaultsubtitles\n * @attr {string} defaultstreamtype\n * @attr {string} defaultduration\n * @attr {string} fullscreenelement\n * @attr {boolean} nohotkeys\n * @attr {string} hotkeys\n * @attr {string} keysused\n * @attr {string} liveedgeoffset\n * @attr {boolean} noautoseektolive\n */\nclass MediaController extends MediaContainer {\n  static get observedAttributes() {\n    return super.observedAttributes.concat(\n      Attributes.NO_HOTKEYS,\n      Attributes.HOTKEYS,\n      Attributes.DEFAULT_STREAM_TYPE,\n      Attributes.DEFAULT_SUBTITLES,\n      Attributes.DEFAULT_DURATION,\n    );\n  }\n\n  #hotKeys = new AttributeTokenList(this, Attributes.HOTKEYS);\n  #fullscreenElement;\n  /** @type {HTMLDocument|ShadowRoot} */\n  #rootNode;\n\n  constructor() {\n    super();\n\n    // Update volume support ASAP\n    if (MediaUIStates.MEDIA_VOLUME_UNAVAILABLE.get(this) === undefined) {\n      // NOTE: In order to propagate ASAP, we currently need to ensure that\n      // the volume support promise has resolved. Given the async nature of\n      // some of these environment state values, we may want to model this\n      // a bit better (CJP).\n      volumeSupportPromise.then(() => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n          MediaUIStates.MEDIA_VOLUME_UNAVAILABLE.get(this)\n        );\n      });\n    }\n\n    // Track externally associated control elements\n    this.mediaStateReceivers = [];\n    this.associatedElementSubscriptions = new Map();\n    this.associateElement(this);\n\n    // Apply ui event listeners to self\n    // Should apply to any UI container, not just controller\n    Object.keys(MediaUIRequestHandlers).forEach((key) => {\n      const handlerName = `_handle${constToCamel(key, true)}`;\n\n      // TODO: Move to map, not obj root property\n      this[handlerName] = (e) => {\n        // Stop media UI events from continuing to bubble\n        e.stopPropagation();\n\n        if (!this.media) {\n          console.warn('Media Chrome: No media available.');\n          return;\n        }\n\n        MediaUIRequestHandlers[key](this.media, e, this);\n      };\n      this.addEventListener(MediaUIEvents[key], this[handlerName]);\n    });\n\n    // Build event listeners for media states\n    this._mediaStatePropagators = {};\n    Object.keys(MediaUIStates).forEach((key) => {\n      this._mediaStatePropagators[key] = e => {\n        this.propagateMediaState(MediaUIProps[key], MediaUIStates[key].get(this, e));\n      };\n    });\n  }\n\n  get fullscreenElement() {\n    return this.#fullscreenElement ?? this;\n  }\n\n  set fullscreenElement(element) {\n    if (this.hasAttribute(Attributes.FULLSCREEN_ELEMENT)) {\n      this.removeAttribute(Attributes.FULLSCREEN_ELEMENT);\n    }\n    this.#fullscreenElement = element;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === Attributes.NO_HOTKEYS) {\n      if (newValue !== oldValue && newValue === '') {\n        if (this.hasAttribute(Attributes.HOTKEYS)) {\n          console.warn('Media Chrome: Both `hotkeys` and `nohotkeys` have been set. All hotkeys will be disabled.');\n        }\n        this.disableHotkeys();\n\n      } else if (newValue !== oldValue && newValue === null) {\n        this.enableHotkeys();\n      }\n    } else if (attrName === Attributes.HOTKEYS) {\n        this.#hotKeys.value = newValue;\n\n    } else if (\n      attrName === Attributes.DEFAULT_SUBTITLES &&\n      newValue !== oldValue &&\n      newValue === ''\n    ) {\n      this.dispatchEvent(\n        new globalThis.CustomEvent(\n          MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST,\n          { composed: true, bubbles: true, detail: true }\n        )\n      );\n\n    } else if (attrName === Attributes.DEFAULT_STREAM_TYPE) {\n      this.propagateMediaState(MediaUIProps.MEDIA_STREAM_TYPE);\n\n    } else if (attrName === Attributes.FULLSCREEN_ELEMENT) {\n      const el = newValue ? this.#rootNode?.getElementById(newValue) : undefined;\n      // NOTE: Setting the internal private prop here to not\n      // clear the attribute that was just set (CJP).\n      this.#fullscreenElement = el;\n    }\n  }\n\n  connectedCallback() {\n    // getRootNode() in disconnectedCallback returns the media-controller element itself\n    // but we need the HTMLDocument or ShadowRoot if media-controller is in a shadow DOM.\n    // We store the correct root node here so we can access it later.\n    this.#rootNode = /** @type HTMLDocument | ShadowRoot */ (this.getRootNode());\n\n    // mediaSetCallback() is called in super.connectedCallback();\n    super.connectedCallback();\n\n    this.enableHotkeys();\n  }\n\n  disconnectedCallback() {\n    // mediaUnsetCallback() is called in super.disconnectedCallback();\n    super.disconnectedCallback();\n    this.disableHotkeys();\n\n    // Disable captions on disconnect to prevent a memory leak if they stay enabled.\n    this.dispatchEvent(\n      new globalThis.CustomEvent(\n        MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST,\n        { composed: true, bubbles: true, detail: false }\n      )\n    );\n  }\n\n  /**\n   * @override\n   * @param {HTMLMediaElement} media\n   */\n  mediaSetCallback(media) {\n    super.mediaSetCallback(media);\n\n    // TODO: What does this do? At least add comment, maybe move to media-container\n    if (!media.hasAttribute('tabindex')) {\n      media.tabIndex = -1;\n    }\n\n    // Listen for media state changes and propagate them to children and associated els\n    Object.keys(MediaUIStates).forEach((key) => {\n      const {\n        mediaSetCallback,\n        mediaEvents,\n        rootEvents,\n        textTracksEvents,\n        videoRenditionsEvents,\n        audioTracksEvents,\n        remoteEvents,\n      } = MediaUIStates[key];\n\n      const handler = this._mediaStatePropagators[key];\n\n      if (mediaSetCallback) {\n        mediaSetCallback(media, handler);\n        handler();\n      }\n\n      mediaEvents?.forEach((eventName) => {\n        media.addEventListener(eventName, handler);\n        handler();\n      });\n\n      rootEvents?.forEach((eventName) => {\n        this.#rootNode?.addEventListener(eventName, handler);\n        handler();\n      });\n\n      textTracksEvents?.forEach((eventName) => {\n        media.textTracks?.addEventListener(eventName, handler);\n        handler();\n      });\n\n      videoRenditionsEvents?.forEach((eventName) => {\n        // @ts-ignore\n        media.videoRenditions?.addEventListener(eventName, handler);\n        handler();\n      });\n\n      audioTracksEvents?.forEach((eventName) => {\n        // @ts-ignore\n        media.audioTracks?.addEventListener(eventName, handler);\n        handler();\n      });\n\n      remoteEvents?.forEach((eventName) => {\n        media.remote?.addEventListener(eventName, handler);\n        handler();\n      });\n    });\n\n    // don't get from localStorage if novolumepref attribute is set\n    if (!this.hasAttribute('novolumepref')) {\n      // Update the media with the last set volume preference\n      // This would preferably live with the media element, not a control.\n      try {\n        const volPref = globalThis.localStorage.getItem('media-chrome-pref-volume');\n        if (volPref !== null) media.volume = volPref;\n      } catch (e) {\n        console.debug('Media Chrome: Error getting volume pref', e);\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {HTMLMediaElement} media\n   */\n  mediaUnsetCallback(media) {\n    super.mediaUnsetCallback(media);\n\n    // Remove all state change propagators\n    Object.keys(MediaUIStates).forEach((key) => {\n      const {\n        mediaUnsetCallback,\n        mediaEvents,\n        rootEvents,\n        textTracksEvents,\n        videoRenditionsEvents,\n        audioTracksEvents,\n        remoteEvents,\n      } = MediaUIStates[key];\n\n      const handler = this._mediaStatePropagators[key];\n\n      mediaEvents?.forEach((eventName) => {\n        media.removeEventListener(eventName, handler);\n      });\n\n      rootEvents?.forEach((eventName) => {\n        this.#rootNode?.removeEventListener(eventName, handler);\n      });\n\n      textTracksEvents?.forEach((eventName) => {\n        media.textTracks?.removeEventListener(eventName, handler);\n      });\n\n      videoRenditionsEvents?.forEach((eventName) => {\n        // @ts-ignore\n        media.videoRenditions?.removeEventListener(eventName, handler);\n        handler();\n      });\n\n      audioTracksEvents?.forEach((eventName) => {\n        // @ts-ignore\n        media.audioTracks?.removeEventListener(eventName, handler);\n        handler();\n      });\n\n      remoteEvents?.forEach((eventName) => {\n        media.remote?.removeEventListener(eventName, handler);\n        handler();\n      });\n\n      if (mediaUnsetCallback) {\n        mediaUnsetCallback(media, handler);\n        handler();\n      }\n    });\n\n    // Reset to paused state\n    // TODO: Can we just reset all state here?\n    // Should hasPlayed refer to the media element or the controller?\n    // i.e. the poster might re-show if not handled by the poster el\n    this.propagateMediaState(MediaUIProps.MEDIA_PAUSED, true);\n  }\n\n  propagateMediaState(stateName, state) {\n    const previousState = getStateValue(this.mediaStateReceivers, stateName);\n\n    propagateMediaState(this.mediaStateReceivers, stateName, state);\n\n    if (previousState === getStateValue(this.mediaStateReceivers, stateName)) return;\n\n    const attrName = stateName.toLowerCase();\n    // TODO: I don't think we want these events to bubble? Video element states don't. (heff)\n    const evt = new globalThis.CustomEvent(\n      AttributeToStateChangeEventMap[attrName],\n      { composed: true, bubbles: true, detail: state }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  associateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n\n    if (associatedElementSubscriptions.has(element)) return;\n\n    const registerMediaStateReceiver =\n      this.registerMediaStateReceiver.bind(this);\n    const unregisterMediaStateReceiver =\n      this.unregisterMediaStateReceiver.bind(this);\n\n    /** @TODO Should we support \"removing association\" */\n    const unsubscribe = monitorForMediaStateReceivers(\n      element,\n      registerMediaStateReceiver,\n      unregisterMediaStateReceiver\n    );\n\n    // Add all media request event listeners to the Associated Element. This allows any DOM element that\n    // is a descendant of any Associated Element (including the <media-controller/> itself) to make requests\n    // for media state changes rather than constraining that exclusively to a Media State Receivers.\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.addEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n\n    associatedElementSubscriptions.set(element, unsubscribe);\n  }\n\n  unassociateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n    if (!associatedElementSubscriptions.has(element)) return;\n    const unsubscribe = associatedElementSubscriptions.get(element);\n    unsubscribe();\n    associatedElementSubscriptions.delete(element);\n\n    // Remove all media UI event listeners\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.removeEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n  }\n\n  registerMediaStateReceiver(el) {\n    if (!el) return;\n    const els = this.mediaStateReceivers;\n    const index = els.indexOf(el);\n    if (index > -1) return;\n\n    els.push(el);\n\n    Object.keys(MediaUIStates).forEach((stateConstName)=>{\n      const stateDetails = MediaUIStates[stateConstName];\n\n      propagateMediaState(\n        [el],\n        MediaUIProps[stateConstName],\n        stateDetails.get(this)\n      );\n    });\n  }\n\n  unregisterMediaStateReceiver(el) {\n    const els = this.mediaStateReceivers;\n\n    const index = els.indexOf(el);\n    if (index < 0) return;\n\n    els.splice(index, 1);\n  }\n\n  #keyUpHandler(e) {\n    const { key } = e;\n    if (!ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    this.keyboardShortcutHandler(e);\n  }\n\n  #keyDownHandler(e) {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    // if the pressed key might move the page, we need to preventDefault on keydown\n    // because doing so on keyup is too late\n    // We also want to make sure that the hotkey hasn't been turned off before doing so\n    if (\n      [' ', 'ArrowLeft', 'ArrowRight'].includes(key) &&\n      !(this.#hotKeys.contains(`no${key.toLowerCase()}`) ||\n        key === ' ' && this.#hotKeys.contains('nospace'))\n    ) {\n      e.preventDefault();\n    }\n\n    this.addEventListener('keyup', this.#keyUpHandler, {once: true});\n  }\n\n  enableHotkeys() {\n    this.addEventListener('keydown', this.#keyDownHandler);\n  }\n\n  disableHotkeys() {\n    this.removeEventListener('keydown', this.#keyDownHandler);\n    this.removeEventListener('keyup', this.#keyUpHandler);\n  }\n\n  get hotkeys() {\n    return this.#hotKeys;\n  }\n\n  keyboardShortcutHandler(e) {\n    // TODO: e.target might need to be replaced w/ e.composedPath to account for shadow DOM.\n    // if the event's key is already handled by the target, skip keyboard shortcuts\n    // keysUsed is either an attribute or a property.\n    // The attribute is a DOM array and the property is a JS array\n    // In the attribute Space represents the space key and gets convered to ' '\n    const keysUsed = (e.target.getAttribute(Attributes.KEYS_USED)?.split(' ') ?? e.target?.keysUsed ?? [])\n      .map(key => key === 'Space' ? ' ' : key)\n      .filter(Boolean);\n\n    if (keysUsed.includes(e.key)) {\n      return;\n    }\n\n    let eventName, currentTimeStr, currentTime, detail, evt;\n    const seekOffset = DEFAULT_SEEK_OFFSET;\n\n    // if the blocklist contains the key, skip handling it.\n    if (this.#hotKeys.contains(`no${e.key.toLowerCase()}`)) return;\n    if (e.key === ' ' && this.#hotKeys.contains(`nospace`)) return;\n\n    // These event triggers were copied from the revelant buttons\n    switch (e.key) {\n      case ' ':\n      case 'k':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null\n            ? MediaUIEvents.MEDIA_PLAY_REQUEST\n            : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'm':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_VOLUME_LEVEL) === 'off'\n            ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n            : MediaUIEvents.MEDIA_MUTE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'f':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_IS_FULLSCREEN) != null\n            ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n            : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'c':\n        this.dispatchEvent(\n          new globalThis.CustomEvent(\n            MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST,\n            { composed: true, bubbles: true }\n          )\n        );\n        break;\n\n      case 'ArrowLeft':\n        currentTimeStr = this.getAttribute(\n          MediaUIAttributes.MEDIA_CURRENT_TIME\n        );\n        currentTime =\n          currentTimeStr && !Number.isNaN(+currentTimeStr)\n            ? +currentTimeStr\n            : DEFAULT_TIME;\n        detail = Math.max(currentTime - seekOffset, 0);\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n\n      case 'ArrowRight':\n        currentTimeStr = this.getAttribute(\n          MediaUIAttributes.MEDIA_CURRENT_TIME\n        );\n        currentTime =\n          currentTimeStr && !Number.isNaN(+currentTimeStr)\n            ? +currentTimeStr\n            : DEFAULT_TIME;\n        detail = Math.max(currentTime + seekOffset, 0);\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\nconst MEDIA_UI_PROP_NAMES = Object.values(MediaUIProps);\n\nconst getMediaUIAttributesFrom = (child) => {\n  let { observedAttributes } = child.constructor;\n\n  // observedAttributes are only available if the custom element was upgraded.\n  // example: media-gesture-receiver in the shadow DOM requires an upgrade.\n  if (!observedAttributes && child.nodeName?.includes('-')) {\n    globalThis.customElements.upgrade(child);\n    ({ observedAttributes } = child.constructor);\n  }\n\n  const mediaChromeAttributesList = child\n    ?.getAttribute?.(MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES)\n    ?.split?.(/\\s+/);\n  if (!Array.isArray(observedAttributes || mediaChromeAttributesList))\n    return [];\n  return (observedAttributes || mediaChromeAttributesList).filter((attrName) =>\n    MEDIA_UI_ATTRIBUTE_NAMES.includes(attrName)\n  );\n};\n\nconst hasMediaUIProps = (mediaStateReceiverCandidate) => {\n  if (\n    mediaStateReceiverCandidate.nodeName?.includes('-')\n    && !!globalThis.customElements.get(mediaStateReceiverCandidate.nodeName?.toLowerCase())\n    && !(mediaStateReceiverCandidate instanceof globalThis.customElements.get(mediaStateReceiverCandidate.nodeName.toLowerCase()))\n  ) {\n    globalThis.customElements.upgrade(mediaStateReceiverCandidate);\n  }\n  return MEDIA_UI_PROP_NAMES.some(propName => propName in mediaStateReceiverCandidate);\n};\n\nconst isMediaStateReceiver = (child) => {\n  return hasMediaUIProps(child) || !!getMediaUIAttributesFrom(child).length;\n};\n\nconst serializeTuple = (tuple) => tuple?.join?.(':');\n\nconst CustomAttrSerializer = {\n  [MediaUIAttributes.MEDIA_SUBTITLES_LIST]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SUBTITLES_SHOWING]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SEEKABLE]: serializeTuple,\n  [MediaUIAttributes.MEDIA_BUFFERED]: (tuples) => tuples?.map(serializeTuple).join(' '),\n  [MediaUIAttributes.MEDIA_PREVIEW_COORDS]: (coords) => coords?.join(' '),\n  [MediaUIAttributes.MEDIA_RENDITION_LIST]: stringifyRenditionList,\n  [MediaUIAttributes.MEDIA_AUDIO_TRACK_LIST]: stringifyAudioTrackList,\n};\n\nconst setAttr = async (child, attrName, attrValue) => {\n  // If the node is not connected to the DOM yet wait on macrotask. Fix for:\n  //   Uncaught DOMException: Failed to construct 'CustomElement':\n  //   The result must not have attributes\n  if (!child.isConnected) {\n    await delay(0);\n  }\n\n  // NOTE: For \"nullish\" (null/undefined), can use any setter\n  if (typeof attrValue === 'boolean' || attrValue == null) {\n    return setBooleanAttr(child, attrName, attrValue);\n  }\n  if (typeof attrValue === 'number') {\n    return setNumericAttr(child, attrName, attrValue)\n  }\n  if (typeof attrValue === 'string') {\n    return setStringAttr(child, attrName, attrValue);\n  }\n  // Treat empty arrays as \"nothing\" values\n  if (Array.isArray(attrValue) && !attrValue.length) {\n    return child.removeAttribute(attrName);\n  }\n\n  // For \"special\" values with custom serializers or all other values\n  const val = CustomAttrSerializer[attrName]?.(attrValue) ?? attrValue;\n  return child.setAttribute(attrName, val);\n};\n\nconst isMediaSlotElementDescendant = (el) => !!el.closest?.('*[slot=\"media\"]');\n\n/**\n *\n * @description This function will recursively check for any descendants (including the rootNode)\n * that are Media State Receivers and invoke `mediaStateReceiverCallback` with any Media State Receiver\n * found\n *\n * @param {HTMLElement} rootNode\n * @param {function} mediaStateReceiverCallback\n */\nconst traverseForMediaStateReceivers = (\n  rootNode,\n  mediaStateReceiverCallback\n) => {\n  // We (currently) don't check if descendants of the `media` (e.g. <video/>) are Media State Receivers\n  // See also: `propagateMediaState`\n  if (isMediaSlotElementDescendant(rootNode)) {\n    return;\n  }\n\n  const traverseForMediaStateReceiversSync = (\n    rootNode,\n    mediaStateReceiverCallback\n  ) => {\n    // The rootNode is itself a Media State Receiver\n    if (isMediaStateReceiver(rootNode)) {\n      mediaStateReceiverCallback(rootNode);\n    }\n\n    const { children = [] } = rootNode ?? {};\n    const shadowChildren = rootNode?.shadowRoot?.children ?? [];\n    const allChildren = [...children, ...shadowChildren];\n\n    // Traverse all children (including shadowRoot children) to see if they are/have Media State Receivers\n    allChildren.forEach((child) =>\n      traverseForMediaStateReceivers(child, mediaStateReceiverCallback)\n    );\n  };\n\n  // Custom Elements (and *only* Custom Elements) must have a hyphen (\"-\") in their name. So, if the rootNode is\n  // a custom element (aka has a hyphen in its name), wait until it's defined before attempting traversal to determine\n  // whether or not it or its descendants are Media State Receivers.\n  // IMPORTANT NOTE: We're intentionally *always* waiting for the `whenDefined()` Promise to resolve here\n  // (instead of using `globalThis.customElements.get(name)` to check if a custom element is already defined/registered)\n  // because we encountered some reliability issues with the custom element instances not being fully \"ready\", even if/when\n  // they are available in the registry via `globalThis.customElements.get(name)`.\n  const name = rootNode?.nodeName.toLowerCase();\n  if (name.includes('-') && !isMediaStateReceiver(rootNode)) {\n    globalThis.customElements.whenDefined(name).then(() => {\n      // Try/traverse again once the custom element is defined\n      traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n    });\n    return;\n  }\n\n  traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n};\n\nconst propagateMediaState = (els, stateName, val) => {\n  els.forEach((el) => {\n    if (stateName in el) {\n      el[stateName] = val;\n      return;\n    }\n    const relevantAttrs = getMediaUIAttributesFrom(el);\n    const attrName = stateName.toLowerCase();\n    if (!relevantAttrs.includes(attrName)) return;\n    setAttr(el, attrName, val);\n  });\n};\n\nconst getStateValue = (els, stateName) => {\n  for (const el of els) {\n    if (stateName in el) {\n      return el[stateName];\n    }\n    const relevantAttrs = getMediaUIAttributesFrom(el);\n    const attrName = stateName.toLowerCase();\n    if (!relevantAttrs.includes(attrName)) continue;\n    return el.getAttribute(attrName);\n  }\n}\n\n/**\n *\n * @description This function will monitor the rootNode for any Media State Receiver descendants\n * that are already present, added, or removed, invoking the relevant callback function for each\n * case.\n *\n * @param {HTMLElement} rootNode\n * @param {function} registerMediaStateReceiver\n * @param {function} unregisterMediaStateReceiver\n * @returns An unsubscribe method, used to stop monitoring descendants of rootNode and to unregister its descendants\n *\n */\nconst monitorForMediaStateReceivers = (\n  rootNode,\n  registerMediaStateReceiver,\n  unregisterMediaStateReceiver\n) => {\n  // First traverse the tree to register any current Media State Receivers\n  traverseForMediaStateReceivers(rootNode, registerMediaStateReceiver);\n\n  // Monitor for any event-based requests from descendants to register/unregister as a Media State Receiver\n  const registerMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    registerMediaStateReceiver(el);\n  };\n\n  const unregisterMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    unregisterMediaStateReceiver(el);\n  };\n\n  rootNode.addEventListener(\n    MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n    registerMediaStateReceiverHandler\n  );\n  rootNode.addEventListener(\n    MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n    unregisterMediaStateReceiverHandler\n  );\n\n  // Observe any changes to the DOM for any descendants that are identifiable as Media State Receivers\n  // and register or unregister them, depending on the change that occurred.\n  const mutationCallback = (mutationsList) => {\n    mutationsList.forEach((mutationRecord) => {\n      const {\n        addedNodes = [],\n        removedNodes = [],\n        type,\n        target,\n        attributeName,\n      } = mutationRecord;\n      if (type === 'childList') {\n        // For each added node, register any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(addedNodes, (node) =>\n          traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n        );\n        // For each removed node, unregister any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(removedNodes, (node) =>\n          traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n        );\n      } else if (\n        type === 'attributes' &&\n        attributeName === MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES\n      ) {\n        if (isMediaStateReceiver(target)) {\n          // Changed from a \"non-Media State Receiver\" to a Media State Receiver: register it.\n          registerMediaStateReceiver(target);\n        } else {\n          // Changed from a Media State Receiver to a \"non-Media State Receiver\": unregister it.\n          unregisterMediaStateReceiver(target);\n        }\n      }\n    });\n  };\n\n  // Storing prevSlotted elements so we can cleanup if slotted elements change over time.\n  let prevSlotted = [];\n  const slotChangeHandler = (event) => {\n    const slotEl = /** @type {HTMLSlotElement} */ event.target;\n    if (slotEl.name === \"media\") return;\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n    );\n    prevSlotted = /** @type {HTMLElement[]} */ ([...slotEl.assignedElements({ flatten: true })]);\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n    );\n  };\n  rootNode.addEventListener('slotchange', slotChangeHandler);\n\n  const observer = new MutationObserver(mutationCallback);\n  observer.observe(rootNode, {\n    childList: true,\n    attributes: true,\n    subtree: true,\n  });\n\n  const unsubscribe = () => {\n    // Unregister any Media State Receiver descendants (including ourselves)\n    traverseForMediaStateReceivers(rootNode, unregisterMediaStateReceiver);\n    // Make sure we remove the slotchange event listener\n    rootNode.removeEventListener('slotchange', slotChangeHandler);\n    // Stop observing for Media State Receivers\n    observer.disconnect();\n    // Stop listening for Media State Receiver events.\n    rootNode.removeEventListener(\n      MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n      registerMediaStateReceiverHandler\n    );\n    rootNode.removeEventListener(\n      MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n      unregisterMediaStateReceiverHandler\n    );\n  };\n\n  return unsubscribe;\n};\n\nif (!globalThis.customElements.get('media-controller')) {\n  globalThis.customElements.define('media-controller', MediaController);\n}\n\nexport { MediaController };\nexport default MediaController;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { insertCSSRule, getOrInsertCSSRule, getPointProgressOnLine } from './utils/element-utils.js';\nimport { observeResize, unobserveResize } from './utils/resize-observer.js';\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      --_focus-box-shadow: var(--media-focus-box-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));\n      --_media-range-padding: var(--media-range-padding, var(--media-control-padding, 10px));\n\n      box-shadow: var(--_focus-visible-box-shadow, none);\n      background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n      height: calc(var(--media-control-height, 24px) + 2 * var(--_media-range-padding));\n      display: inline-flex;\n      align-items: center;\n      ${/* Don't horizontal align w/ justify-content! #container can go negative on the x-axis w/ small width. */''}\n      vertical-align: middle;\n      box-sizing: border-box;\n      position: relative;\n      width: 100px;\n      transition: background .15s linear;\n      cursor: pointer;\n      pointer-events: auto;\n      touch-action: none; ${/* Prevent scrolling when dragging on mobile. */''}\n      z-index: 1; ${/* Apply z-index to overlap buttons below. */''}\n    }\n\n    ${/* Reset before `outline` on track could be set by a CSS var */''}\n    input[type=range]:focus {\n      outline: 0;\n    }\n    input[type=range]:focus::-webkit-slider-runnable-track {\n      outline: 0;\n    }\n\n    :host(:hover) {\n      background: var(--media-control-hover-background, rgb(50 50 70 / .7));\n    }\n\n    #leftgap {\n      padding-left: var(--media-range-padding-left, var(--_media-range-padding));\n    }\n\n    #rightgap {\n      padding-right: var(--media-range-padding-right, var(--_media-range-padding));\n    }\n\n    #startpoint,\n    #endpoint {\n      position: absolute;\n    }\n\n    #endpoint {\n      right: 0;\n    }\n\n    #container {\n      ${/* Not using the CSS `padding` prop makes it easier for slide open volume ranges so the width can be zero. */''}\n      width: var(--media-range-track-width, 100%);\n      transform: translate(var(--media-range-track-translate-x, 0px), var(--media-range-track-translate-y, 0px));\n      position: relative;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      min-width: 40px;\n    }\n\n    #range {\n      ${/* The input range acts as a hover and hit zone for input events. */''}\n      display: var(--media-time-range-hover-display, block);\n      bottom: var(--media-time-range-hover-bottom, -7px);\n      height: var(--media-time-range-hover-height, max(100% + 7px, 25px));\n      width: 100%;\n      position: absolute;\n      cursor: pointer;\n\n      -webkit-appearance: none; ${/* Hides the slider so that custom slider can be made */''}\n      -webkit-tap-highlight-color: transparent;\n      background: transparent; ${/* Otherwise white in Chrome */''}\n      margin: 0;\n      z-index: 1;\n    }\n\n    @media (hover: hover) {\n      #range {\n        bottom: var(--media-time-range-hover-bottom, -5px);\n        height: var(--media-time-range-hover-height, max(100% + 5px, 20px));\n      }\n    }\n\n    ${/* Special styling for WebKit/Blink */''}\n    ${/* Make thumb width/height small so it has no effect on range click position. */''}\n    #range::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      background: transparent;\n      width: .1px;\n      height: .1px;\n    }\n\n    ${/* The thumb is not positioned relative to the track in Firefox */''}\n    #range::-moz-range-thumb {\n      background: transparent;\n      border: transparent;\n      width: .1px;\n      height: .1px;\n    }\n\n    #appearance {\n      height: var(--media-range-track-height, 4px);\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      position: absolute;\n      ${/* Required for Safari to stop glitching track height on hover */''}\n      will-change: transform;\n    }\n\n    #background,\n    #track {\n      border-radius: var(--media-range-track-border-radius, 1px);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    #background {\n      background: var(--media-range-track-background, rgb(255 255 255 / .2));\n      backdrop-filter: var(--media-range-track-background-backdrop-filter);\n      -webkit-backdrop-filter: var(--media-range-track-background-backdrop-filter);\n    }\n\n    #track {\n      border: var(--media-range-track-border, none);\n      outline: var(--media-range-track-outline);\n      outline-offset: var(--media-range-track-outline-offset);\n      backdrop-filter: var(--media-range-track-backdrop-filter);\n      -webkit-backdrop-filter: var(--media-range-track-backdrop-filter);\n      box-shadow: var(--media-range-track-box-shadow, none);\n      overflow: hidden;\n    }\n\n    #progress,\n    #highlight,\n    #pointer {\n      position: absolute;\n      height: 100%;\n      will-change: width;\n    }\n\n    #progress {\n      background: var(--media-range-bar-color, var(--media-primary-color, rgb(238 238 238)));\n      transition: var(--media-range-track-transition);\n    }\n\n    #pointer {\n      background: var(--media-range-track-pointer-background);\n      border-right: var(--media-range-track-pointer-border-right);\n      transition: visibility .25s, opacity .25s;\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    @media (hover: hover) {\n      :host(:hover) #pointer {\n        transition: visibility .5s, opacity .5s;\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n\n    #thumb {\n      width: var(--media-range-thumb-width, 10px);\n      height: var(--media-range-thumb-height, 10px);\n      margin-left: calc(var(--media-range-thumb-width, 10px) / -2);\n      border: var(--media-range-thumb-border, none);\n      border-radius: var(--media-range-thumb-border-radius, 10px);\n      background: var(--media-range-thumb-background, var(--media-primary-color, rgb(238 238 238)));\n      box-shadow: var(--media-range-thumb-box-shadow, 1px 1px 1px transparent);\n      transition: var(--media-range-thumb-transition);\n      transform: var(--media-range-thumb-transform, none);\n      opacity: var(--media-range-thumb-opacity, 1);\n      position: absolute;\n      left: 0;\n      cursor: pointer;\n    }\n\n    :host([disabled]) #thumb {\n      background-color: #777;\n    }\n\n    .segments #appearance {\n      height: var(--media-range-segment-hover-height, 7px);\n    }\n\n    #background,\n    #track {\n      clip-path: url(#segments-clipping);\n    }\n\n    #segments {\n      --segments-gap: var(--media-range-segments-gap, 2px);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    #segments-clipping {\n      transform: translateX(calc(var(--segments-gap) / 2));\n    }\n\n    #segments-clipping:empty {\n      display: none;\n    }\n\n    #segments-clipping rect {\n      height: var(--media-range-track-height, 4px);\n      y: calc((var(--media-range-segment-hover-height, 7px) - var(--media-range-track-height, 4px)) / 2);\n      transition: var(--media-range-segment-transition, transform .1s ease-in-out);\n      transform: var(--media-range-segment-transform, scaleY(1));\n      transform-origin: center;\n    }\n  </style>\n  <div id=\"leftgap\"></div>\n  <div id=\"container\">\n    <div id=\"startpoint\"></div>\n    <div id=\"endpoint\"></div>\n    <div id=\"appearance\" part=\"appearance\">\n      <div id=\"background\"></div>\n      <div id=\"track\">\n        <div id=\"highlight\"></div>\n        <div id=\"pointer\"></div>\n        <div id=\"progress\"></div>\n      </div>\n      <div id=\"thumb\"></div>\n      <svg id=\"segments\"><clipPath id=\"segments-clipping\"></clipPath></svg>\n    </div>\n    <input id=\"range\" type=\"range\" min=\"0\" max=\"1\" step=\"any\" value=\"0\">\n  </div>\n  <div id=\"rightgap\"></div>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @csspart appearance - The appearance of the range containing the background, track and thumb.\n *\n * @cssproperty --media-primary-color - Default color of range bar.\n * @cssproperty --media-secondary-color - Default color of range background.\n *\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-height - `height` of control.\n *\n * @cssproperty --media-range-padding - `padding` of range.\n * @cssproperty --media-range-padding-left - `padding-left` of range.\n * @cssproperty --media-range-padding-right - `padding-right` of range.\n *\n * @cssproperty --media-range-thumb-width - `width` of range thumb.\n * @cssproperty --media-range-thumb-height - `height` of range thumb.\n * @cssproperty --media-range-thumb-border - `border` of range thumb.\n * @cssproperty --media-range-thumb-border-radius - `border-radius` of range thumb.\n * @cssproperty --media-range-thumb-background - `background` of range thumb.\n * @cssproperty --media-range-thumb-box-shadow - `box-shadow` of range thumb.\n * @cssproperty --media-range-thumb-transition - `transition` of range thumb.\n * @cssproperty --media-range-thumb-transform - `transform` of range thumb.\n * @cssproperty --media-range-thumb-opacity - `opacity` of range thumb.\n *\n * @cssproperty [--media-range-bar-color = var(--media-primary-color, rgb(238 238 238))] - `color_value` of range bar (elapsed progress).\n * @cssproperty [--media-range-track-color = transparent] - `color_value` of range track (remaining progress).\n * @cssproperty --media-range-track-backdrop-filter - `backdrop-filter` of range track.\n * @cssproperty --media-range-track-width - `width` of range track.\n * @cssproperty --media-range-track-height - `height` of range track.\n * @cssproperty --media-range-track-border - `border` of range track.\n * @cssproperty --media-range-track-outline - `outline` of range track.\n * @cssproperty --media-range-track-outline-offset - `outline-offset` of range track.\n * @cssproperty --media-range-track-border-radius - `border-radius` of range track.\n * @cssproperty --media-range-track-box-shadow - `box-shadow` of range track.\n * @cssproperty --media-range-track-transition - `transition` of range track.\n * @cssproperty --media-range-track-translate-x - `translate` x-coordinate of range track.\n * @cssproperty --media-range-track-translate-y - `translate` y-coordinate of range track.\n *\n * @cssproperty --media-range-track-background - `background` of range track background.\n * @cssproperty --media-range-track-background-backdrop-filter - `backdrop-filter` of range track background.\n *\n * @cssproperty --media-time-range-hover-display - `display` of range hover zone.\n * @cssproperty --media-time-range-hover-bottom - `bottom` of range hover zone.\n * @cssproperty --media-time-range-hover-height - `height` of range hover zone.\n *\n * @cssproperty --media-range-track-pointer-background - `background` of range track pointer.\n * @cssproperty --media-range-track-pointer-border-right - `border-right` of range track pointer.\n */\nclass MediaChromeRange extends globalThis.HTMLElement {\n  #mediaController;\n  #isInputTarget;\n  #startpoint;\n  #endpoint;\n  #cssRules = {};\n  #segments = [];\n\n  static get observedAttributes() {\n    return [\n      'disabled',\n      'aria-disabled',\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.container = this.shadowRoot.querySelector('#container');\n    this.#startpoint = this.shadowRoot.querySelector('#startpoint');\n    this.#endpoint = this.shadowRoot.querySelector('#endpoint');\n\n    /** @type {Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n      * {value: number, min: number, max: number}} */\n    this.range = this.shadowRoot.querySelector('#range');\n    this.appearance = this.shadowRoot.querySelector('#appearance');\n  }\n\n  #onFocusIn = () => {\n    if (this.range.matches(':focus-visible')) {\n      const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n      style.setProperty('--_focus-visible-box-shadow', 'var(--_focus-box-shadow)');\n    }\n  }\n\n  #onFocusOut = () => {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.removeProperty('--_focus-visible-box-shadow');\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (\n      attrName === 'disabled' ||\n      attrName === 'aria-disabled' &&\n      oldValue !== newValue\n    ) {\n      if (newValue == null) {\n        this.range.removeAttribute(attrName);\n        this.#enableUserEvents();\n      } else {\n        this.range.setAttribute(attrName, newValue);\n        this.#disableUserEvents();\n      }\n    }\n  }\n\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);\n\n    this.#cssRules.pointer = getOrInsertCSSRule(this.shadowRoot, '#pointer');\n    this.#cssRules.progress = getOrInsertCSSRule(this.shadowRoot, '#progress');\n    this.#cssRules.thumb = getOrInsertCSSRule(this.shadowRoot, '#thumb');\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.updateBar();\n\n    this.shadowRoot.addEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.addEventListener('focusout', this.#onFocusOut);\n\n    this.#enableUserEvents();\n    observeResize(this.container, this.#updateComputedStyles);\n  }\n\n  disconnectedCallback() {\n    this.#disableUserEvents();\n\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n\n    this.shadowRoot.removeEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.removeEventListener('focusout', this.#onFocusOut);\n    unobserveResize(this.container, this.#updateComputedStyles);\n  }\n\n  #updateComputedStyles = () => {\n    // This fixes a Chrome bug where it doesn't refresh the clip-path on content resize.\n    const clipping = this.shadowRoot.querySelector('#segments-clipping');\n    if (clipping) clipping.parentNode.append(clipping);\n  }\n\n  updatePointerBar(evt) {\n    this.#cssRules.pointer?.style.setProperty('width', `${this.getPointerRatio(evt) * 100}%`);\n  }\n\n  updateBar() {\n    const rangePercent = this.range.valueAsNumber * 100;\n    this.#cssRules.progress?.style.setProperty('width', `${rangePercent}%`);\n    this.#cssRules.thumb?.style.setProperty('left', `${rangePercent}%`);\n  }\n\n  updateSegments(segments) {\n    const clipping = this.shadowRoot.querySelector('#segments-clipping');\n    clipping.textContent = '';\n\n    if (!segments?.length) return;\n\n    this.#cssRules.activeSegment = insertCSSRule(this.shadowRoot, '#segments-clipping rect:nth-child(0)');\n\n    this.container.classList.toggle('segments', !!segments.length);\n\n    const normalized = [...new Set([\n      +this.range.min,\n      ...segments.flatMap(s => [s.start, s.end]),\n      +this.range.max\n    ])];\n\n    this.#segments = [...normalized];\n\n    const lastMarker = normalized.pop();\n    for (const [i, marker] of normalized.entries()) {\n      const [isFirst, isLast] = [i === 0, i === normalized.length - 1];\n      const x = isFirst ? 'calc(var(--segments-gap) / -1)' : `${marker * 100}%`;\n      const x2 = isLast ? lastMarker : normalized[i + 1];\n      const width = `calc(${(x2 - marker) * 100}%${isFirst || isLast ? '' : ` - var(--segments-gap)`})`;\n\n      const segmentEl = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      const cssRule = getOrInsertCSSRule(this.shadowRoot, `#segments-clipping rect:nth-child(${i + 1})`);\n      cssRule.style.setProperty('x', x);\n      cssRule.style.setProperty('width', width);\n      clipping.append(segmentEl);\n    }\n  }\n\n  #updateActiveSegment(evt) {\n    const rule = this.#cssRules.activeSegment;\n    if (!rule) return;\n\n    const pointerRatio = this.getPointerRatio(evt);\n    const segmentIndex = this.#segments.findIndex((start, i, arr) => {\n      const end = arr[i + 1];\n      return end != null && pointerRatio >= start && pointerRatio <= end;\n    });\n\n    const selectorText = `#segments-clipping rect:nth-child(${segmentIndex + 1})`;\n\n    if (rule.selectorText != selectorText || !rule.style.transform) {\n      rule.selectorText = selectorText;\n      rule.style.setProperty(\n        'transform',\n        'var(--media-range-segment-hover-transform, scaleY(2))'\n      );\n    }\n  }\n\n  getPointerRatio(evt) {\n    let pointerRatio = getPointProgressOnLine(\n      evt.clientX,\n      evt.clientY,\n      this.#startpoint.getBoundingClientRect(),\n      this.#endpoint.getBoundingClientRect(),\n    );\n    return Math.max(0, Math.min(1, pointerRatio));\n  }\n\n  get dragging() {\n    return this.hasAttribute('dragging');\n  }\n\n  #enableUserEvents() {\n    if (this.hasAttribute('disabled')) return;\n\n    this.addEventListener('input', this);\n    this.addEventListener('pointerdown', this);\n    this.addEventListener('pointerenter', this);\n  }\n\n  #disableUserEvents() {\n    this.removeEventListener('input', this);\n    this.removeEventListener('pointerdown', this);\n    this.removeEventListener('pointerenter', this);\n    globalThis.window?.removeEventListener('pointerup', this);\n    globalThis.window?.removeEventListener('pointermove', this);\n  }\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'pointermove':\n        this.#handlePointerMove(evt);\n        break;\n      case 'input':\n        this.updateBar();\n        break;\n      case 'pointerenter':\n        this.#handlePointerEnter(evt);\n        break;\n      case 'pointerdown':\n        this.#handlePointerDown(evt);\n        break;\n      case 'pointerup':\n        this.#handlePointerUp();\n        break;\n      case 'pointerleave':\n        this.#handlePointerLeave();\n        break;\n    }\n  }\n\n  #handlePointerDown(evt) {\n    // Events outside the range element are handled manually below.\n    this.#isInputTarget = evt.composedPath().includes(this.range);\n\n    globalThis.window?.addEventListener('pointerup', this);\n  }\n\n  #handlePointerEnter(evt) {\n    // On mobile a pointerdown is not required to drag the range.\n    if (evt.pointerType !== 'mouse') this.#handlePointerDown(evt);\n\n    this.addEventListener('pointerleave', this);\n    globalThis.window?.addEventListener('pointermove', this);\n  }\n\n  #handlePointerUp() {\n    globalThis.window?.removeEventListener('pointerup', this);\n    this.toggleAttribute('dragging', false);\n    this.range.disabled = this.hasAttribute('disabled');\n  }\n\n  #handlePointerLeave() {\n    this.removeEventListener('pointerleave', this);\n    globalThis.window?.removeEventListener('pointermove', this);\n    this.toggleAttribute('dragging', false);\n    this.range.disabled = this.hasAttribute('disabled');\n    this.#cssRules.activeSegment?.style.removeProperty('transform');\n  }\n\n  #handlePointerMove(evt) {\n    this.toggleAttribute('dragging', evt.buttons === 1 || evt.pointerType !== 'mouse');\n    this.updatePointerBar(evt);\n    this.#updateActiveSegment(evt);\n\n    // If the native input target & events are used don't fire manual input events.\n    if (this.dragging && (evt.pointerType !== 'mouse' || !this.#isInputTarget)) {\n      // Disable native input events if manual events are fired.\n      this.range.disabled = true;\n\n      this.range.valueAsNumber = this.getPointerRatio(evt);\n      this.range.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n    }\n  }\n\n  get keysUsed() {\n    return ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft'];\n  }\n}\n\nif (!globalThis.customElements.get('media-chrome-range')) {\n  globalThis.customElements.define('media-chrome-range', MediaChromeRange);\n}\n\nexport { MediaChromeRange };\nexport default MediaChromeRange;\n", "/*\n  <media-control-bar>\n\n  Auto position contorls in a line and set some base colors\n*/\nimport { MediaStateReceiverAttributes } from './constants.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      ${/* Need position to display above video for some reason */''}\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-control-bar-display, inline-flex));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      --media-loading-indicator-icon-height: 44px;\n    }\n\n    ::slotted(media-time-range),\n    ::slotted(media-volume-range) {\n      min-height: 100%;\n    }\n\n    ::slotted(media-time-range),\n    ::slotted(media-clip-selector) {\n      flex-grow: 1;\n    }\n  </style>\n\n  <slot></slot>\n`;\n\n/**\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n *\n * @cssproperty --media-control-bar-display - `display` property of control bar.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaControlBar extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-control-bar')) {\n  globalThis.customElements.define('media-control-bar', MediaControlBar);\n}\n\nexport default MediaControlBar;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      font: var(--media-font,\n        var(--media-font-weight, normal)\n        var(--media-font-size, 14px) /\n        var(--media-text-content-height, var(--media-control-height, 24px))\n        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      background: var(--media-text-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7))));\n      padding: var(--media-control-padding, 10px);\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      vertical-align: middle;\n      box-sizing: border-box;\n      text-align: center;\n      pointer-events: auto;\n    }\n\n    ${/*\n      Only show outline when keyboard focusing.\n      https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n    */''}\n    :host(:focus-visible) {\n      box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n      outline: 0;\n    }\n\n    ${/*\n     * hide default focus ring, particularly when using mouse\n     */''}\n    :host(:where(:focus)) {\n      box-shadow: none;\n      outline: 0;\n    }\n  </style>\n  <slot></slot>\n`;\n\n/**\n * @slot - Default slotted elements.\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text.\n * @cssproperty --media-secondary-color - Default color of background.\n * @cssproperty --media-text-color - `color` of text.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of text.\n */\nclass MediaTextDisplay extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-text-display')) {\n  globalThis.customElements.define('media-text-display', MediaTextDisplay);\n}\n\nexport { MediaTextDisplay };\nexport default MediaTextDisplay;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n *\n * @cssproperty [--media-duration-display-display = inline-flex] - `display` property of display.\n */\nclass MediaDurationDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_DURATION];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.#slot.textContent = formatTime(newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {number | undefined} In seconds\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n}\n\nif (!globalThis.customElements.get('media-duration-display')) {\n  globalThis.customElements.define('media-duration-display', MediaDurationDisplay);\n}\n\nexport default MediaDurationDisplay;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getOrInsertCSSRule,\n  setBooleanAttr,\n  setNumericAttr,\n} from './utils/element-utils.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatAsTimePhrase, formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\nexport const Attributes = {\n  REMAINING: 'remaining',\n  SHOW_DURATION: 'showduration',\n  NO_TOGGLE: 'notoggle',\n};\n\nconst CombinedAttributes = [\n  ...Object.values(Attributes),\n  MediaUIAttributes.MEDIA_CURRENT_TIME,\n  MediaUIAttributes.MEDIA_DURATION,\n  MediaUIAttributes.MEDIA_SEEKABLE,\n];\n\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst ButtonPressedKeys = ['Enter', ' '];\n\nconst DEFAULT_TIMES_SEP = '&nbsp;/&nbsp;';\n\nconst formatTimesLabel = (el, { timesSep = DEFAULT_TIMES_SEP } = {}) => {\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n  const currentTime = el.mediaCurrentTime ?? 0;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  const endTime = el.mediaDuration ?? seekableEnd ?? 0;\n\n  const timeLabel = showRemaining\n    ? formatTime(0 - (endTime - currentTime))\n    : formatTime(currentTime);\n\n  if (!showDuration) return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(endTime)}`;\n};\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const currentTime = el.mediaCurrentTime;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  const endTime = el.mediaDuration || seekableEnd;\n  if (currentTime == null || endTime == null) {\n    el.setAttribute('aria-valuetext', DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n\n  const currentTimePhrase = showRemaining\n    ? formatAsTimePhrase(0 - (endTime - currentTime))\n    : formatAsTimePhrase(currentTime);\n\n  if (!showDuration) {\n    el.setAttribute('aria-valuetext', currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(endTime);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute('aria-valuetext', fullPhrase);\n};\n\n/**\n * @attr {boolean} remaining - Toggle on to show the remaining time instead of elapsed time.\n * @attr {boolean} showduration - Toggle on to show the duration.\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {boolean} notoggle - Set this to disable click or tap behavior that toggles between remaining and current time.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n *\n * @cssproperty [--media-time-display-display = inline-flex] - `display` property of display.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n */\nclass MediaTimeDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, ...CombinedAttributes, 'disabled'];\n  }\n\n  constructor() {\n    super();\n\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.innerHTML = `${formatTimesLabel(this)}`;\n  }\n\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(\n      this.shadowRoot,\n      ':host(:hover:not([notoggle]))'\n    );\n    style.setProperty('cursor', 'pointer');\n    style.setProperty(\n      'background',\n      'var(--media-control-hover-background, rgba(50 50 70 / .7))'\n    );\n\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'progressbar');\n    this.setAttribute('aria-label', nouns.PLAYBACK_TIME());\n\n    const keyUpHandler = (evt) => {\n      const { key } = evt;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n\n      this.toggleTimeDisplay();\n    };\n\n    this.addEventListener('keydown', (evt) => {\n      const { metaKey, altKey, key } = evt;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n      this.addEventListener('keyup', keyUpHandler);\n    });\n\n    this.addEventListener('click', this.toggleTimeDisplay);\n\n    super.connectedCallback();\n  }\n\n  toggleTimeDisplay() {\n    if (this.noToggle) {\n      return;\n    }\n    if (this.hasAttribute('remaining')) {\n      this.removeAttribute('remaining');\n    } else {\n      this.setAttribute('remaining', '');\n    }\n  }\n\n  disconnectedCallback() {\n    this.disable();\n    super.disconnectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (CombinedAttributes.includes(attrName)) {\n      this.update();\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  enable() {\n    this.tabIndex = 0;\n  }\n\n  disable() {\n    this.tabIndex = -1;\n  }\n\n  // Own props\n\n  /**\n   * Whether to show the remaining time\n   * @type {boolean}\n   */\n  get remaining() {\n    return getBooleanAttr(this, Attributes.REMAINING);\n  }\n\n  set remaining(show) {\n    setBooleanAttr(this, Attributes.REMAINING, show);\n  }\n\n  /**\n   * Whether to show the duration\n   * @type {boolean}\n   */\n  get showDuration() {\n    return getBooleanAttr(this, Attributes.SHOW_DURATION);\n  }\n\n  set showDuration(show) {\n    setBooleanAttr(this, Attributes.SHOW_DURATION, show);\n  }\n\n  /**\n   * Disable the default behavior that toggles between current and remaining time\n   * @type {boolean}\n   */\n  get noToggle() {\n    return getBooleanAttr(this, Attributes.NO_TOGGLE);\n  }\n\n  set noToggle(notoggle) {\n    setBooleanAttr(this, Attributes.NO_TOGGLE, notoggle);\n  }\n\n  // Props derived from media UI attributes\n\n  /**\n   * Get the duration\n   * @type {number | undefined} In seconds\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  /**\n   * Range of values that can be seeked to\n   * @type {[number, number] | undefined} An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time);\n  }\n\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  update() {\n    const timesLabel = formatTimesLabel(this);\n    updateAriaValueText(this);\n    // Only update if it changed, timeupdate events are called a few times per second.\n    if (timesLabel !== this.#slot.innerHTML) {\n      this.#slot.innerHTML = timesLabel;\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-time-display')) {\n  globalThis.customElements.define('media-time-display', MediaTimeDisplay);\n}\n\nexport default MediaTimeDisplay;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport {\n  areSubsOn,\n  parseTextTracksStr,\n  stringifyTextTrackList,\n} from './utils/captions.js';\n\nconst ccIconOn = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z\"/>\n</svg>`;\n\nconst ccIconOff = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n    :host([aria-checked=\"true\"]) slot[name=off] {\n      display: none !important;\n    }\n\n    ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n    :host(:not([aria-checked=\"true\"])) slot[name=on] {\n      display: none !important;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"on\">${ccIconOn}</slot>\n    <slot name=\"off\">${ccIconOff}</slot>\n  </slot>\n`;\n\nconst updateAriaChecked = (el) => {\n  el.setAttribute('aria-checked', areSubsOn(el));\n};\n\n/**\n * @slot on - An element that will be shown while closed captions or subtitles are on.\n * @slot off - An element that will be shown while closed captions or subtitles are off.\n * @slot icon - An element for representing on and off states in a single icon\n *\n * @attr {string} mediasubtitleslist - (read-only) A list of all subtitles and captions.\n * @attr {string} mediasubtitlesshowing - (read-only) A list of the showing subtitles and captions.\n *\n * @cssproperty [--media-captions-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCaptionsButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    // Internal variable to keep track of when we have some or no captions (or subtitles, if using subtitles fallback)\n    // Used for `default-showing` behavior.\n    this._captionsReady = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'switch');\n    this.setAttribute('aria-label', nouns.CLOSED_CAPTIONS());\n    updateAriaChecked(this);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_SUBTITLES_SHOWING) {\n      updateAriaChecked(this);\n    }\n  }\n\n  /**\n   * @type {Array<object>} An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesList() {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST);\n  }\n\n  set mediaSubtitlesList(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST, list);\n  }\n\n  /**\n   * @type {Array<object>} An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesShowing() {\n    return getSubtitlesListAttr(\n      this,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    );\n  }\n\n  set mediaSubtitlesShowing(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING, list);\n  }\n\n  handleClick() {\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST, {\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n}\n\n/**\n * @param {any} el Should be HTMLElement but issues with globalThis shim\n * @param {string} attrName\n * @returns {Array<Object>} An array of TextTrack-like objects.\n */\nconst getSubtitlesListAttr = (el, attrName) => {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal ? parseTextTracksStr(attrVal) : [];\n};\n\n/**\n *\n * @param {any} el Should be HTMLElement but issues with globalThis shim\n * @param {string} attrName\n * @param {Array<Object>} list An array of TextTrack-like objects\n */\nconst setSubtitlesListAttr = (el, attrName, list) => {\n  // null, undefined, and empty arrays are treated as \"no value\" here\n  if (!list?.length) {\n    el.removeAttribute(attrName);\n    return;\n  }\n\n  // don't set if the new value is the same as existing\n  const newValStr = stringifyTextTrackList(list);\n  const oldVal = el.getAttribute(attrName);\n  if (oldVal === newValStr) return;\n\n  el.setAttribute(attrName, newValStr);\n};\n\nif (!globalThis.customElements.get('media-captions-button')) {\n  globalThis.customElements.define(\n    'media-captions-button',\n    MediaCaptionsButton\n  );\n}\n\nexport default MediaCaptionsButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\nimport { verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst forwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(8.9 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3l5.61 4L10 10.94V8a5.54 5.54 0 0 0-1.9 10.48v2.12A7.5 7.5 0 0 1 10 6Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${forwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek forward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek forward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-forward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekForwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback(){\n    this.seekOffset = getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      this.seekOffset = getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * @type {number | undefined} Seek amount in seconds\n   */\n  get seekOffset() {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n    this.setAttribute('aria-label', verbs.SEEK_FORWARD_N_SECS({ seekOffset: this.seekOffset }));\n    updateIconText(getSlotted(this, 'icon'), this.seekOffset);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, DEFAULT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick() {\n    const detail = this.mediaCurrentTime + this.seekOffset;\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-forward-button')) {\n  globalThis.customElements.define(\n    'media-seek-forward-button',\n    MediaSeekForwardButton\n  );\n}\n\nexport default MediaSeekForwardButton;\n", "/*\n  <media-fullscreen-button media=\"#myVideo\" fullscreen-element=\"#myContainer\">\n\n  The fullscreen-element attribute can be used to say which element\n  to make fullscreen.\n  If none, the button will look for the closest media-container element to the media.\n  If none, the button will make the media fullscreen.\n*/\nimport { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M16 3v2.5h3.5V9H22V3h-6ZM4 9h2.5V5.5H10V3H4v6Zm15.5 9.5H16V21h6v-6h-2.5v3.5ZM6.5 15H4v6h6v-2.5H6.5V15Z\"/>\n</svg>`;\n\nconst exitFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M18.5 6.5V3H16v6h6V6.5h-3.5ZM16 21h2.5v-3.5H22V15h-6v6ZM4 17.5h3.5V21H10v-6H4v2.5Zm3.5-11H4V9h6V3H7.5v3.5Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterFullscreenIcon}</slot>\n    <slot name=\"exit\">${exitFullscreenIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsFullscreen\n    ? verbs.EXIT_FULLSCREEN()\n    : verbs.ENTER_FULLSCREEN();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in fullscreen and pressing the button will trigger entering fullscreen.\n * @slot exit - An element shown when the media is in fullscreen and pressing the button will trigger exiting fullscreen.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediafullscreenunavailable - (read-only) Set if fullscreen is unavailable.\n * @attr {boolean} mediaisfullscreen - (read-only) Present if the media is fullscreen.\n *\n * @cssproperty [--media-fullscreen-button-display = inline-flex] - `display` property of button.\n */\nclass MediaFullscreenButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN,\n      MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_FULLSCREEN) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined} Fullscreen unavailability state\n   */\n  get mediaFullscreenUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE);\n  }\n\n  set mediaFullscreenUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Whether fullscreen is available\n   */\n  get mediaIsFullscreen() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN);\n  }\n\n  set mediaIsFullscreen(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaIsFullscreen\n      ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-fullscreen-button')) {\n  globalThis.customElements.define(\n    'media-fullscreen-button',\n    MediaFullscreenButton\n  );\n}\n\nexport default MediaFullscreenButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst { MEDIA_TIME_IS_LIVE, MEDIA_PAUSED } = MediaUIAttributes;\nconst { MEDIA_SEEK_TO_LIVE_REQUEST, MEDIA_PLAY_REQUEST } = MediaUIEvents;\n\nconst indicatorSVG =\n  '<svg viewBox=\"0 0 6 12\"><circle cx=\"3\" cy=\"6\" r=\"2\"></circle></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n\n  slot[name=indicator] > *,\n  :host ::slotted([slot=indicator]) {\n    ${/* Override styles for icon-only buttons */ ''}\n    min-width: auto;\n    fill: var(--media-live-button-icon-color, rgb(140, 140, 140));\n    color: var(--media-live-button-icon-color, rgb(140, 140, 140));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) slot[name=indicator] > *,\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) ::slotted([slot=indicator]) {\n    fill: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n    color: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) {\n    cursor: not-allowed;\n  }\n\n  </style>\n\n  <slot name=\"indicator\">${indicatorSVG}</slot>\n  ${\n    /*\n    A new line between spacer and text creates inconsistent spacing\n    between slotted items and default slots.\n  */ ''\n  }\n  <slot name=\"spacer\">&nbsp;</slot><slot name=\"text\">LIVE</slot>\n`;\n\nconst updateAriaAttributes = (el) => {\n  const isPausedOrNotLive = el.mediaPaused || !el.mediaTimeIsLive\n  const label = isPausedOrNotLive ? verbs.SEEK_LIVE() : verbs.PLAYING_LIVE();\n  el.setAttribute('aria-label', label);\n\n  isPausedOrNotLive ?\n    el.removeAttribute('aria-disabled') :\n    el.setAttribute('aria-disabled', 'true');\n};\n\n/**\n * @slot indicator - The default is an SVG of a circle that changes to red when the video or audio is live. Can be replaced with your own SVG or font icon.\n * @slot spacer - A simple text space (&nbsp;) between the indicator and the text.\n * @slot text - The text content of the button, with a default of \u201CLIVE\u201D.\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} mediatimeislive - (read-only) Present if the media playback is live.\n *\n * @cssproperty [--media-live-button-display = inline-flex] - `display` property of button.\n * @cssproperty --media-live-button-icon-color - `fill` and `color` of not live button icon.\n * @cssproperty --media-live-button-indicator-color - `fill` and `color` of live button icon.\n */\nclass MediaLiveButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MEDIA_PAUSED, MEDIA_TIME_IS_LIVE];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaAttributes(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    updateAriaAttributes(this);\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * @type {boolean} Is the media playback currently live\n   */\n  get mediaTimeIsLive() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE);\n  }\n\n  set mediaTimeIsLive(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE, value);\n  }\n\n  handleClick() {\n    // If we're live and not paused, don't allow seek to live\n    if (!this.mediaPaused && this.mediaTimeIsLive) return;\n\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MEDIA_SEEK_TO_LIVE_REQUEST, {\n        composed: true,\n        bubbles: true,\n      })\n    );\n\n    // If we're paused, also automatically play\n    if (this.hasAttribute(MEDIA_PAUSED)) {\n      this.dispatchEvent(\n        new globalThis.CustomEvent(MEDIA_PLAY_REQUEST, {\n          composed: true,\n          bubbles: true,\n        })\n      );\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-live-button')) {\n  globalThis.customElements.define('media-live-button', MediaLiveButton);\n}\n\nexport default MediaLiveButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nconst { MEDIA_VOLUME_LEVEL } = MediaUIAttributes;\n\nconst offIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M16.5 12A4.5 4.5 0 0 0 14 8v2.18l2.45 2.45a4.22 4.22 0 0 0 .05-.63Zm2.5 0a6.84 6.84 0 0 1-.54 2.64L20 16.15A8.8 8.8 0 0 0 21 12a9 9 0 0 0-7-8.77v2.06A7 7 0 0 1 19 12ZM4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25A6.92 6.92 0 0 1 14 18.7v2.06A9 9 0 0 0 17.69 19l2 2.05L21 19.73l-9-9L4.27 3ZM12 4 9.91 6.09 12 8.18V4Z\"/>\n</svg>`;\n\nconst lowIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4Z\"/>\n</svg>`;\n\nconst highIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4ZM14 3.23v2.06a7 7 0 0 1 0 13.42v2.06a9 9 0 0 0 0-17.54Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  ${/* Default to High slot/icon. */''}\n  :host(:not([${MEDIA_VOLUME_LEVEL}])) slot:not([name=high]):not([name=icon]), \n  :host([${MEDIA_VOLUME_LEVEL}=high]) slot:not([name=high]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=off]) slot:not([name=off]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=low]) slot:not([name=low]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=medium]) slot:not([name=medium]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"off\">${offIcon}</slot>\n    <slot name=\"low\">${lowIcon}</slot>\n    <slot name=\"medium\">${lowIcon}</slot>\n    <slot name=\"high\">${highIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const muted = el.mediaVolumeLevel === 'off';\n  const label = muted ? verbs.UNMUTE() : verbs.MUTE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot off - An element shown when the media is muted or the media\u2019s volume is 0.\n * @slot low - An element shown when the media\u2019s volume is \u201Clow\u201D (less than 50% / 0.5).\n * @slot medium - An element shown when the media\u2019s volume is \u201Cmedium\u201D (between 50% / 0.5 and 75% / 0.75).\n * @slot high - An element shown when the media\u2019s volume is \u201Chigh\u201D (75% / 0.75 or greater).\n * @slot icon - An element for representing all states in a single icon\n *\n * @attr {string} mediavolumelevel - (read-only) Set to the media volume level.\n *\n * @cssproperty [--media-mute-button-display = inline-flex] - `display` property of button.\n */\nclass MediaMuteButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_VOLUME_LEVEL];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_VOLUME_LEVEL) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get mediaVolumeLevel() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL);\n  }\n\n  set mediaVolumeLevel(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL, value);\n  }\n\n  handleClick() {\n    const eventName =\n      this.mediaVolumeLevel === 'off'\n        ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n        : MediaUIEvents.MEDIA_MUTE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-mute-button')) {\n  globalThis.customElements.define('media-mute-button', MediaMuteButton);\n}\n\nexport default MediaMuteButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst pipIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 28 24\">\n  <path d=\"M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${pipIcon}</slot>\n    <slot name=\"exit\">${pipIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsPip ? verbs.EXIT_PIP() : verbs.ENTER_PIP();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in PIP mode and pressing the button will trigger entering PIP mode.\n * @slot exit - An element shown when the media is in PIP and pressing the button will trigger exiting PIP mode.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediapipunavailable - (read-only) Set if picture-in-picture is unavailable.\n * @attr {boolean} mediaispip - (read-only) Present if the media is playing in picture-in-picture.\n *\n * @cssproperty [--media-pip-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_PIP,\n      MediaUIAttributes.MEDIA_PIP_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined} Pip unavailability state\n   */\n  get mediaPipUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE);\n  }\n\n  set mediaPipUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Is the media currently playing picture-in-picture\n   */\n  get mediaIsPip() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP);\n  }\n\n  set mediaIsPip(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaIsPip\n      ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-pip-button')) {\n  globalThis.customElements.define('media-pip-button', MediaPipButton);\n}\n\nexport default MediaPipButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst playIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"m6 21 15-9L6 3v18Z\"/>\n</svg>`;\n\nconst pauseIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M6 20h4V4H6v16Zm8-16v16h4V4h-4Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=pause] {\n    display: none !important;\n  }\n\n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=play] {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"play\">${playIcon}</slot>\n    <slot name=\"pause\">${pauseIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaPaused ? verbs.PLAY() : verbs.PAUSE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot play - An element shown when the media is paused and pressing the button will start media playback.\n * @slot pause - An element shown when the media is playing and pressing the button will pause media playback.\n * @slot icon - An element for representing play and pause states in a single icon\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n *\n * @cssproperty [--media-play-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_PAUSED) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-play-button')) {\n  globalThis.customElements.define('media-play-button', MediaPlayButton);\n}\n\nexport default MediaPlayButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  RATES: 'rates',\n};\n\nexport const DEFAULT_RATES = [1, 1.2, 1.5, 1.7, 2];\nexport const DEFAULT_RATE = 1;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      min-width: 5ch;\n      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));\n    }\n  </style>\n  <slot name=\"icon\"></slot>\n`;\n\n/**\n * @attr {string} rates - Set custom playback rates for the user to choose from.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n *\n * @cssproperty [--media-playback-rate-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      Attributes.RATES,\n    ];\n  }\n\n  #rates = new AttributeTokenList(this, Attributes.RATES, { defaultValue: DEFAULT_RATES });\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    this.container = this.shadowRoot.querySelector('slot[name=\"icon\"]');\n    this.container.innerHTML = `${DEFAULT_RATE}x`;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === Attributes.RATES) {\n      this.#rates.value = newValue;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate)\n        ? newPlaybackRate\n        : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute('aria-label', nouns.PLAYBACK_RATE({ playbackRate }));\n    }\n  }\n\n  /**\n   * @type { AttributeTokenList | Array<number> | undefined} Will return a DOMTokenList.\n   * Setting a value will accept an array of numbers.\n   */\n  get rates() {\n    return this.#rates;\n  }\n\n  set rates(value) {\n    if (!value) {\n      this.#rates.value = '';\n    } else if (Array.isArray(value)) {\n      this.#rates.value = value.join(' ');\n    }\n  }\n\n  /**\n   * @type {number} The current playback rate\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, DEFAULT_RATE);\n  }\n\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  handleClick() {\n    const availableRates = Array.from(this.rates.values(), str => +str).sort((a, b) => a - b);\n\n    const detail =\n      availableRates.find((r) => r > this.mediaPlaybackRate) ??\n      availableRates[0] ??\n      DEFAULT_RATE;\n    const evt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-playback-rate-button')) {\n  globalThis.customElements.define(\n    'media-playback-rate-button',\n    MediaPlaybackRateButton\n  );\n}\n\nexport default MediaPlaybackRateButton;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  PLACEHOLDER_SRC: 'placeholdersrc',\n  SRC: 'src',\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      pointer-events: none;\n      display: var(--media-poster-image-display, inline-block);\n      box-sizing: border-box;\n    }\n\n    img {\n      max-width: 100%;\n      max-height: 100%;\n      min-width: 100%;\n      min-height: 100%;\n      background-repeat: no-repeat;\n      background-position: var(--media-poster-image-background-position, var(--media-object-position, center));\n      background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));\n      object-fit: var(--media-object-fit, contain);\n      object-position: var(--media-object-position, center);\n    }\n  </style>\n\n  <img part=\"poster img\" aria-hidden=\"true\" id=\"image\"/>\n`;\n\nconst unsetBackgroundImage = (el) => {\n  el.style.removeProperty('background-image');\n};\nconst setBackgroundImage = (el, image) => {\n  el.style['background-image'] = `url('${image}')`;\n};\n\n/**\n * @attr {string} placeholdersrc - Placeholder image source URL, often a blurhash data URL.\n * @attr {string} src - Poster image source URL.\n *\n * @cssproperty --media-poster-image-display - `display` property of poster image.\n * @cssproperty --media-poster-image-background-position - `background-position` of poster image.\n * @cssproperty --media-poster-image-background-size - `background-size` of poster image.\n * @cssproperty --media-object-fit - `object-fit` of poster image.\n * @cssproperty --media-object-position - `object-position` of poster image.\n */\nclass MediaPosterImage extends globalThis.HTMLElement {\n  static get observedAttributes() {\n    return [Attributes.PLACEHOLDER_SRC, Attributes.SRC];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.image = this.shadowRoot.querySelector('#image');\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SRC) {\n      if (newValue == null) {\n        this.image.removeAttribute(Attributes.SRC);\n      } else {\n        this.image.setAttribute(Attributes.SRC, newValue);\n      }\n    }\n\n    if (attrName === Attributes.PLACEHOLDER_SRC) {\n      if (newValue == null) {\n        unsetBackgroundImage(this.image);\n      } else {\n        setBackgroundImage(this.image, newValue);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get placeholderSrc() {\n    return getStringAttr(this, Attributes.PLACEHOLDER_SRC);\n  }\n\n  set placeholderSrc(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get src() {\n    return getStringAttr(this, Attributes.SRC);\n  }\n\n  set src(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-poster-image')) {\n  globalThis.customElements.define('media-poster-image', MediaPosterImage);\n}\n\nexport default MediaPosterImage;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\nimport { verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst backwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(2.18 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3L4.37 7 10 10.94V8a5.54 5.54 0 0 1 1.9 10.48v2.12A7.5 7.5 0 0 0 10 6Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${backwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek backward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek backward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-backward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekBackwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback(){\n    this.seekOffset = getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      this.seekOffset = getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * @type {number | undefined} Seek amount in seconds\n   */\n  get seekOffset() {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n    this.setAttribute('aria-label', verbs.SEEK_BACK_N_SECS({ seekOffset: this.seekOffset }));\n    updateIconText(getSlotted(this, 'icon'), this.seekOffset);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, DEFAULT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick() {\n    const detail = Math.max(this.mediaCurrentTime - this.seekOffset, 0);\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-backward-button')) {\n  globalThis.customElements.define(\n    'media-seek-backward-button',\n    MediaSeekBackwardButton\n  );\n}\n\nexport default MediaSeekBackwardButton;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @cssproperty [--media-preview-time-display-display = inline-flex] - `display` property of display.\n */\nclass MediaPreviewTimeDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PREVIEW_TIME];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_PREVIEW_TIME && newValue != null) {\n      this.#slot.textContent = formatTime(newValue);\n    }\n  }\n\n  /**\n   * @type {number | undefined} Timeline preview time\n   */\n  get mediaPreviewTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-time-display')) {\n  globalThis.customElements.define(\n    'media-preview-time-display',\n    MediaPreviewTimeDisplay\n  );\n}\n\nexport default MediaPreviewTimeDisplay;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n} from './constants.js';\nimport {\n  getOrInsertCSSRule,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-preview-thumbnail-display, inline-block));\n      overflow: hidden;\n    }\n\n    img {\n      display: none;\n      position: relative;\n    }\n  </style>\n  <img crossorigin loading=\"eager\" decoding=\"async\">\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewcoords - (read-only) Set to the active preview image coordinates.\n *\n * @cssproperty [--media-preview-thumbnail-display = inline-block] - `display` property of display.\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n */\nclass MediaPreviewThumbnail extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      this.#mediaController =\n        // @ts-ignore\n        this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      [\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n        MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n      ].includes(attrName)\n    ) {\n      this.update();\n    }\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined} The url of the preview image\n   */\n  get mediaPreviewImage() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   * @type {Array<number> | undefined} Fixed length array [x, y, width, height] or undefined\n   */\n  get mediaPreviewCoords() {\n    const attrVal = this.getAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n\n    if (!attrVal) return undefined;\n\n    return attrVal.split(/\\s+/).map((coord) => +coord);\n  }\n\n  set mediaPreviewCoords(value) {\n    if (!value) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n      return;\n    }\n\n    this.setAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS, value.join(' '));\n  }\n\n  update() {\n    const coords = this.mediaPreviewCoords;\n    const previewImage = this.mediaPreviewImage;\n\n    if (!(coords && previewImage)) return;\n\n    const [x, y, w, h] = coords;\n    const src = previewImage.split('#')[0];\n\n    const computedStyle = getComputedStyle(this);\n    const { maxWidth, maxHeight, minWidth, minHeight } = computedStyle;\n    const maxRatio = Math.min(parseInt(maxWidth) / w, parseInt(maxHeight) / h);\n    const minRatio = Math.max(parseInt(minWidth) / w, parseInt(minHeight) / h);\n\n    // maxRatio scales down and takes priority, minRatio scales up.\n    const isScalingDown = maxRatio < 1;\n    const scale = isScalingDown ? maxRatio : minRatio > 1 ? minRatio : 1;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    const imgStyle = getOrInsertCSSRule(this.shadowRoot, 'img').style;\n    const img = this.shadowRoot.querySelector('img');\n\n    // Revert one set of extremum to its initial value on a known scale direction.\n    const extremum = isScalingDown ? 'min' : 'max';\n    style.setProperty(`${extremum}-width`, 'initial', 'important');\n    style.setProperty(`${extremum}-height`, 'initial', 'important');\n    style.width = `${w * scale}px`;\n    style.height = `${h * scale}px`;\n\n    const resize = () => {\n      imgStyle.width = `${this.imgWidth * scale}px`;\n      imgStyle.height = `${this.imgHeight * scale}px`;\n      imgStyle.display = 'block';\n    };\n\n    if (img.src !== src) {\n      img.onload = () => {\n        this.imgWidth = img.naturalWidth;\n        this.imgHeight = img.naturalHeight;\n        resize();\n      };\n      img.src = src;\n      resize();\n    }\n\n    resize();\n    imgStyle.transform = `translate(-${x * scale}px, -${y * scale}px)`;\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-thumbnail')) {\n  globalThis.customElements.define(\n    'media-preview-thumbnail',\n    MediaPreviewThumbnail\n  );\n}\n\nexport default MediaPreviewThumbnail;\n", "import MediaTextDisplay from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\n/**\n * @attr {string} mediapreviewchapter - (read-only) Set to the timeline preview chapter.\n *\n * @cssproperty [--media-preview-chapter-display-display = inline-flex] - `display` property of display.\n */\nclass MediaPreviewChapterDisplay extends MediaTextDisplay {\n  #slot;\n\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PREVIEW_CHAPTER\n    ];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_PREVIEW_CHAPTER) {\n\n      // Only update if it changed, preview events are called a few times per second.\n      if (newValue !== oldValue) {\n\n        if (newValue == null) {\n          this.#slot.textContent = '';\n          this.removeAttribute('aria-valuetext');\n          return;\n        }\n\n        this.#slot.textContent = newValue;\n        this.setAttribute('aria-valuetext', `chapter: ${newValue}`);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined} Timeline preview chapter\n   */\n  get mediaPreviewChapter() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_CHAPTER);\n  }\n\n  set mediaPreviewChapter(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_CHAPTER, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-chapter-display')) {\n  globalThis.customElements.define('media-preview-chapter-display', MediaPreviewChapterDisplay);\n}\n\nexport default MediaPreviewChapterDisplay;\n", "/**\n * Smoothly animate a range input accounting for hiccups and diverging playback.\n */\nexport class RangeAnimation {\n  #range;\n  #startTime;\n  #previousTime;\n  #deltaTime;\n  #frameCount;\n  #updateTimestamp;\n  #updateStartValue;\n  #lastRangeIncrease;\n  #id = 0;\n\n  constructor(range, callback, fps) {\n    this.#range = range;\n    this.callback = callback;\n    this.fps = fps;\n  }\n\n  start() {\n    if (this.#id !== 0) return;\n\n    this.#previousTime = performance.now();\n    this.#startTime = this.#previousTime;\n    this.#frameCount = 0;\n    this.#animate();\n  }\n\n  stop() {\n    if (this.#id === 0) return;\n\n    cancelAnimationFrame(this.#id);\n    this.#id = 0;\n  }\n\n  update({ start, duration, playbackRate }) {\n    // 1. Always allow increases.\n    // 2. Allow a relatively large decrease (user action or Safari jumping back :s).\n    const increase = start - this.#range.valueAsNumber;\n    if (increase > 0 || increase < -.03) {\n      this.callback(start);\n    }\n\n    this.#updateStartValue = start;\n    this.#updateTimestamp = performance.now();\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n\n  #animate = (now = performance.now()) => {\n    this.#id = requestAnimationFrame(this.#animate);\n    this.#deltaTime = performance.now() - this.#previousTime;\n    const fpsInterval = 1000 / this.fps;\n\n    if (this.#deltaTime > fpsInterval) {\n      // Get ready for next frame by setting previousTime=now, but also adjust for your\n      // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n      this.#previousTime = now - (this.#deltaTime % fpsInterval);\n\n      const fps = 1000 / ((now - this.#startTime) / ++this.#frameCount);\n      const delta = (now - this.#updateTimestamp) / 1000 / this.duration;\n      let value = this.#updateStartValue + delta * this.playbackRate;\n      const increase = value - this.#range.valueAsNumber;\n\n      // If the increase is negative, the animation was faster than the playhead.\n      // Can happen on video startup. Slow down the animation to match the playhead.\n      if (increase > 0) {\n        // A perfect increase at this frame rate should be this much.\n        this.#lastRangeIncrease = this.playbackRate / this.duration / fps;\n      } else {\n        this.#lastRangeIncrease = .995 * this.#lastRangeIncrease;\n        value = this.#range.valueAsNumber + this.#lastRangeIncrease;\n      }\n\n      this.callback(value);\n    }\n  }\n}\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaChromeRange } from './media-chrome-range.js';\nimport './media-preview-thumbnail.js';\nimport './media-preview-time-display.js';\nimport './media-preview-chapter-display.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { formatAsTimePhrase } from './utils/time.js';\nimport { isElementVisible } from './utils/element-utils.js';\nimport { RangeAnimation } from './utils/range-animation.js';\nimport {\n  getOrInsertCSSRule,\n  containsComposedNode,\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n  getNumericAttr,\n  setNumericAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const range = el.range;\n  const currentTimePhrase = formatAsTimePhrase(+calcTimeFromRangeValue(el));\n  const totalTimePhrase = formatAsTimePhrase(+el.mediaSeekableEnd);\n  const fullPhrase = !(currentTimePhrase && totalTimePhrase)\n    ? DEFAULT_MISSING_TIME_PHRASE\n    : `${currentTimePhrase} of ${totalTimePhrase}`;\n  range.setAttribute('aria-valuetext', fullPhrase);\n};\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      --media-preview-border-radius: 3px;\n      --media-box-padding-left: 10px;\n      --media-box-padding-right: 10px;\n    }\n\n    #highlight {\n      background: var(--media-time-range-buffered-color, rgb(255 255 255 / .4));\n    }\n\n    #preview-rail,\n    #current-rail {\n      ${/* 1% of parent element and upscale by 100 in the translateX() */ ''}\n      width: 1%;\n      position: absolute;\n      left: 0;\n      bottom: 100%;\n      pointer-events: none;\n      will-change: transform;\n    }\n\n    [part~=\"box\"] {\n      ${/* absolute position is needed here so the box doesn't overflow the bounds */''}\n      position: absolute;\n      bottom: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      transform: translateX(-50%);\n    }\n\n    [part~=\"preview-box\"] {\n      transition-property: var(--media-preview-transition-property, visibility, opacity);\n      transition-duration: var(--media-preview-transition-duration-out, .25s);\n      transition-delay: var(--media-preview-transition-delay-out, 0s);\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    :host(:is([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}], [${MediaUIAttributes.MEDIA_PREVIEW_TIME}])[dragging]) [part~=\"preview-box\"] {\n      transition-duration: var(--media-preview-transition-duration-in, .5s);\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n      opacity: 1;\n    }\n\n    @media (hover: hover) {\n      :host(:is([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}], [${MediaUIAttributes.MEDIA_PREVIEW_TIME}]):hover) [part~=\"preview-box\"] {\n        transition-duration: var(--media-preview-transition-duration-in, .5s);\n        transition-delay: var(--media-preview-transition-delay-in, .25s);\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n\n    media-preview-thumbnail,\n    ::slotted(media-preview-thumbnail) {\n      visibility: hidden;\n      ${/* delay changing these CSS props until the preview box transition is ended */''}\n      transition: visibility 0s .25s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-thumbnail-background, var(--media-preview-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)))));\n      box-shadow: var(--media-preview-thumbnail-box-shadow, 0 0 4px rgb(0 0 0 / .2));\n      max-width: var(--media-preview-thumbnail-max-width, 180px);\n      max-height: var(--media-preview-thumbnail-max-height, 160px);\n      min-width: var(--media-preview-thumbnail-min-width, 120px);\n      min-height: var(--media-preview-thumbnail-min-height, 80px);\n      border: var(--media-preview-thumbnail-border);\n      border-radius: var(--media-preview-thumbnail-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius) 0 0);\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}][dragging]) media-preview-thumbnail,\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}][dragging]) ::slotted(media-preview-thumbnail) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n    }\n\n    @media (hover: hover) {\n      :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) media-preview-thumbnail,\n      :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) ::slotted(media-preview-thumbnail) {\n        transition-delay: var(--media-preview-transition-delay-in, .25s);\n        visibility: visible;\n      }\n\n      :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) {\n        --media-time-range-hover-display: block;\n      }\n    }\n\n    media-preview-chapter-display,\n    ::slotted(media-preview-chapter-display) {\n      display: none;\n      line-height: 1.3;\n      min-width: 0;\n      ${/* delay changing these CSS props until the preview box transition is ended */''}\n      transition: min-width 0s, border-radius 0s, margin 0s, padding 0s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-chapter-background, var(--media-preview-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)))));\n      border-radius: var(--media-preview-chapter-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius)\n        var(--media-preview-border-radius) var(--media-preview-border-radius));\n      padding: var(--media-preview-chapter-padding, 4px 10px);\n      margin: var(--media-preview-chapter-margin, 0 0 5px);\n      text-shadow: var(--media-preview-chapter-text-shadow, 0 0 4px rgb(0 0 0 / .75));\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) media-preview-chapter-display,\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) ::slotted(media-preview-chapter-display) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      border-radius: var(--media-preview-chapter-border-radius, 0);\n      padding: var(--media-preview-chapter-padding, 4px 10px 0);\n      margin: var(--media-preview-chapter-margin, 0);\n      min-width: 100%;\n    }\n\n    media-preview-chapter-display[${MediaUIAttributes.MEDIA_PREVIEW_CHAPTER}]:not([${MediaUIAttributes.MEDIA_PREVIEW_CHAPTER}=\"\"]),\n    ::slotted(media-preview-chapter-display[${MediaUIAttributes.MEDIA_PREVIEW_CHAPTER}]:not([${MediaUIAttributes.MEDIA_PREVIEW_CHAPTER}=\"\"])) {\n      display: initial;\n    }\n\n    media-preview-time-display,\n    ::slotted(media-preview-time-display) {\n      line-height: 1.3;\n      min-width: 0;\n      ${/* delay changing these CSS props until the preview box transition is ended */''}\n      transition: min-width 0s, border-radius 0s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-time-background, var(--media-preview-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)))));\n      border-radius: var(--media-preview-time-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius)\n        var(--media-preview-border-radius) var(--media-preview-border-radius));\n      padding: var(--media-preview-time-padding, 4px 10px);\n      margin: var(--media-preview-time-margin, 0 0 10px);\n      text-shadow: var(--media-preview-time-text-shadow, 0 0 4px rgb(0 0 0 / .75));\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) media-preview-time-display,\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) ::slotted(media-preview-time-display) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      border-radius: var(--media-preview-time-border-radius,\n        0 0 var(--media-preview-border-radius) var(--media-preview-border-radius));\n      min-width: 100%;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) {\n      --media-time-range-hover-display: block;\n    }\n  </style>\n  <div id=\"preview-rail\">\n    <slot name=\"preview\" part=\"box preview-box\">\n      <media-preview-thumbnail></media-preview-thumbnail>\n      <media-preview-chapter-display></media-preview-chapter-display>\n      <media-preview-time-display></media-preview-time-display>\n    </slot>\n  </div>\n  <div id=\"current-rail\">\n    <slot name=\"current\" part=\"box current-box\">\n      ${/* Example: add the current time to the playhead\n        <media-time-display></media-time-display> */''}\n    </slot>\n  </div>\n`;\n\nconst calcRangeValueFromTime = (el, time = el.mediaCurrentTime) => {\n  if (Number.isNaN(el.mediaSeekableEnd)) return 0;\n  const value = (time - el.mediaSeekableStart) / (el.mediaSeekableEnd - el.mediaSeekableStart);\n  return Math.max(0, Math.min(value, 1));\n}\n\nconst calcTimeFromRangeValue = (el, value = el.range.valueAsNumber) => {\n  if (Number.isNaN(el.mediaSeekableEnd)) return 0;\n  return (value * (el.mediaSeekableEnd - el.mediaSeekableStart)) + el.mediaSeekableStart;\n}\n\n/**\n * @slot preview - An element that slides along the timeline to the position of the pointer hovering.\n * @slot current - An element that slides along the timeline to the position of the current time.\n *\n * @attr {string} mediabuffered - (read-only) Set to the buffered time ranges.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @csspart box - A CSS part that selects both the preview and current box elements.\n * @csspart preview-box - A CSS part that selects the preview box element.\n * @csspart current-box - A CSS part that selects the current box element.\n *\n * @cssproperty [--media-time-range-display = inline-block] - `display` property of range.\n *\n * @cssproperty --media-preview-transition-property - `transition-property` of range hover preview.\n * @cssproperty --media-preview-transition-duration-out - `transition-duration` out of range hover preview.\n * @cssproperty --media-preview-transition-delay-out - `transition-delay` out of range hover preview.\n * @cssproperty --media-preview-transition-duration-in - `transition-duration` in of range hover preview.\n * @cssproperty --media-preview-transition-delay-in - `transition-delay` in of range hover preview.\n *\n * @cssproperty --media-preview-thumbnail-background - `background` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-box-shadow - `box-shadow` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-width - `max-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-height - `max-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-width - `min-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-height - `min-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border-radius - `border-radius` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border - `border` of range preview thumbnail.\n *\n * @cssproperty --media-preview-chapter-background - `background` of range preview chapter display.\n * @cssproperty --media-preview-chapter-border-radius - `border-radius` of range preview chapter display.\n * @cssproperty --media-preview-chapter-padding - `padding` of range preview chapter display.\n * @cssproperty --media-preview-chapter-margin - `margin` of range preview chapter display.\n * @cssproperty --media-preview-chapter-text-shadow - `text-shadow` of range preview chapter display.\n *\n * @cssproperty --media-preview-time-background - `background` of range preview time display.\n * @cssproperty --media-preview-time-border-radius - `border-radius` of range preview time display.\n * @cssproperty --media-preview-time-padding - `padding` of range preview time display.\n * @cssproperty --media-preview-time-margin - `margin` of range preview time display.\n * @cssproperty --media-preview-time-text-shadow - `text-shadow` of range preview time display.\n */\nclass MediaTimeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_DURATION,\n      MediaUIAttributes.MEDIA_SEEKABLE,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_CHAPTER,\n      MediaUIAttributes.MEDIA_BUFFERED,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      MediaUIAttributes.MEDIA_LOADING,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  #rootNode;\n  #animation;\n  #boxes;\n  #previewTime;\n  #previewBox;\n  #currentBox;\n  #boxPaddingLeft;\n  #boxPaddingRight;\n  #mediaChaptersCues;\n\n  constructor() {\n    super();\n\n    this.container.appendChild(template.content.cloneNode(true));\n\n    // Come back to this feature\n    // this.playIfNotReady = e => {\n    //   this.range.removeEventListener('change', this.playIfNotReady);\n    //   const media = this.media;\n    //   media.play().then(this.setMediaTimeWithRange);\n    // };\n\n    this.#boxes = this.shadowRoot.querySelectorAll('[part~=\"box\"]');\n    this.#previewBox = this.shadowRoot.querySelector('[part~=\"preview-box\"]');\n    this.#currentBox = this.shadowRoot.querySelector('[part~=\"current-box\"]');\n\n    const computedStyle = getComputedStyle(this);\n    this.#boxPaddingLeft = parseInt(computedStyle.getPropertyValue('--media-box-padding-left'));\n    this.#boxPaddingRight = parseInt(computedStyle.getPropertyValue('--media-box-padding-right'));\n\n    this.#animation = new RangeAnimation(this.range, this.#updateRange, 60);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.range.setAttribute('aria-label', nouns.SEEK());\n    this.#toggleRangeAnimation();\n\n    // NOTE: Adding an event listener to an ancestor here.\n    this.#rootNode = this.getRootNode();\n    this.#rootNode?.addEventListener('transitionstart', this);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.#toggleRangeAnimation();\n\n    this.#rootNode?.removeEventListener('transitionstart', this);\n    this.#rootNode = null;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (oldValue == newValue) return;\n\n    if (\n      attrName === MediaUIAttributes.MEDIA_CURRENT_TIME ||\n      attrName === MediaUIAttributes.MEDIA_PAUSED ||\n      attrName === MediaUIAttributes.MEDIA_ENDED ||\n      attrName === MediaUIAttributes.MEDIA_LOADING ||\n      attrName === MediaUIAttributes.MEDIA_DURATION ||\n      attrName === MediaUIAttributes.MEDIA_SEEKABLE\n    ) {\n      this.#animation.update({\n        start: calcRangeValueFromTime(this),\n        duration: this.mediaSeekableEnd - this.mediaSeekableStart,\n        playbackRate: this.mediaPlaybackRate\n      });\n      this.#toggleRangeAnimation();\n      updateAriaValueText(this);\n    }\n    else if (attrName === MediaUIAttributes.MEDIA_BUFFERED) {\n      this.updateBufferedBar();\n    }\n\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.mediaChaptersCues = this.#mediaChaptersCues;\n    }\n  }\n\n  #toggleRangeAnimation() {\n    if (this.#shouldRangeAnimate()) {\n      this.#animation.start();\n    } else {\n      this.#animation.stop();\n    }\n  }\n\n  #shouldRangeAnimate() {\n    return this.isConnected\n      && !this.mediaPaused\n      && !this.mediaLoading\n      && !this.mediaEnded\n      && this.mediaDuration > 0\n      && isElementVisible(this);\n  }\n\n  #updateRange = (value) => {\n    if (this.dragging) return;\n\n    this.range.valueAsNumber = value;\n    this.updateBar();\n  }\n\n  get mediaChaptersCues() {\n    return this.#mediaChaptersCues;\n  }\n\n  set mediaChaptersCues(value) {\n    this.#mediaChaptersCues = value;\n\n    this.updateSegments(this.#mediaChaptersCues?.map(c => ({\n      start: calcRangeValueFromTime(this, c.startTime),\n      end: calcRangeValueFromTime(this, c.endTime),\n    })));\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * @type {boolean} Is the media loading\n   */\n  get mediaLoading() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, value);\n  }\n\n  /**\n   * @type {number}\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, 1);\n  }\n\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  /**\n   * @type {Array<Array<number>>} An array of ranges, each range being an array of two numbers.\n   * e.g. [[1, 2], [3, 4]]\n   */\n  get mediaBuffered() {\n    const buffered = this.getAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n    if (!buffered) return [];\n    return buffered\n      .split(' ')\n      .map((timePair) => timePair.split(':').map((timeStr) => +timeStr));\n  }\n\n  set mediaBuffered(list) {\n    if (!list) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n      return;\n    }\n    const strVal = list.map((tuple) => tuple.join(':')).join(' ');\n    this.setAttribute(MediaUIAttributes.MEDIA_BUFFERED, strVal);\n  }\n\n  /**\n   * Range of values that can be seeked to\n   * @type {Array<number> | undefined} An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time);\n  }\n\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaSeekableEnd() {\n    const [, end = this.mediaDuration] = this.mediaSeekable ?? [];\n    return end;\n  }\n\n  get mediaSeekableStart() {\n    const [start = 0] = this.mediaSeekable ?? [];\n    return start;\n  }\n\n  /**\n   * @type {string | undefined} The url of the preview image\n   */\n  get mediaPreviewImage() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaPreviewTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n\n  /**\n   * @type {boolean | undefined}\n   */\n  get mediaEnded() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED);\n  }\n\n  set mediaEnded(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED, value);\n  }\n\n  /* Add a buffered progress bar */\n  updateBar() {\n    super.updateBar();\n    this.updateBufferedBar();\n    this.updateCurrentBox();\n  }\n\n  updateBufferedBar() {\n    const buffered = this.mediaBuffered;\n    if (!buffered.length) {\n      return;\n    }\n\n    // Find the buffered range that \"contains\" the current time and get its end.\n    // If none, just assume the start of the media timeline for\n    // visualization purposes.\n    let relativeBufferedEnd;\n\n    if (!this.mediaEnded) {\n      const currentTime = this.mediaCurrentTime;\n      const [, bufferedEnd = this.mediaSeekableStart] = buffered.find(\n        ([start, end]) => start <= currentTime && currentTime <= end\n      ) ?? [];\n      relativeBufferedEnd = calcRangeValueFromTime(this, bufferedEnd);\n    } else {\n      // If we've ended, there may be some discrepancies between seekable end, duration, and current time.\n      // In this case, just presume `relativeBufferedEnd` is the maximum possible value for visualization\n      // purposes (CJP.)\n      relativeBufferedEnd = 1;\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#highlight');\n    style.setProperty('width', `${relativeBufferedEnd * 100}%`);\n  }\n\n  updateCurrentBox() {\n    // If there are no elements in the current box no need for expensive style updates.\n    // @ts-ignore\n    if (!this.#currentBox.assignedElements().length) return;\n\n    const boxPos = this.#getBoxPosition(this.#currentBox, this.range.valueAsNumber);\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#current-rail');\n    style.transform = `translateX(${boxPos})`;\n  }\n\n  #getBoxPosition(box, ratio) {\n    let position = `${ratio * 100 * 100}%`;\n\n    // Use offset dimensions to include borders.\n    const boxWidth = box.offsetWidth;\n    if (!boxWidth) return position;\n\n    // Get the element that enforces the bounds for the time range boxes.\n    const bounds =\n      (this.getAttribute('bounds')\n        ? closestComposedNode(this, `#${this.getAttribute('bounds')}`)\n        : this.parentElement) ?? this;\n\n    const rangeRect = this.range.getBoundingClientRect();\n    const mediaBoundsRect = bounds.getBoundingClientRect();\n    const boxMin = (this.#boxPaddingLeft - (rangeRect.left - mediaBoundsRect.left - boxWidth / 2)) / rangeRect.width * 100;\n    const boxMax = (mediaBoundsRect.right - rangeRect.left - boxWidth / 2 - this.#boxPaddingRight) / rangeRect.width * 100;\n\n    if (!Number.isNaN(boxMin)) position = `max(${boxMin * 100}%, ${position})`;\n    if (!Number.isNaN(boxMax)) position = `min(${position}, ${boxMax * 100}%)`;\n\n    return position;\n  }\n\n  handleEvent(evt) {\n    super.handleEvent(evt);\n\n    switch (evt.type) {\n      case 'input':\n        this.#seekRequest();\n        break;\n      case 'pointermove':\n        this.#handlePointerMove(evt);\n        break;\n      case 'pointerup':\n      case 'pointerleave':\n        this.#previewRequest(null);\n        break;\n      case 'transitionstart':\n        if (containsComposedNode(evt.target, this)) {\n          // Wait a tick to be sure the transition has started. Required for Safari.\n          setTimeout(() => this.#toggleRangeAnimation(), 0);\n        }\n        break;\n    }\n  }\n\n  #handlePointerMove(evt) {\n    // @ts-ignore\n    const isOverBoxes = [...this.#boxes].some((b) => evt.composedPath().includes(b));\n\n    if (!this.dragging && (isOverBoxes || !evt.composedPath().includes(this))) {\n      this.#previewRequest(null);\n      return;\n    }\n\n    const duration = this.mediaDuration;\n    // If no duration we can't calculate which time to show\n    if (!duration) return;\n\n    const rangeRect = this.range.getBoundingClientRect();\n    let pointerRatio = (evt.clientX - rangeRect.left) / rangeRect.width;\n    pointerRatio = Math.max(0, Math.min(1, pointerRatio));\n\n    const boxPos = this.#getBoxPosition(this.#previewBox, pointerRatio);\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#preview-rail');\n    style.transform = `translateX(${boxPos})`;\n\n    // At least require a 1s difference before requesting a new preview thumbnail.\n    const diff = Math.round(this.#previewTime) - Math.round(pointerRatio * duration);\n    if (Math.abs(diff) < 1) return;\n\n    this.#previewTime = pointerRatio * duration;\n    this.#previewRequest(this.#previewTime);\n  }\n\n  #previewRequest(detail) {\n    this.dispatchEvent(new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PREVIEW_REQUEST,\n      { composed: true, bubbles: true, detail }\n    ));\n  }\n\n  #seekRequest() {\n    // Cancel progress bar refreshing when seeking.\n    this.#animation.stop();\n\n    const detail = calcTimeFromRangeValue(this);\n    this.dispatchEvent(new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_SEEK_REQUEST,\n      { composed: true, bubbles: true, detail }\n    ));\n  }\n}\n\nif (!globalThis.customElements.get('media-time-range')) {\n  globalThis.customElements.define('media-time-range', MediaTimeRange);\n}\n\nexport default MediaTimeRange;\n", "import { MediaUIAttributes, MediaStateReceiverAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getOrInsertCSSRule\n} from './utils/element-utils.js';\n\n\nexport const Attributes = {\n  LOADING_DELAY: 'loadingdelay'\n};\n\nconst DEFAULT_LOADING_DELAY = 500;\n\nconst template = document.createElement('template');\n\nconst loadingIndicatorIcon = `\n<svg aria-hidden=\"true\" viewBox=\"0 0 100 100\">\n  <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n    <animateTransform\n       attributeName=\"transform\"\n       attributeType=\"XML\"\n       type=\"rotate\"\n       dur=\"1s\"\n       from=\"0 50 50\"\n       to=\"360 50 50\"\n       repeatCount=\"indefinite\" />\n  </path>\n</svg>\n`;\n\ntemplate.innerHTML = /*html*/`\n<style>\n:host {\n  display: var(--media-control-display, var(--media-loading-indicator-display, inline-block));\n  vertical-align: middle;\n  box-sizing: border-box;\n  --_loading-indicator-delay: var(--media-loading-indicator-transition-delay, ${DEFAULT_LOADING_DELAY}ms);\n}\n\n#status {\n  color: rgba(0,0,0,0);\n  width: 0px;\n  height: 0px;\n}\n\n:host slot[name=icon] > *,\n:host ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 0);\n  transition: opacity 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=icon] > *,\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 1);\n  transition: opacity 0.15s var(--_loading-indicator-delay);\n}\n\n:host #status {\n  visibility: var(--media-loading-indicator-opacity, hidden);\n  transition: visibility 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) #status {\n  visibility: var(--media-loading-indicator-opacity, visible);\n  transition: visibility 0.15s var(--_loading-indicator-delay);\n}\n\nsvg, img, ::slotted(svg), ::slotted(img) {\n  width: var(--media-loading-indicator-icon-width);\n  height: var(--media-loading-indicator-icon-height, 100px);\n  fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n  vertical-align: middle;\n}\n</style>\n\n<slot name=\"icon\">${loadingIndicatorIcon}</slot>\n<div id=\"status\" role=\"status\" aria-live=\"polite\">${nouns.MEDIA_LOADING()}</div>\n`;\n\n/**\n * @slot icon - The element shown for when the media is in a buffering state.\n *\n * @attr {string} loadingdelay - Set the delay in ms before the loading animation is shown.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n *\n * @cssproperty --media-loading-indicator-display - `display` property of loading indicator.\n * @cssproperty [ --media-loading-indicator-opacity = 0 ] - `opacity` property of loading indicator. Set to 1 to force it to be visible.\n * @cssproperty [ --media-loading-indicator-transition-delay = 500ms ] - `transition-delay` property of loading indicator. Make sure to include units.\n * @cssproperty --media-loading-indicator-icon-width - `width` of loading icon.\n * @cssproperty [ --media-loading-indicator-icon-height = 100px ] - `height` of loading icon.\n */\nclass MediaLoadingIndicator extends globalThis.HTMLElement {\n  #mediaController;\n  #delay = DEFAULT_LOADING_DELAY;\n\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_LOADING,\n      Attributes.LOADING_DELAY,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n      const indicatorHTML = template.content.cloneNode(true);\n      shadow.appendChild(indicatorHTML);\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.LOADING_DELAY && oldValue !== newValue) {\n      this.loadingDelay = Number(newValue);\n    } else if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  /**\n   * @type {number} Delay in ms\n   */\n  get loadingDelay() {\n    return this.#delay;\n  }\n\n  set loadingDelay(delay) {\n    this.#delay = delay;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty(\n      '--_loading-indicator-delay',\n      `var(--media-loading-indicator-transition-delay, ${delay}ms)`\n    );\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n  /**\n   * @type {boolean} Is the media loading\n   */\n  get mediaLoading() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-loading-indicator')) {\n  globalThis.customElements.define('media-loading-indicator', MediaLoadingIndicator);\n}\n\nexport default MediaLoadingIndicator;\n", "import { globalThis } from './utils/server-safe-globals.js';\nimport { MediaChromeRange } from './media-chrome-range.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setNumericAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst DEFAULT_VOLUME = 1;\n\nconst toVolume = (el) => {\n  if (el.mediaMuted) return 0;\n  return el.mediaVolume;\n};\n\nconst formatAsPercentString = ({ value }) => `${Math.round(value * 100)}%`;\n\n/**\n * @attr {string} mediavolume - (read-only) Set to the media volume.\n * @attr {boolean} mediamuted - (read-only) Set to the media muted state.\n * @attr {string} mediavolumeunavailable - (read-only) Set if changing volume is unavailable.\n *\n * @cssproperty [--media-volume-range-display = inline-block] - `display` property of range.\n */\nclass MediaVolumeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_VOLUME,\n      MediaUIAttributes.MEDIA_MUTED,\n      MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.range.addEventListener('input', () => {\n      const detail = this.range.value;\n      const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_VOLUME_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.range.setAttribute('aria-label', nouns.VOLUME());\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (\n      attrName === MediaUIAttributes.MEDIA_VOLUME ||\n      attrName === MediaUIAttributes.MEDIA_MUTED\n    ) {\n      this.range.valueAsNumber = toVolume(this);\n      this.range.setAttribute(\n        'aria-valuetext',\n        formatAsPercentString(this.range)\n      );\n      this.updateBar();\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get mediaVolume() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, DEFAULT_VOLUME);\n  }\n\n  set mediaVolume(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, value);\n  }\n\n  /**\n   * @type {boolean} Is the media currently muted\n   */\n  get mediaMuted() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED);\n  }\n\n  set mediaMuted(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED, value);\n  }\n\n  /**\n   * @type {string | undefined} The volume unavailability state\n   */\n  get mediaVolumeUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE);\n  }\n\n  set mediaVolumeUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-volume-range')) {\n  globalThis.customElements.define('media-volume-range', MediaVolumeRange);\n}\n\nexport default MediaVolumeRange;\n"],
  "mappings": "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",
  "names": ["js_exports", "__export", "media_airplay_button_default", "media_captions_button_default", "media_cast_button_default", "media_chrome_button_default", "media_chrome_range_default", "media_control_bar_default", "media_controller_default", "media_duration_display_default", "media_fullscreen_button_default", "media_gesture_receiver_default", "media_live_button_default", "media_loading_indicator_default", "media_mute_button_default", "media_pip_button_default", "media_play_button_default", "media_playback_rate_button_default", "media_poster_image_default", "media_preview_chapter_display_default", "media_preview_thumbnail_default", "media_preview_time_display_default", "media_seek_backward_button_default", "media_seek_forward_button_default", "media_time_display_default", "media_time_range_default", "media_volume_range_default", "constants_exports", "labels_default", "time_exports", "constants_exports", "__export", "AttributeToStateChangeEventMap", "AvailabilityStates", "MediaStateChangeEvents", "MediaStateReceiverAttributes", "MediaUIAttributes", "MediaUIEvents", "MediaUIProps", "PointerTypes", "ReadyStates", "StateChangeEventToAttributeMap", "StreamTypes", "TextTrackKinds", "TextTrackModes", "MediaUIPropsEntries", "dictObj", "key", "propName", "mapObj", "eventType", "attrName", "evtType", "nouns", "playbackRate", "verbs", "seekOffset", "labels_default", "time_exports", "__export", "emptyTimeRanges", "formatAsTimePhrase", "formatTime", "serializeTimeRanges", "stringifyRenditionList", "renditions", "stringifyRendition", "stringifyRendition", "rendition", "id", "width", "height", "a", "stringifyAudioTrackList", "audioTracks", "stringifyAudioTrack", "stringifyAudioTrack", "audioTrack", "id", "kind", "language", "label", "constToCamel", "word", "upperFirst", "x", "i", "isValidNumber", "x", "delay", "ms", "resolve", "UnitLabels", "toTimeUnitPhrase", "timeUnitValue", "unitIndex", "unitLabel", "formatAsTimePhrase", "seconds", "isValidNumber", "positiveSeconds", "negative", "secondsDateTime", "index", "x", "formatTime", "guide", "s", "m", "h", "gm", "gh", "emptyTimeRanges", "unsignedIdx", "serializeTimeRanges", "timeRanges", "_", "i", "updateIconText", "svg", "value", "selector", "node", "getAllSlotted", "el", "name", "slotSelector", "slot", "getSlotted", "containsComposedNode", "rootNode", "childNode", "closestComposedNode", "closest", "getDocumentOrShadowRoot", "node", "_a", "rootNode", "isElementVisible", "element", "depth", "el", "style", "getPointProgressOnLine", "x", "y", "p1", "p2", "segment", "distance", "toStart", "toEnd", "getOrInsertCSSRule", "styleParent", "selectorText", "cssRule", "getCSSRule", "st", "insertCSSRule", "predicate", "cssRules", "rule", "_b", "styles", "getNumericAttr", "attrName", "defaultValue", "attrVal", "setNumericAttr", "value", "nextNumericValue", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "nextValue", "EventTarget", "ResizeObserver", "documentShim", "globalThisShim", "media", "isServer", "isShimmed", "key", "GlobalThis", "Document", "template", "Document", "_mediaController", "_clickListener", "_keyupListener", "_keydownListener", "MediaChromeButton", "GlobalThis", "options", "__privateAdd", "__publicField", "key", "__privateGet", "metaKey", "altKey", "buttonHTML", "slotTemplate", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateSet", "style", "getOrInsertCSSRule", "mediaControllerId", "media_chrome_button_default", "MediaChromeButton", "airplayIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaAirplayButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "getStringAttr", "setStringAttr", "evt", "GlobalThis", "MediaUIEvents", "media_airplay_button_default", "enterIcon", "exitIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaCastButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "getStringAttr", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_cast_button_default", "template", "Document", "_mediaController", "MediaGestureReceiver", "GlobalThis", "options", "__privateAdd", "shadow", "buttonHTML", "slotTemplate", "MediaStateReceiverAttributes", "MediaUIAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "getMediaControllerEl", "event", "composedTarget", "clientX", "clientY", "left", "top", "width", "height", "x", "y", "pointerType", "PointerTypes", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "controlEl", "mediaControllerId", "closestComposedNode", "media_gesture_receiver_default", "callbacksMap", "getCallbacks", "element", "callbacks", "observer", "GlobalThis", "entries", "entry", "callback", "observeResize", "unobserveResize", "Attributes", "template", "Document", "MediaUIAttributes", "MEDIA_UI_ATTRIBUTE_NAMES", "defaultBreakpoints", "resizeCallback", "entry", "setBreakpoints", "container", "width", "_a", "breakpoints", "ranges", "createBreakpointMap", "activeBreakpoints", "getBreakpoints", "changed", "name", "evt", "MediaStateChangeEvents", "pairs", "pair", "_pointerDownTimeStamp", "_currentMedia", "_handlePointerMove", "handlePointerMove_fn", "_handlePointerUp", "handlePointerUp_fn", "_setInactive", "setInactive_fn", "_setActive", "setActive_fn", "_scheduleInactive", "scheduleInactive_fn", "MediaContainer", "GlobalThis", "__privateAdd", "__publicField", "mutationCallback", "mutationsList", "media", "mutation", "node", "previousSibling", "wasFirst", "pendingResizeCb", "observeResize", "chainedSlot", "__privateGet", "attrName", "oldValue", "newValue", "__privateSet", "label", "nouns", "event", "__privateMethod", "seconds", "controlsVisible", "el", "_el", "_attr", "_defaultSet", "_tokenSet", "_tokens", "tokens_get", "AttributeTokenList", "el", "attr", "defaultValue", "__privateAdd", "__privateSet", "__privateGet", "_a", "val", "index", "callback", "tokens", "_b", "t", "token", "force", "oldToken", "newToken", "splitTextTracksStr", "textTracksStr", "parseTextTrackStr", "textTrackStr", "kind", "language", "encodedLabel", "label", "parseTextTracksStr", "textTrackLikeObj", "textTrackObj", "parseTracks", "trackOrTracks", "trackObjOrStr", "formatTextTrackObj", "stringifyTextTrackList", "textTracks", "isMatchingPropOf", "key", "value", "obj", "textTrackObjAsPred", "filterObj", "preds", "textTrack", "pred", "updateTracksModeTo", "mode", "tracks", "tracksToUpdate", "isTrackToUpdate", "getTextTracksList", "media", "filterPredOrObj", "filterPred", "areSubsOn", "el", "MediaUIAttributes", "fullscreenApi", "Document", "testMediaEl", "getTestMediaEl", "_a", "_b", "Document", "hasVolumeSupportAsync", "mediaEl", "prevVolume", "delay", "isSafari", "GlobalThis", "hasPipSupport", "hasFullscreenSupport", "fullscreenEnabled", "fullscreenApi", "fullscreenSupported", "pipSupported", "airplaySupported", "castSupported", "volumeSupported", "volumeSupportPromise", "hasVolumeSupportAsync", "supported", "StreamTypeValues", "StreamTypes", "getSubtitleTracks", "controller", "getTextTracksList", "textTrack", "TextTrackKinds", "a", "b", "getShowingSubtitleTracks", "TextTrackModes", "MediaUIStates", "media", "level", "muted", "volume", "_a", "start", "end", "_b", "_c", "timeRanges", "_", "i", "streamType", "defaultType", "duration", "targetLiveWindow", "seekable", "liveEdgeStartOffset", "liveEdgeStart", "event", "Document", "fullscreenApi", "fullscreenEl", "getDocumentOrShadowRoot", "containsComposedNode", "e", "pipElement", "availability", "airplaySupported", "AvailabilityStates", "callback", "error", "castSupported", "fullscreenSupported", "pipSupported", "kind", "label", "language", "MediaUIRequestHandlers", "chaptersTrack", "text", "startTime", "endTime", "audioTrack", "autoSeekToLive", "mediaController", "GlobalThis", "warnNotReady", "err", "cleanup", "tryPip", "time", "_d", "_e", "_f", "MediaUIAttributes", "chapterCue", "c", "thumbsTrack", "thumbCue", "base", "url", "previewCoordsStr", "_media", "tracks", "detail", "tracksToUpdate", "parseTracks", "preferredLanguage", "updateTracksModeTo", "force", "showingSubitleTracks", "subtitlesShowing", "subTrack", "subtitlesPref", "userLangPrefs", "preferredAvailableSubs", "lang", "textTrackA", "textTrackB", "idxA", "idxB", "renditionId", "index", "r", "audioTrackId", "track", "ButtonPressedKeys", "DEFAULT_SEEK_OFFSET", "DEFAULT_TIME", "Attributes", "_hotKeys", "_fullscreenElement", "_rootNode", "_keyUpHandler", "keyUpHandler_fn", "_keyDownHandler", "keyDownHandler_fn", "MediaController", "MediaContainer", "__privateAdd", "AttributeTokenList", "MediaUIStates", "volumeSupportPromise", "MediaUIAttributes", "MediaUIRequestHandlers", "key", "handlerName", "constToCamel", "e", "MediaUIEvents", "MediaUIProps", "_a", "__privateGet", "element", "__privateSet", "attrName", "oldValue", "newValue", "GlobalThis", "el", "media", "mediaSetCallback", "mediaEvents", "rootEvents", "textTracksEvents", "videoRenditionsEvents", "audioTracksEvents", "remoteEvents", "handler", "eventName", "volPref", "mediaUnsetCallback", "stateName", "state", "previousState", "getStateValue", "propagateMediaState", "evt", "AttributeToStateChangeEventMap", "associatedElementSubscriptions", "registerMediaStateReceiver", "unregisterMediaStateReceiver", "unsubscribe", "monitorForMediaStateReceivers", "els", "stateConstName", "stateDetails", "index", "__privateMethod", "_b", "_c", "_d", "currentTimeStr", "currentTime", "detail", "seekOffset", "metaKey", "altKey", "MEDIA_UI_ATTRIBUTE_NAMES", "MEDIA_UI_PROP_NAMES", "getMediaUIAttributesFrom", "child", "observedAttributes", "mediaChromeAttributesList", "MediaStateReceiverAttributes", "hasMediaUIProps", "mediaStateReceiverCandidate", "propName", "isMediaStateReceiver", "serializeTuple", "tuple", "CustomAttrSerializer", "stringifyTextTrackList", "tuples", "coords", "stringifyRenditionList", "stringifyAudioTrackList", "setAttr", "attrValue", "delay", "setBooleanAttr", "setNumericAttr", "setStringAttr", "val", "isMediaSlotElementDescendant", "traverseForMediaStateReceivers", "rootNode", "mediaStateReceiverCallback", "traverseForMediaStateReceiversSync", "children", "shadowChildren", "name", "relevantAttrs", "registerMediaStateReceiverHandler", "unregisterMediaStateReceiverHandler", "mutationCallback", "mutationsList", "mutationRecord", "addedNodes", "removedNodes", "type", "target", "attributeName", "node", "prevSlotted", "slotChangeHandler", "event", "slotEl", "observer", "media_controller_default", "MediaController", "template", "Document", "_mediaController", "_isInputTarget", "_startpoint", "_endpoint", "_cssRules", "_segments", "_onFocusIn", "_onFocusOut", "_updateComputedStyles", "_updateActiveSegment", "updateActiveSegment_fn", "_enableUserEvents", "enableUserEvents_fn", "_disableUserEvents", "disableUserEvents_fn", "_handlePointerDown", "handlePointerDown_fn", "_handlePointerEnter", "handlePointerEnter_fn", "_handlePointerUp", "handlePointerUp_fn", "_handlePointerLeave", "handlePointerLeave_fn", "_handlePointerMove", "handlePointerMove_fn", "MediaChromeRange", "GlobalThis", "__privateAdd", "style", "getOrInsertCSSRule", "clipping", "__privateSet", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateMethod", "mediaControllerId", "observeResize", "unobserveResize", "evt", "rangePercent", "segments", "insertCSSRule", "normalized", "s", "lastMarker", "i", "marker", "isFirst", "isLast", "x", "width", "segmentEl", "cssRule", "pointerRatio", "getPointProgressOnLine", "rule", "selectorText", "start", "arr", "end", "media_chrome_range_default", "MediaChromeRange", "template", "Document", "_mediaController", "MediaControlBar", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "media_control_bar_default", "template", "Document", "_mediaController", "MediaTextDisplay", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "style", "getOrInsertCSSRule", "mediaControllerId", "media_text_display_default", "MediaTextDisplay", "_slot", "MediaDurationDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "time", "setNumericAttr", "GlobalThis", "media_duration_display_default", "Attributes", "CombinedAttributes", "MediaUIAttributes", "ButtonPressedKeys", "DEFAULT_TIMES_SEP", "formatTimesLabel", "el", "timesSep", "_a", "_b", "_c", "_d", "showRemaining", "showDuration", "currentTime", "seekableEnd", "endTime", "timeLabel", "formatTime", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "currentTimePhrase", "formatAsTimePhrase", "totalTimePhrase", "fullPhrase", "_slot", "MediaTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "style", "getOrInsertCSSRule", "nouns", "keyUpHandler", "evt", "key", "metaKey", "altKey", "attrName", "oldValue", "newValue", "getBooleanAttr", "show", "setBooleanAttr", "notoggle", "getNumericAttr", "time", "setNumericAttr", "seekable", "range", "timesLabel", "GlobalThis", "media_time_display_default", "ccIconOn", "ccIconOff", "slotTemplate", "Document", "updateAriaChecked", "el", "areSubsOn", "MediaCaptionsButton", "MediaChromeButton", "MediaUIAttributes", "options", "nouns", "attrName", "oldValue", "newValue", "getSubtitlesListAttr", "list", "setSubtitlesListAttr", "GlobalThis", "MediaUIEvents", "attrVal", "parseTextTracksStr", "newValStr", "stringifyTextTrackList", "media_captions_button_default", "Attributes", "DEFAULT_SEEK_OFFSET", "forwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekForwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "getNumericAttr", "attrName", "_oldValue", "newValue", "value", "setNumericAttr", "verbs", "updateIconText", "getSlotted", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_forward_button_default", "enterFullscreenIcon", "exitFullscreenIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaFullscreenButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_fullscreen_button_default", "MEDIA_TIME_IS_LIVE", "MEDIA_PAUSED", "MediaUIAttributes", "MEDIA_SEEK_TO_LIVE_REQUEST", "MEDIA_PLAY_REQUEST", "MediaUIEvents", "indicatorSVG", "slotTemplate", "Document", "updateAriaAttributes", "el", "isPausedOrNotLive", "label", "verbs", "MediaLiveButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "GlobalThis", "media_live_button_default", "MEDIA_VOLUME_LEVEL", "MediaUIAttributes", "offIcon", "lowIcon", "highIcon", "slotTemplate", "Document", "updateAriaLabel", "el", "label", "verbs", "MediaMuteButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_mute_button_default", "pipIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaPipButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_pip_button_default", "playIcon", "pauseIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaPlayButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_play_button_default", "Attributes", "DEFAULT_RATES", "DEFAULT_RATE", "slotTemplate", "Document", "_rates", "MediaPlaybackRateButton", "MediaChromeButton", "options", "__privateAdd", "AttributeTokenList", "MediaUIAttributes", "attrName", "oldValue", "newValue", "__privateGet", "newPlaybackRate", "playbackRate", "nouns", "value", "getNumericAttr", "setNumericAttr", "_a", "_b", "availableRates", "str", "a", "b", "detail", "r", "evt", "GlobalThis", "MediaUIEvents", "media_playback_rate_button_default", "Attributes", "template", "Document", "unsetBackgroundImage", "el", "setBackgroundImage", "image", "MediaPosterImage", "GlobalThis", "attrName", "_oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "media_poster_image_default", "Attributes", "DEFAULT_SEEK_OFFSET", "backwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekBackwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "getNumericAttr", "attrName", "_oldValue", "newValue", "value", "setNumericAttr", "verbs", "updateIconText", "getSlotted", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_backward_button_default", "_slot", "MediaPreviewTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "value", "setNumericAttr", "GlobalThis", "media_preview_time_display_default", "template", "Document", "_mediaController", "MediaPreviewThumbnail", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "MediaUIAttributes", "_a", "_b", "_c", "mediaControllerId", "__privateSet", "__privateGet", "attrName", "oldValue", "newValue", "_d", "_e", "getStringAttr", "value", "setStringAttr", "attrVal", "coord", "coords", "previewImage", "x", "y", "w", "h", "src", "computedStyle", "maxWidth", "maxHeight", "minWidth", "minHeight", "maxRatio", "minRatio", "isScalingDown", "scale", "style", "getOrInsertCSSRule", "imgStyle", "img", "extremum", "resize", "media_preview_thumbnail_default", "_slot", "MediaPreviewChapterDisplay", "media_text_display_default", "__privateAdd", "__privateSet", "MediaUIAttributes", "attrName", "oldValue", "newValue", "__privateGet", "getStringAttr", "value", "setStringAttr", "GlobalThis", "media_preview_chapter_display_default", "_range", "_startTime", "_previousTime", "_deltaTime", "_frameCount", "_updateTimestamp", "_updateStartValue", "_lastRangeIncrease", "_id", "_animate", "RangeAnimation", "range", "callback", "fps", "__privateAdd", "now", "__privateSet", "__privateGet", "fpsInterval", "__privateWrapper", "delta", "value", "start", "duration", "playbackRate", "increase", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "el", "range", "currentTimePhrase", "formatAsTimePhrase", "calcTimeFromRangeValue", "totalTimePhrase", "fullPhrase", "template", "Document", "MediaUIAttributes", "calcRangeValueFromTime", "time", "value", "_rootNode", "_animation", "_boxes", "_previewTime", "_previewBox", "_currentBox", "_boxPaddingLeft", "_boxPaddingRight", "_mediaChaptersCues", "_toggleRangeAnimation", "toggleRangeAnimation_fn", "_shouldRangeAnimate", "shouldRangeAnimate_fn", "_updateRange", "_getBoxPosition", "getBoxPosition_fn", "_handlePointerMove", "handlePointerMove_fn", "_previewRequest", "previewRequest_fn", "_seekRequest", "seekRequest_fn", "MediaTimeRange", "MediaChromeRange", "__privateAdd", "__privateSet", "computedStyle", "RangeAnimation", "__privateGet", "_a", "nouns", "__privateMethod", "attrName", "oldValue", "newValue", "c", "getBooleanAttr", "setBooleanAttr", "getNumericAttr", "setNumericAttr", "buffered", "timePair", "timeStr", "list", "strVal", "tuple", "seekable", "end", "start", "getStringAttr", "setStringAttr", "relativeBufferedEnd", "currentTime", "bufferedEnd", "style", "getOrInsertCSSRule", "boxPos", "evt", "containsComposedNode", "isElementVisible", "box", "ratio", "position", "boxWidth", "bounds", "closestComposedNode", "rangeRect", "mediaBoundsRect", "boxMin", "boxMax", "isOverBoxes", "b", "duration", "pointerRatio", "diff", "detail", "GlobalThis", "MediaUIEvents", "media_time_range_default", "Attributes", "DEFAULT_LOADING_DELAY", "template", "Document", "loadingIndicatorIcon", "MediaUIAttributes", "nouns", "_mediaController", "_delay", "MediaLoadingIndicator", "GlobalThis", "__privateAdd", "shadow", "indicatorHTML", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "delay", "style", "getOrInsertCSSRule", "getBooleanAttr", "value", "setBooleanAttr", "media_loading_indicator_default", "DEFAULT_VOLUME", "toVolume", "el", "formatAsPercentString", "value", "MediaVolumeRange", "MediaChromeRange", "MediaUIAttributes", "detail", "evt", "GlobalThis", "MediaUIEvents", "nouns", "attrName", "oldValue", "newValue", "getNumericAttr", "setNumericAttr", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "media_volume_range_default"]
}
