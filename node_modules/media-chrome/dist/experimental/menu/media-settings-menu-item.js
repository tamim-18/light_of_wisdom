var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
import { globalThis } from "../../utils/server-safe-globals.js";
import { MediaChromeMenuItem } from "./media-chrome-menu-item.js";
const template = document.createElement("template");
template.innerHTML = MediaChromeMenuItem.template.innerHTML + `
  <style>
    slot:not([name="submenu"]) {
      opacity: var(--media-settings-menu-item-opacity, var(--media-menu-item-opacity));
    }

    :host([aria-expanded="true"]:hover) {
      background: transparent;
    }
  </style>
`;
template.content.querySelector('slot[name="suffix"]').innerHTML = `
  <svg aria-hidden="true" viewBox="0 0 20 24">
    <path d="m8.12 17.585-.742-.669 4.2-4.665-4.2-4.666.743-.669 4.803 5.335-4.803 5.334Z"/>
  </svg>
`;
class MediaSettingsMenuItem extends MediaChromeMenuItem {
}
__publicField(MediaSettingsMenuItem, "template", template);
if (!globalThis.customElements.get("media-settings-menu-item")) {
  globalThis.customElements.define("media-settings-menu-item", MediaSettingsMenuItem);
}
var media_settings_menu_item_default = MediaSettingsMenuItem;
export {
  MediaSettingsMenuItem,
  media_settings_menu_item_default as default
};
