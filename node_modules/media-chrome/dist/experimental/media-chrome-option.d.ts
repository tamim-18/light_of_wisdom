export namespace Attributes {
    const VALUE: string;
    const SELECTED: string;
    const DISABLED: string;
}
export default MediaChromeOption;
declare const MediaChromeOption_base: any;
/**
 * @slot - Default slotted elements.
 *
 * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.
 *
 * @cssproperty --media-option-transition - `transition` of option.
 * @cssproperty --media-option-selected-background - `background` of selected option.
 * @cssproperty --media-option-outline - `outline` option.
 * @cssproperty --media-option-outline-offset - `outline-offset` of option.
 * @cssproperty --media-option-hover-background - `background` of hovered option.
 * @cssproperty --media-option-hover-outline - `outline` of hovered option.
 * @cssproperty --media-option-hover-outline-offset - `outline-offset` of hovered option.
 * @cssproperty --media-option-focus-shadow - `box-shadow` of the :focus-visible state
 */
export class MediaChromeOption extends MediaChromeOption_base {
    [x: string]: any;
    static get observedAttributes(): string[];
    set value(arg: any);
    get value(): any;
    get text(): any;
    set selected(arg: boolean);
    get selected(): boolean;
    enable(): void;
    disable(): void;
    attributeChangedCallback(attrName: any, oldValue: any, newValue: any): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    handleClick(): void;
    #private;
}
