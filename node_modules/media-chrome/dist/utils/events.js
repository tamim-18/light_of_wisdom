var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class InvokeEvent extends Event {
  constructor({ action = "auto", relatedTarget, ...options }) {
    super("invoke", options);
    __publicField(this, "action");
    __publicField(this, "relatedTarget");
    this.action = action;
    this.relatedTarget = relatedTarget;
  }
}
class ToggleEvent extends Event {
  constructor({ newState, oldState, ...options }) {
    super("toggle", options);
    __publicField(this, "newState");
    __publicField(this, "oldState");
    this.newState = newState;
    this.oldState = oldState;
  }
}
export {
  InvokeEvent,
  ToggleEvent
};
