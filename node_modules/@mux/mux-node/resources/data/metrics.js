"use strict";
// File generated from our OpenAPI spec by Stainless.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BreakdownValuesBasePage = exports.Metrics = void 0;
const resource_1 = require("@mux/mux-node/resource");
const core_1 = require("@mux/mux-node/core");
const MetricsAPI = __importStar(require("@mux/mux-node/resources/data/metrics"));
const pagination_1 = require("@mux/mux-node/pagination");
class Metrics extends resource_1.APIResource {
    list(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.list({}, query);
        }
        return this._client.get('/data/v1/metrics/comparison', { query, ...options });
    }
    getInsights(metricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getInsights(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/insights`, { query, ...options });
    }
    getOverallValues(metricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getOverallValues(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/overall`, { query, ...options });
    }
    getTimeseries(metricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.getTimeseries(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/timeseries`, { query, ...options });
    }
    listBreakdownValues(metricId, query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.listBreakdownValues(metricId, {}, query);
        }
        return this._client.getAPIList(`/data/v1/metrics/${metricId}/breakdown`, BreakdownValuesBasePage, {
            query,
            ...options,
        });
    }
}
exports.Metrics = Metrics;
class BreakdownValuesBasePage extends pagination_1.BasePage {
}
exports.BreakdownValuesBasePage = BreakdownValuesBasePage;
(function (Metrics) {
    Metrics.BreakdownValuesBasePage = MetricsAPI.BreakdownValuesBasePage;
})(Metrics = exports.Metrics || (exports.Metrics = {}));
//# sourceMappingURL=metrics.js.map