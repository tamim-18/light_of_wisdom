// File generated from our OpenAPI spec by Stainless.
import { APIResource } from '@mux/mux-node/resource';
import { isRequestOptions } from '@mux/mux-node/core';
import * as MetricsAPI from '@mux/mux-node/resources/data/metrics';
import { BasePage } from '@mux/mux-node/pagination';
export class Metrics extends APIResource {
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.get('/data/v1/metrics/comparison', { query, ...options });
    }
    getInsights(metricId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.getInsights(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/insights`, { query, ...options });
    }
    getOverallValues(metricId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.getOverallValues(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/overall`, { query, ...options });
    }
    getTimeseries(metricId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.getTimeseries(metricId, {}, query);
        }
        return this._client.get(`/data/v1/metrics/${metricId}/timeseries`, { query, ...options });
    }
    listBreakdownValues(metricId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.listBreakdownValues(metricId, {}, query);
        }
        return this._client.getAPIList(`/data/v1/metrics/${metricId}/breakdown`, BreakdownValuesBasePage, {
            query,
            ...options,
        });
    }
}
export class BreakdownValuesBasePage extends BasePage {
}
(function (Metrics) {
    Metrics.BreakdownValuesBasePage = MetricsAPI.BreakdownValuesBasePage;
})(Metrics || (Metrics = {}));
//# sourceMappingURL=metrics.mjs.map