"use strict";
// File generated from our OpenAPI spec by Stainless.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Data = void 0;
const resource_1 = require("@mux/mux-node/resource");
const DimensionsAPI = __importStar(require("@mux/mux-node/resources/data/dimensions"));
const ErrorsAPI = __importStar(require("@mux/mux-node/resources/data/errors"));
const ExportsAPI = __importStar(require("@mux/mux-node/resources/data/exports"));
const FiltersAPI = __importStar(require("@mux/mux-node/resources/data/filters"));
const IncidentsAPI = __importStar(require("@mux/mux-node/resources/data/incidents"));
const MetricsAPI = __importStar(require("@mux/mux-node/resources/data/metrics"));
const RealTimeAPI = __importStar(require("@mux/mux-node/resources/data/real-time"));
const VideoViewsAPI = __importStar(require("@mux/mux-node/resources/data/video-views"));
const MonitoringAPI = __importStar(require("@mux/mux-node/resources/data/monitoring/monitoring"));
class Data extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.dimensions = new DimensionsAPI.Dimensions(this._client);
        this.monitoring = new MonitoringAPI.Monitoring(this._client);
        this.errors = new ErrorsAPI.Errors(this._client);
        this.exports = new ExportsAPI.Exports(this._client);
        this.filters = new FiltersAPI.Filters(this._client);
        this.incidents = new IncidentsAPI.Incidents(this._client);
        this.metrics = new MetricsAPI.Metrics(this._client);
        this.realTime = new RealTimeAPI.RealTime(this._client);
        this.videoViews = new VideoViewsAPI.VideoViews(this._client);
    }
}
exports.Data = Data;
(function (Data) {
    Data.Dimensions = DimensionsAPI.Dimensions;
    Data.DimensionValuesBasePage = DimensionsAPI.DimensionValuesBasePage;
    Data.Monitoring = MonitoringAPI.Monitoring;
    Data.Errors = ErrorsAPI.Errors;
    Data.Exports = ExportsAPI.Exports;
    Data.Filters = FiltersAPI.Filters;
    Data.FilterValuesBasePage = FiltersAPI.FilterValuesBasePage;
    Data.Incidents = IncidentsAPI.Incidents;
    Data.IncidentsBasePage = IncidentsAPI.IncidentsBasePage;
    Data.Metrics = MetricsAPI.Metrics;
    Data.BreakdownValuesBasePage = MetricsAPI.BreakdownValuesBasePage;
    Data.RealTime = RealTimeAPI.RealTime;
    Data.VideoViews = VideoViewsAPI.VideoViews;
    Data.AbridgedVideoViewsBasePage = VideoViewsAPI.AbridgedVideoViewsBasePage;
})(Data = exports.Data || (exports.Data = {}));
//# sourceMappingURL=data.js.map