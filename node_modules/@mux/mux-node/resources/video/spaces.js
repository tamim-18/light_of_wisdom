"use strict";
// File generated from our OpenAPI spec by Stainless.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpacesBasePage = exports.Spaces = void 0;
const resource_1 = require("@mux/mux-node/resource");
const core_1 = require("@mux/mux-node/core");
const SpacesAPI = __importStar(require("@mux/mux-node/resources/video/spaces"));
const pagination_1 = require("@mux/mux-node/pagination");
class Spaces extends resource_1.APIResource {
    /**
     * Create a new space. Spaces are used to build
     * [real-time video applications.](https://mux.com/real-time-video)
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    create(body, options) {
        return this._client.post('/video/v1/spaces', { body, ...options })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieves the details of a space that has previously been created. Supply the
     * unique space ID that was returned from your create space request, and Mux will
     * return the information about the corresponding space. The same information is
     * returned when creating a space.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    retrieve(spaceId, options) {
        return this._client.get(`/video/v1/spaces/${spaceId}`, options)._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/spaces', SpacesBasePage, { query, ...options });
    }
    /**
     * Deletes a space. Spaces can only be deleted when `idle`.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    delete(spaceId, options) {
        return this._client.delete(`/video/v1/spaces/${spaceId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Creates a new broadcast. Broadcasts are used to create composited versions of
     * your space, which can be broadcast to live streams. **Note:** By default only a
     * single broadcast destination can be specified. Contact Mux support if you need
     * more.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    createBroadcast(spaceId, body, options) {
        return this._client.post(`/video/v1/spaces/${spaceId}/broadcasts`, { body, ...options })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Deletes a single broadcast of a specific space. Broadcasts can only be deleted
     * when `idle`.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    deleteBroadcast(spaceId, broadcastId, options) {
        return this._client.delete(`/video/v1/spaces/${spaceId}/broadcasts/${broadcastId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Retrieves the details of a broadcast of a specific space.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    retrieveBroadcast(spaceId, broadcastId, options) {
        return this._client.get(`/video/v1/spaces/${spaceId}/broadcasts/${broadcastId}`, options)._thenUnwrap((obj) => obj.data);
    }
    /**
     * Starts broadcasting a space to the associated destination. Broadcasts can only
     * be started when the space is `active` (when there are participants connected).
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    startBroadcast(spaceId, broadcastId, options) {
        return this._client.post(`/video/v1/spaces/${spaceId}/broadcasts/${broadcastId}/start`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Stops broadcasting a space, causing the destination live stream to become idle.
     * This API also automatically calls `complete` on the destination live stream.
     * Broadcasts are also automatically stopped when a space becomes idle.
     *
     * @deprecated Mux Real-Time Video has been sunset and is unavailable for new usage.
     * Existing access will end on December 31, 2023.
     * We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
     */
    stopBroadcast(spaceId, broadcastId, options) {
        return this._client.post(`/video/v1/spaces/${spaceId}/broadcasts/${broadcastId}/stop`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
}
exports.Spaces = Spaces;
class SpacesBasePage extends pagination_1.BasePage {
}
exports.SpacesBasePage = SpacesBasePage;
(function (Spaces) {
    Spaces.SpacesBasePage = SpacesAPI.SpacesBasePage;
})(Spaces = exports.Spaces || (exports.Spaces = {}));
//# sourceMappingURL=spaces.js.map