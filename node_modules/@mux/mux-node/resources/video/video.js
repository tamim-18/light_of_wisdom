"use strict";
// File generated from our OpenAPI spec by Stainless.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Video = void 0;
const resource_1 = require("@mux/mux-node/resource");
const AssetsAPI = __importStar(require("@mux/mux-node/resources/video/assets"));
const DeliveryUsageAPI = __importStar(require("@mux/mux-node/resources/video/delivery-usage"));
const LiveStreamsAPI = __importStar(require("@mux/mux-node/resources/video/live-streams"));
const PlaybackIDsAPI = __importStar(require("@mux/mux-node/resources/video/playback-ids"));
const PlaybackRestrictionsAPI = __importStar(require("@mux/mux-node/resources/video/playback-restrictions"));
const SpacesAPI = __importStar(require("@mux/mux-node/resources/video/spaces"));
const TranscriptionVocabulariesAPI = __importStar(require("@mux/mux-node/resources/video/transcription-vocabularies"));
const UploadsAPI = __importStar(require("@mux/mux-node/resources/video/uploads"));
class Video extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.assets = new AssetsAPI.Assets(this._client);
        this.deliveryUsage = new DeliveryUsageAPI.DeliveryUsage(this._client);
        this.liveStreams = new LiveStreamsAPI.LiveStreams(this._client);
        this.playbackIds = new PlaybackIDsAPI.PlaybackIDs(this._client);
        this.playbackRestrictions = new PlaybackRestrictionsAPI.PlaybackRestrictions(this._client);
        this.spaces = new SpacesAPI.Spaces(this._client);
        this.transcriptionVocabularies = new TranscriptionVocabulariesAPI.TranscriptionVocabularies(this._client);
        this.uploads = new UploadsAPI.Uploads(this._client);
    }
}
exports.Video = Video;
(function (Video) {
    Video.Assets = AssetsAPI.Assets;
    Video.AssetsBasePage = AssetsAPI.AssetsBasePage;
    Video.DeliveryUsage = DeliveryUsageAPI.DeliveryUsage;
    Video.DeliveryReportsPageWithTotal = DeliveryUsageAPI.DeliveryReportsPageWithTotal;
    Video.LiveStreams = LiveStreamsAPI.LiveStreams;
    Video.LiveStreamsBasePage = LiveStreamsAPI.LiveStreamsBasePage;
    Video.PlaybackIDs = PlaybackIDsAPI.PlaybackIDs;
    Video.PlaybackRestrictions = PlaybackRestrictionsAPI.PlaybackRestrictions;
    Video.PlaybackRestrictionsBasePage = PlaybackRestrictionsAPI.PlaybackRestrictionsBasePage;
    Video.Spaces = SpacesAPI.Spaces;
    Video.SpacesBasePage = SpacesAPI.SpacesBasePage;
    Video.TranscriptionVocabularies = TranscriptionVocabulariesAPI.TranscriptionVocabularies;
    Video.TranscriptionVocabulariesBasePage = TranscriptionVocabulariesAPI.TranscriptionVocabulariesBasePage;
    Video.Uploads = UploadsAPI.Uploads;
    Video.UploadsBasePage = UploadsAPI.UploadsBasePage;
})(Video = exports.Video || (exports.Video = {}));
//# sourceMappingURL=video.js.map