// File generated from our OpenAPI spec by Stainless.
import { APIResource } from '@mux/mux-node/resource';
import { isRequestOptions } from '@mux/mux-node/core';
import * as PlaybackRestrictionsAPI from '@mux/mux-node/resources/video/playback-restrictions';
import { BasePage } from '@mux/mux-node/pagination';
export class PlaybackRestrictions extends APIResource {
    /**
     * Create a new Playback Restriction.
     */
    create(body, options) {
        return this._client.post('/video/v1/playback-restrictions', { body, ...options })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieves a Playback Restriction associated with the unique identifier.
     */
    retrieve(playbackRestrictionId, options) {
        return this._client.get(`/video/v1/playback-restrictions/${playbackRestrictionId}`, options)._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/playback-restrictions', PlaybackRestrictionsBasePage, {
            query,
            ...options,
        });
    }
    /**
     * Deletes a single Playback Restriction.
     */
    delete(playbackRestrictionId, options) {
        return this._client.delete(`/video/v1/playback-restrictions/${playbackRestrictionId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Allows you to modify the list of domains or change how Mux validates playback
     * requests without the `Referer` HTTP header. The Referrer restriction fully
     * replaces the old list with this new list of domains.
     */
    updateReferrer(playbackRestrictionId, body, options) {
        return this._client.put(`/video/v1/playback-restrictions/${playbackRestrictionId}/referrer`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
}
export class PlaybackRestrictionsBasePage extends BasePage {
}
(function (PlaybackRestrictions) {
    PlaybackRestrictions.PlaybackRestrictionsBasePage = PlaybackRestrictionsAPI.PlaybackRestrictionsBasePage;
})(PlaybackRestrictions || (PlaybackRestrictions = {}));
//# sourceMappingURL=playback-restrictions.mjs.map