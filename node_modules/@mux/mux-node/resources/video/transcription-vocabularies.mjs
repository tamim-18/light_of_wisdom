// File generated from our OpenAPI spec by Stainless.
import { APIResource } from '@mux/mux-node/resource';
import { isRequestOptions } from '@mux/mux-node/core';
import * as TranscriptionVocabulariesAPI from '@mux/mux-node/resources/video/transcription-vocabularies';
import { BasePage } from '@mux/mux-node/pagination';
export class TranscriptionVocabularies extends APIResource {
    /**
     * Create a new Transcription Vocabulary.
     */
    create(body, options) {
        return this._client.post('/video/v1/transcription-vocabularies', { body, ...options })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieves the details of a Transcription Vocabulary that has previously been
     * created. Supply the unique Transcription Vocabulary ID and Mux will return the
     * corresponding Transcription Vocabulary information. The same information is
     * returned when creating a Transcription Vocabulary.
     */
    retrieve(transcriptionVocabularyId, options) {
        return this._client.get(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, options)._thenUnwrap((obj) => obj.data);
    }
    /**
     * Updates the details of a previously-created Transcription Vocabulary. Updates to
     * Transcription Vocabularies are allowed while associated live streams are active.
     * However, updates will not be applied to those streams while they are active.
     */
    update(transcriptionVocabularyId, body, options) {
        return this._client.put(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/transcription-vocabularies', TranscriptionVocabulariesBasePage, { query, ...options });
    }
    /**
     * Deletes a Transcription Vocabulary. The Transcription Vocabulary's ID will be
     * disassociated from any live streams using it. Transcription Vocabularies can be
     * deleted while associated live streams are active. However, the words and phrases
     * in the deleted Transcription Vocabulary will remain attached to those streams
     * while they are active.
     */
    delete(transcriptionVocabularyId, options) {
        return this._client.delete(`/video/v1/transcription-vocabularies/${transcriptionVocabularyId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
}
export class TranscriptionVocabulariesBasePage extends BasePage {
}
(function (TranscriptionVocabularies) {
    TranscriptionVocabularies.TranscriptionVocabulariesBasePage = TranscriptionVocabulariesAPI.TranscriptionVocabulariesBasePage;
})(TranscriptionVocabularies || (TranscriptionVocabularies = {}));
//# sourceMappingURL=transcription-vocabularies.mjs.map